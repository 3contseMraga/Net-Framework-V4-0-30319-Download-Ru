以下示例为Win7系统上的方法，其它系统可能代码有所不同，但思路一致

1.使用windbg载入目标程序，程序会停在系统断点处：
(a34.a38): Break instruction exception - code 80000003 (first chance)
eax=00000000 ebx=00000000 ecx=0012fb0c edx=771b64f4 esi=fffffffe edi=00000000
eip=7720e60e esp=0012fb28 ebp=0012fb54 iopl=0         nv up ei pl zr na pe nc
cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000246
ntdll!LdrpDoDebuggerBreak+0x2c:
7720e60e cc              int     3

2.单步继续跟踪，一直到返回到ntdll!LdrpInitializeProcess函数中，注意以下代码
0:000> u 771d9020 
ntdll!LdrpInitializeProcess+0x1266:
771d9020 7530            jne     ntdll!LdrpInitializeProcess+0x1299 (771d9052)
771d9022 57              push    edi
771d9023 6a04            push    4
771d9025 8d4594          lea     eax,[ebp-6Ch]
771d9028 50              push    eax
771d9029 6a22            push    22h
771d902b 56              push    esi
771d902c e85fc4fdff      call    ntdll!ZwQueryInformationProcess (771b5490)
771d9031 85c0            test    eax,eax
771d9033 7c0b            jl      ntdll!LdrpInitializeProcess+0x1287 (771d9040)
771d9035 8b4594          mov     eax,dword ptr [ebp-6Ch]
771d9038 a808            test    al,8
771d903a 0f8596520100    jne     ntdll!LdrpInitializeProcess+0x1282 (771ee2d6)
771d9040 a1f002fe7f      mov     eax,dword ptr [SharedUserData+0x2f0 (7ffe02f0)]
771d9045 c1e806          shr     eax,6
771d9048 f7d0            not     eax
771d904a 83e001          and     eax,1
771d904d a3b0cc2477      mov     dword ptr [ntdll!RtlpProcessECVDisabled (7724ccb0)],eax //给RtlpProcessECVDisabled变量赋值

在mov     dword ptr [ntdll!RtlpProcessECVDisabled (7724ccb0)],eax这一句下断点
如果系统未开启SEHOP保护，此时eax值为1，使用命令"r eax=0"手动修改寄存器的值为0
这样，ntdll!RtlpProcessECVDisabled就为设置为0了，也就是启用了SEHOP机制，且仅为当前被调试进程有效

3.下断点"bp ntdll!_RtlUserThreadStart",然后继续运行程序
0:000> g
Breakpoint 0 hit
eax=004013b0 ebx=7ffdb000 ecx=00000000 edx=00000000 esi=00000000 edi=00000000
eip=771cb3ad esp=0012fff0 ebp=00000000 iopl=0         nv up ei pl nz na po nc
cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
ntdll!_RtlUserThreadStart:
771cb3ad 8bff            mov     edi,edi
0:000> u eip
ntdll!_RtlUserThreadStart:
771cb3ad 8bff            mov     edi,edi
771cb3af 55              push    ebp
771cb3b0 8bec            mov     ebp,esp
771cb3b2 51              push    ecx
771cb3b3 51              push    ecx
771cb3b4 8d45f8          lea     eax,[ebp-8]
771cb3b7 50              push    eax
771cb3b8 e8d5ffffff      call    ntdll!RtlInitializeExceptionChain (771cb392)  //进入该函数进行跟踪
771cb3bd ff750c          push    dword ptr [ebp+0Ch]
771cb3c0 ff7508          push    dword ptr [ebp+8]
771cb3c3 e806000000      call    ntdll!__RtlUserThreadStart (771cb3ce)
771cb3c8 cc              int     3

4.在发生异常之后，下断点"bp ntdll!RtlDispatchException"，观察开启SEHOP之后的验证



