﻿ABEND	/a'bend/,/*-bend'/ /n./ABＥＮＤ 非正常结束\n这个是Abnormal End的缩写。指软件的非正常结束。这个词来自IBM 360所提示的一个错误信息。它通常被黑客们调侃式地使用，有些程序员极正式的使用该词。这个词通常以大写形式出现，但是有时候也以小写的形式出现。黑客们通常会这给你解释该词的来源：在德语中abend有傍晚的意思，而系统操作员通常在周五晚执行这种操作。 
accumulator	/n. obs./\n1，寄存器的旧称，现在仍作为寄存器的同义词来使用。现在使用该词时则表明使用该词的人是个老手或者正在讨论的体系结构比较古老。这个词的全称形式基本上从来没有用来指代微处理器的寄存器。例如，寄存器通常用字母a来表示，而这个A是来自accumulator中的Ａ，而并非arithmetic中的Ａ.令人困惑的是这个Ａ有时候也来自英文单词address中的A，比如在摩托罗拉680x0系列芯片中，则是这种情况。\n2，指代用于算术或者逻辑运算的寄存器，特别指那些用于累加或者累计的寄存器。 \n3，指代一个人的收文蓝。例如:"你想将来还重新审阅它吗？将它放入accumulator吧。” 
ACK	1，确认、认可。它是Acknowledgement的一种简写，用于注册某个人或物的存在，是{ping}或{ENQ}命令所期望的回复。\n2，叹词，表示一种令人惊讶的厌恶（从一部漫画而来），有些诙谐的意思，通常不会全部大写并且紧跟一个感叹号。\n3，用于表示你已经明白了对方的意思。\n4，"ACK?"这种格式还可以用于询问对方是不是还在，常见于邮件或网络对话中。
Acme	/n./提供奇怪的、复杂的并且无功能的小工具的典型商店——Rube Goldberg和Heath Robinson往往去这种地方购物。描述某物X为"Acme X"要么意思是"这个是insanely great"，要么是说"这玩意儿看上去是insanely great，但是实际上它会给你带来麻烦." 对比pistol。\n这个词很受美国黑客们的喜爱，它出自华纳兄弟（Warner Brothers）的"Roadrunner"卡通系列片。在这些卡通片中，饥饿的Wile E. Coyote总是尝试用陷阱去捉住并吃掉Roadrunner，他也爱用高科技的Rube Goldberg设备——火箭发射器、弹弩等。这些设备往往被包装在纸箱内，外面贴着Acme名称的标签，而它们总是会以剧烈的并且不太可能的方式出现问题。
Acolyte	/n./[TMRC] 一个有足够特权来向priesthood的成员提交数据和程序OSU.
ad-hockery	/ad-hok'*r-ee/ /n./\n1，对某些程序做的一些不必要的假设。特别是在专家系统中，这往往导致给你一些半智能的行为表现，而实际上这些行为是很随意的。例如对输入符号的随意匹配可能是对于符号表的一些拼写错误，但这去看起来像程序知道怎么拼写单词。 \n2，用来处理一些拙劣输入的特殊代码。不经过处理的话，这些代码会导致程序出问题。假定正常的输入是通过一些更加干净或者常规的方法来处理的。 
Ada	/n./一种由Pascal演变而来的编程语言，曾经被五角大楼规定为国防部所有软件的开发语言，黑客们发现这种语言的异常处理和中断程序有很多bug。后来它被用来指代由政府部门强制推出的产物，它们有如下特点：委员会示的设计模式、难用的、整体糟糕、并且动辄好几百万美元的失败产品。
adger	/vt./[在UCLA作为{nadger},的变体，可能出自一个不出名的tenured graduate student的中间名字（middle name）]\n使一个笨蛋去做一件只要用一点脑子就能预料到结果的事情。比如，“他开始删除文件，然后很快就adger了整个工程”。对比dumbass attack。
admin	/n./是administrator的缩写；在讲话或网上常用来指代一个计算机的管理员。它常用来组成一些合成词，如sysadmin和site admin或newsadmin。对比postmaster, sysop, system mangler。
ADVENT	/n./作为原型的电脑冒险游戏，最初是在上世纪七十年代中期由Will Crowther在PDP-10上设计，他的目的是做电脑幻想游戏，后来这个游戏原型在1976年被Stanford的Don Woods扩展到了解迷游戏。现在这类游戏多被称为Adventure，但是TOPS-10的操作系统那时只允许最长6个字母的文件名。参见vadding, Zork和Infocom。
AFAIK	/n./[Usenet]  "As Far As I Know".的缩写。
AFJ 	/n./"April Fool's Joke"在书面上的缩写。复杂的愚人节恶作剧是Usenet和Internet上的一个长期形成的传统；见kremvax。事实上，愚人节是Internet和其它黑客网络上唯一一个被一直执行的季节性节日。
AI 	/n./'Artificial Intelligence'的缩写，它如此常见以致于完整形式几乎从不被黑客们使用，无论书面或口头。
AI-complete	/A-I k*m-pleet'/ /adj./  [MIT, Stanford: 类比'NP-complete' (见{NP-})] \n用来AI领域的问题或子问题，暗示其答案存在的前提是“强AI问题”（strong AI problem，即让计算机具有人一般的智能）。其实AI-complete的问题往往就是指极难的问题。\n例如"The Vision Problem"（建立一个能与人类有相同视觉的系统）以及"自然语言问题"（建立一个能理解人类语言并与人类正常交流的系统），都是AI-complete问题。这些问题看上去是组合的，但是至今对这些问题的所有尝试都没有成功，原因是需要大量的上下背景信息以及“智能”。参见gedanken。
AI koans	/A-I koh'anz/ /pl.n./  \n一系列禅宗难题的混合作品，由MIT AI实验室的Danny Hillis围绕着实验室的文化中不同的几个主要人物所作。参见ha ha only serious, mu和hacker humor。
AIDS	/aydz/ /n./ A* Infected Disk Syndrome（'A*'是一个glob模式，它匹配Apple或Amiga，但是不限于此）的缩写，染病的条件是做不安全的SEX。见virus, worm, Trojan horse, virgin。
AIDX	/ayd'k*z/ /n./ \n对IBM所篡改的Unix, AIX的版本所取的贬义的名称，尤其是指IBM RS/6000系列所用的AIX 3.?版本。对于BSD和USG Unix的合并，造就了AIDX这个牺牲品，它成为一个monstrosity，是系统管理员的噩梦。比如，由于用户数据库的实现很弱，所以，当很多用户登录时，如果新的账户被创建，系统负载一下就升到了超过20。对比HP-SUX, Macintrash, Nominal Semidestructor, Open Death Trap, ScumOS, sun-stools。
airplane rule	/n./复杂度将加大失败的可能性，就像拥有两个引擎的飞机出现引擎故障的概率是单引擎飞机的两倍。类似的，在软件和电子领域，简洁是可以增加系统的可靠性的。因此，有观点认为，建造可靠系统的方法是将所有鸡蛋放入一个篮子之中，只要你建造了一个足够坚固的篮子。 
aliasing bug	/n./一种隐蔽的程序错误，在做动态分配的代码中出现，尤其是malloc(3)或同类程序。如果几个指针指向一个存储块，可能这个存储块在处理一个指针的时候被释放或重新分配了，那么再用另外几个指针指向它时，就可能会出现数据丢失。这种错误可以避免，比如可以不使用多个指针指向同一个块，或者使用带有垃圾回收（见GC）功能的高级语言，如LISP。\n也被称为{stale pointer bug}。参见{precedence lossage}, {smash the stack}, {fandango on core}, {memory leak}, {memory smash}, {overrun screw}, {spam}.
all-elbows	/adj./[MS-DOS]\n指一个TSR（terminate-and-stay-resident）IBM PC程序：不和气的。用来描述一个程序草率地窃取资源，而不考虑其它TSR可能在用这些资源。一个具体的形式是在程序争取键盘中断时使用锁（lock-up）。见rude，参见mess-dos。
alpha particles	/n./见{bit rot}.
alt	/awlt/\n1. /n./ IBM PC或clone键盘上的alt键；见buck bits, 释义2。\n2. /n./  Macintosh上的clover或Command键。\n3. /n.,obs/.  [PDP-10; 常大写为ALT] ASCII字符ESC(ASCII 0011011),的别名；也作altmode。这个字符在TECO的ITS系统或TOPS-10中几乎从不被称为"escape"。这可能是因为alt比起escape来更上口，尤其是当后面跟着另一个alt或其它字符时。\n4. Usenet上的alt等级结构，用户们所创建的新闻组(newsgroup)的树形结构。有一个并不完全没有根据的传说，就是alt是指"anarhists, lunatics, and terrorists"；但实际上alt只是alternative的缩写。
alt bit	/awlt bit/ [from alternate] /adj./  见{meta bit}.
altmode	/n./ 与{alt} 释义3等价.
Aluminum Book	/n./特指 "Common LISP: The Language"这本书，作者Guy L.  Steele Jr. ，数码出版社于1984年发布第一版，1990年发布第二版。
amoeba	/n./对commodore amiga做的个人电脑的幽默称谓。 
amp off	/vt./在后台运行，来自unix命令中的&符号。 
amper	/n./对&记号字符的通用缩写。 
angle brackets	/n./指字符"<"和">"中的任意一个。
angry fruit salad	/n./一个因为使用了太多的颜色而失败的可视化界面设计。我们通常也可以从那些x系统的颜色使用中发现类似的效果。如果界面设计过于绚丽和引人注意的话，长时间使用会导致人的不适。
annoybot	/n./IRC在线聊天系统中的常用词，参见robot。 
ANSI	1，/n./美国国家标准学会的缩写The American National Standards Institute 。\n2，/n./一台机器可以被称为"ANSI"如果它满足ANSI的X.364标准。\n3，/n./代表大多数MS_DOS和Amiga计算机都能接受的屏幕打印代码。
AOS	1，/vt./增加某事或某物的数量。\n2，/n./代数操作系统。\n3，/n./在IBM的机器上运行的类似BSD的操作系统。
app	/n./是应用程序"Application Program"的缩写，同系统软件相对照。
arena	[Unix]/n./一块被进程brk和sbrk所使用的内存，但是却被malloc用于动态分配。这个名字得名于malloc函数返回的错误信息。 
arg	/arg//n./参数这个单词的缩写，使用的如此广泛，以至于独立成为一个新单词，就像钢琴这个英文单词一样，它原本也是缩写的。
ARMM	/n./它是由俄亥俄州的Dick Depew发明出来的一个机器人程序，它的动机是自动删除公告板上由匿名用户发布的垃圾消息，不过可笑的是，它在删除消息的同时，自己也将控制信息发布出来。
armor-plated	/n./保护严密的，同bulletproof。
asbestos	/adj./一个修饰词，用于修饰任何能够保护一个人免于受到新闻组上热帖的伤害(flame)。
asbestos cork award	/n./这是在MIT发生的一个趣闻，一个在公告板上同火焰喷射器上发帖的人惹恼了一个黑客，那个黑客亲自设计、制作并发布了一个公告，声明那个人获得了`asbestos cork award'奖的提名。
asbestos longjohns	/n./在公告板上人们刚刚觉得一个帖子要演变成一个喷人的帖子，就被一个画着想象中的服装的帖子所化解了。
ASCII	/n./当今世界使用最为广泛的字符编码标准之一，使用7位对128个字符进行的编码。
ASCIIbetical order	/n./表示数据是按照ASCII字符的从小到大的顺序排列的。
atomic	/adj./\n1，不可分割的，极其微小的。\n2，保证对于一项任务要么不做，要么全部完成。
attoparsec	/n./长度单位，atto是国际单位制中表示10的负18次方的前缀，而parsec是3.26光年，因此attoparsec约为3.1cm，1英寸。
autobogotiphobia	/n./参见bogotify。
automagically	/adv./自动地，机械地，特指那些原因很复杂、很丑陋或者很不重要以至于都没有人愿意解释给你听。
avatar	/n./1，在虚拟现实或网络空间中，avatar就是一个用户的代表称号或图标。\n2，有许多Unix机器的超级用户（即管理员）喜欢将自己的用户名设为avatar而不是root。
awk	/awk/一个用于处理大规模文本的解释性语言。它是由Alfred Aho, Peter Weinberger, and Brian Kernighan三个人一起发明的，这个语言的名字也来源于这三个人的首字母。它有如下特点：类c的语法，对变量的使用无需声明，关联数组，基于域的文本处理。 
backdoor	/n./后门\n一个系统的设计者或者维护人员故意留下的安全漏洞，这些安全漏洞大部分不是恶意的。例如一些操作系统会有特定的特权帐户，供现场服务技术人员和维护人员操作。历史上，后门在系统中潜伏的时间往往超出人们的预期，并且其中一些已经广为人知。 
backbone cabal	/n./\n一群促成了大换名运动（参见Greate Renaming）的大型网站管理员。 
backbone site	/n./\n处理世界新闻组和电子邮件的主要服务器，它每天要处理大量的第三方流量。 
backgammon	/n./参见{bignum}的第三个释义，{moby}的第四个释义，以及{pseudoprime}。 
background	/n.,adj.,vt./计算机中在后台运行的，不引起人们注意的，常与其他词组成词组"in background"表示在后台执行，"to background"表示降低程序的系统权限。 
backspace and overstrike	/interj./用于提示某人说错话或做错事了。 
backward combatability	/n./反向不兼容性\n软件或者硬件的一种特性，表现为早期版本中的一些协议、格式或者布局在后期版本中完全不被支持，可能提出了新的协议等，为了避免新旧版本发生冲突，直接将旧版本删除或取消。 
BAD	/B-A-D//adj./指一个程序的失败，是由于设计上的问题，而不是因为程序自身的bug.
bad thing	/n./在一个课题或者项目中完全不可能产生进步使整个课题或项目提升的部分。 
bag on the side	/n./对确定加入系统的一项功能的扩展，通常带有贬义，暗示原始的功能被过度扩展导致新产品累赘，不和谐。 
bagbiter	/n./1，一台电脑或者一个程序，不能正常工作或者工作方式非常笨拙。\n2，指某人给你造成了一些麻烦，尤其是导致你编程出现错误。\n3，衍生出的词组"bit the bag” 指在某方面出错。 
bagbiting	/adj./指有bagbiter的特征，容易出错的。 
balloonian variable	/n./指代那些不控制程序的状态，但必须被声明、检查或设置的变量。   
bamf	1，一个虚拟的声音用以通报进入或调开某个人的听觉或视觉范围。如在论坛中某人希望展现一个戏剧性的登场或退场时，他可能会发出这种声音。 \n2，魔术表演时发出的声音。 \n3，在MUD（类似聊天室）中，服务器发出的通告，让用户连接到其他服务器。\n4，从3的含义中引申出来的意思，把某人导入、转向新的地点或资源。 
banana label	/n./香蕉标签\n一种过去用来贴在一种磁带转轴上的标签。它的得名是因为它看起来像香蕉。这个短语，就像那种磁带一样，现在虽然仍在使用，但是已经略显过时了。  
banana problem	/n./源于一个小女孩的一句话“我知道怎么拼写`banana', 但我不知道什么时候该停”，意为不知道该什么时候停止一个作品、项目。 
bandwidth	/n./\n1，黑客用于表示一个电脑、人或传输媒介单位时间内能处理的信息量。\n2，注意力的范围，能同时注意的事情的数量。\n3，一种网络负载的度量，度量人们在网络上报怨别人浪费带宽的同时自己浪费了多少带宽。
bang on	/vt./高强度的测试某部分硬件或者软件。
bang path	/n./一种老式的uucp（unix计算机交换文件）电子邮件地址的表示方式，它通过数次转发送达目标地址，之所以这么称呼是因为每次的转发操作都用一个{bang}来表示。 
banner	/n./\n1，打印机程序发送至打印机的打印文件的扉页，一般含有非常明显的用户名称或id。\n2，所有由用户打印的文档的相似的地方。\n3，在一个交互式软件中，启动软件时显示的含有软件logo等标志的画面。 
bar	/n./\n1，在非变量表示中的第二个变量，在{foo}之后，在{bar}之前。\n2，接在{foo}之后，形成一个新的变量{foobar} 
bare metal	/n./\n1，全新的计算机硬件，非常朴素，没有装备操作系统、高级汇编语言甚至编译器。2，"Programming on the bare metal“通常用于指代黑客在计算机的最底层进行操作，比如二进制代码层。 
barf	/n.,v./\n1，令人做呕的。\n2，指说"barf"这个词，或者其他含义类似的语句。\n3，由于输入令人无法接受而没有办法继续工作。
barfmail	/n./一连串的退信通知让人非常恼怒，通常是由于网关或者邮件服务器的毛病。   
barfulation	/bar`fyoo-lay'sh*n/ /interj./Barf的一个变体，主要用于Standford地区。  
barfulous	/adj./指从美学的角度让人作呕任何东西 
barney	/n./按英联邦的黑客的传统，barney和{fred}的关系就像{bar}和{foo}的关系一样。 
baroque	/adj./尤指软件的功能被设计得过分的复杂。
BASIC	/n./一种编程语言，在60年代早期为Dartmouth分时操作系统实验环境设计，后来成为最让黑客头痛的原因之一。它的特点是简洁易上手，初学者很容易用basic编写出一个小程序，但是用它写一个长程序是一件非常痛苦的事，而且BASIC会使使用者养成非常不好的编程习惯，阻碍他们学习更高级的编程语言。 
batch	/adj./\n1，不交互的。指一个程序只接受指令并完成，不与用户进行交互，如批处理文件。\n2，一口气把一堆枯燥的工作全部做完。\n3，词组"batch up"表示将一堆小的任务集中起来完成以提高效率。 
bathtub curve	/n./用于描述电子产品的故障率随时间变化的曲线，开始很高，然后在大部分时间中故障率接近于0，当接近使用寿命极限时，各种故障又开始出现，就如同一个浴缸的曲线。 
baud	/n./传输速率单位，位每秒。 
baud barf	/n./当一个用户使用调制解调器上网时，一些协议的不正确配置、电话线串线或者线路噪音太大等原因导致用户得到的一堆无用的数据。 
baz	/n./\n1，非语义变量的第三个变量，参见{bar}和｛foo}。 \n2，表示一种轻微的恼怒。 \n3，偶尔和{foo}连在一起形成另一个非语义变量{foobaz}。 
bboard	/n./\n1，电子公告板的总称。 \n2，在卡内基梅隆大学及其他一些有着相似设施的大学中，指本校的电子公告板。 
BBS	/n./电子公告系统，它是一个提出报文数据库，用户可以登录数据库并在主题中发表报文，所有参与这个主题的用户都可以阅读。 
beam	/n./由经典电影《星际迷航》中的台词"Beam me up,Scotty!"而来，表示通过电子传输信道拷贝文件。 
beanie key	/n./苹果笔记本中的一个命令键。 
beep	/n.,v./这个是feep的同义词，这个短语是在MS-DOS 和 OS/2操作系统下的一个技术短语，而且似乎在微系统的爱好者中，这个词更为流行。
beige toaster	/n./指代一个Macintosh.
bells and whistles	/n./铃与哨\n一些加入到程序或系统中的特征，让其更符合黑客的口味，这些特征往往在系统功能层面上是没有什么意义的。
bells, whistles, and gongs	/n./铃，哨与锣\n铃与哨的一个加强版的称谓，在加上了gong这个单词后则更具有讽刺的意味。
benchmark	[techspeak]/n./对计算机性能的非准确的测评。
Berkeley Quality Software	/adj./略带蔑视的口吻，形容一些显然由昏昏欲睡的黑客在午夜为了解决一些独一无二的问题而编写的程序。它的说明文档通常不完整、不正确或者根本不存在，它通常能正确跑出两个测试用例的正确结果，但是如果其他任何人想尝试着使用这个软件，它的核心就会出错。 
berklix	/n.,adj./Berkeley版的Unix的另一种叫法，更普遍的叫法是BSD。这种叫法并不被广泛使用，只有一些西装革履的装作专家的人会去用。 
Berzerkeley	/n./Berkeley的一种扭曲的叫法，形容BSD操作系统的黑客的行为或产品。 
beta	/n./\n1，"in beta"表示软件大部分已经可以正常使用，但仍然在测试。 \n2，任何新生的或者新鲜的并且还处在实验磨合阶段的事物，比如"His girlfriend is in beta”。 
BFI	/n./brute force and ignorance的缩写，参见"brute force and ignorance"。 
bible	/n./\n1，指讲解基本原理的经典书籍中的一本，比如由Knuth或K&R撰写的书籍。 \n2，指一种语言、操作系统或大型软件的最详细、最权威的指导书籍。 
BiCapitalization	/n./一个关于商标权的法案，将单词中特定的字母大写作为商标，如NeWS,NeXT等等。通过这种不正式的大写单词已经诞生了大量的商标，许多人非常赞同这种命名方式并且已经有2317个这个商标被使用。 
B1FF	/n./一种流行的拼写方式，特点是：全部使用大写并且在中间故意拼错或少写几个字母，如下面的例子。EVRY BUDY LUVS GOOD OLD BIFF CUZ HE"S A K00L DOOD AN HE RITES REEL AWESUM THINGZ IN CAPITULL LETTRS LIKE THIS！！！
biff	/vt./提醒某人有新邮件。 
Big Gray Wall	/n./当一个VMS用户寻求帮助文档时所遇到的情况。VMS整套的工具用一个托盘就可以装下，但是它的文档却非常多，不考虑编译器、数据库、网络及编程工具等附加功能，仅仅最基本的系统文档就能够占满一个15英尺高的书架，就像一道灰色的墙。 
big iron	/n./巨铁\n大型的，昂贵的，超级快速的计算机。
Big Red Switch	/n./一台电脑的电源开头，特指IBM大型计算机的紧急开头或PC机的电源开头，因为IBM将这个按扭设计得又大又红。 
Big Room	/n./一间有着蓝色屋顶并且阳光很强烈，或者在晚上有着黑色屋顶以及很多很小的夜灯的极大的屋子，指很常见的机房。 
big win	/n./意外的发现、收获。 
big-endian	/adj./\n1，数据在计算机中的表示法之一，指数据最高位在存储器中地址最小，早期的计算机如IBM370系列等都使用这种表示法，它又被称作'network order'。 \n2，在邮件地址一种错误的写法。当前世界普遍遵守的规则是计算机名在前，国家名在后，如***@pku.edu.cn。但英国网络组织（Joint Network Team）在网络协议标准发布前使用的是相反的标准，如地址me2@uk.ac.bris.pys.as，这种写法被称作big-endian，而现在世界通用的写法叫作little-endian。 
bignum	/n./\n1，一台多精度的计算机中用于表示一个非常大的数字的方法。 \n2，一个很大的数字。 \n3，在斯坦福，如果玩双陆棋扔骰子时扔出两个5点或6点时，可以叫作bignum。 
biggot	/n./一个对于特定种类的电脑、语言、操作系统、编辑器或者其他工具狂热喜爱并虔诚使用的人。常与他喜爱的东西连接起来，如'ITS biggot'、'VMS biggot'。 
bit	/n./\n1，信息的度量单位。 \n2，计算机中的一类只能从两个值中取一个的变量，如true/false和0/1。 \n3，一个精神标记：如一个关于某件事最终应该被完成的提醒。 \n4，更普遍地，表示一种有关信念的精神状态。 
bit bang	/n./在软件运行的某个特定时候，程序以极其快的速度输出一连串的bit，这些bit以连续、线性的方式进行传输。 
bit bashing	/n./用于形容几种低级别编程中的任何一种，这种编程以操作比特、标记、半位，或者其他比一个字节小的单位为特点。 
bit bucket	/n./\n1，通用的数据接收器中，丢失、被丢弃或损毁的数据包都进入了bit bucket。 \n2，所有丢失的邮件、信息最终被收容的地方。 \n3，所有不需要的邮件回复的理想存储地点。 \n4，一些人根本没有发送邮件，却狡辩说邮件已发送但被放进了'big bucket'，一种借口。 
bit decay	/n./有着物理学背景的人习惯使用这个词作为粒子衰退(particle decay)的类比。参见同义词'bit rot'。 
bit rot	/n./一种假设的疾病，人们通过观察发现：长期末使用的程序过了一定的有效期后可能会损坏，不能正常工作，即使没有改变任何东西。 
bit twiddling	/n./\n1，一种现象：花费了大量的人力和时间却只得到了几乎没人注意到的提升，通常还有一个副作用是代码变得费解无比。 \n2，对于一个程序毫无目的的小修改。 \n3，和bit bashing为近义词。 
bit-paired keyboard	/n./一种键盘布局，从早期的电传打字机ASR-33演变而来，并在早期的计算机设备中流行了几年。 
bitblt	/n./\n1，指在一个位图设备中，任何在主内存和显示内存之间或之内，移动和复制矩形位图的算法家庭之一。 \n2，和'blit'及'BLT'是同义词。 
BITNET	/n./在网络中所有人都不喜欢的部分。BITNET的主机由一堆IBM的老式机器组成，它使用卡片机并且只能读取80个字符，因此，当遵循新协议的网络数据包经过BITNET的时候可能会被损毁，删除一些字符。 
bits	/n./\n1，信息。 \n2，机器可读的文件，与纸质的文件形成对照。 
bitty box	/n./\n1，指一台功能足够弱小、原始的或无能的计算机，以至于黑客一想起要黑这样的计算机必须先在上面编写足够多的软件，就感到恐慌。 \n2，真实计算机的反义词。 
bixie	/n./在BIX(Byte Information eXchange，字节信息交换器)中多种多样的表示表情的字符串，如微笑«@_@»。 
black art	/n./一批晦涩难懂、没的出版的并且十分特殊的技巧，它们往往是为了一个特定的应用或者系统的某个模块而专门开发。 
black hole	/n./邮件或网络消息在它的传输过程中无故消失，则它们被称作送到的网络黑洞black hole。 
black magic	/n./指一种技术，没有人能明白它的原理，但它的确管用。 
Black Screen of Death	/n./死亡黑屏\nMicrosloth Windows系统的一个失败模式。如果系统将屏幕显示的内容清空，锁死机器，只有通过冷重启才能恢复的话。这种不悦的现象就被称为死亡黑屏。
Black Thursday	/n./黑色星期四\n1996年2月8日，签署ＣＤＡ法的时候。这种说法是模仿1929年那个开启大萧条的黑色星期五。
blammo	/vt./强制地将某人从一个交互系统中路踢出去，尤其是交谈系统。 
blargh	/n./是'ping'的反义词（参见ping），表示自己已经全部接收的声明。 
blast	/vt.,n./\n1，特指通过网络或命令行传输大量信息，是'BLT'的同义词。 \n2，强力攻击，强制终止。如在退出系统的时候，系统有时会弹出对话框：“不能正常关闭所有进程，立即终止(blast them)？”。 
blat	/n./\n1，同blast。 \n2，thud。 
bletch	/interj./表示厌恶。 
bletcherous	/adj./指在设计或者功能方面令人厌恶，不能打动人。不能用于形容人。 
blink	/vi.,n./使用一个浏览器和离线消息阅读器来减少用于在接受一个商用网络服务的上网时间。在1994年底，这个短语在英国很流行，但在美国却很少有人知道。 
blinkenlights	/n./计算机前面板上表示错误诊断信息的灯，在老式机中很常见。 
blit	/vt./\n1，将一长串比特位从计算机内存的一个地方移动到另一个地方，尤其是内存正在被用于决定哪些内容要显示在屏幕上的时候。 \n2，全部大写BLIT表示早期一个实验位映射的计算机终端，它由贝尔实验室的Rob Pike设计，后来商业化后成为AT&T 5620。 
blitter	/n./特别为做blit（位映射）实验而设计实验的芯片或硬件系统，尤其是当它的目的是提高位图显示的速度。 
blivet	/n./\n1，一个棘手的问题。 \n2，指硬件系统中一个核心的部件，当它坏了以后不可能被修好。 \n3，一个被无数无能的黑客利用并入侵的工具。 \n4，一个已经失控但又不能停止的研发项目。 \n5，一个在给客户演示时跳出来的令人尴尬的错误。 
BLOB	1，被那些数据库方面的人来使用，这个短语用来指随机的，大规模的需要被存储于数据库中的数据，例如图片或者声音文件。关于这个短语，关键的一点是，它是不能够被数据库管理系统自身所解释的。\n2，通过发送一个BLOB来制造一个邮箱炸弹。
block	/v./推延或者坐着闲着来等待什么事情。 
block transfer computations	/n./非常微妙和复杂的运算，以至于无法被机器来运算。这个短语过去指任何需要通过理论上的算法来表示的计算任务。 
Bloggs Family	/n./一个假想中的家庭，它由Fred Bloggs 和Mary Bloggs，以及他们的孩子组成，这是知识表达法中一个经典的标准例子。 
blow an EPROM	/v./在只读存储器中编写程序。 
blow away	/vt./指在意外情况下，从永久性存储中移除文件或者目录。例：他不小心将错误的分区格式化，从而blow away昨晚的新闻。 
blow out	/vi./对于软件来说，一个看起来很严重的失败。 
blow past	/vt./没有任何保护措施的软件失败。 
blow up	/vi./开始变得不稳定。指代运算开始偏离的如此迅速，所以很快就要溢出或者至少是非线性增长的情况。 
BLT	/n./它指代所有大规模的位字段的移动或复制行为。 
blue book	/n./\n1，在页布局和图形控制方面三本经典参考文献的非正式称呼。 \n2，smalltalk编程语言的三本经典参考文献的非正式称呼。 \n3，由CCITT第九次会议通过并发行的1988个标准。 
blue box	/n./\n1，很久以前，当人们打一个长途电话需要人工转接的时候，一种可以用于霸占线路并偷打电话的装置叫blue box。 \n2，指IBM的机器，特指大型机。 
Blue Glue	/n./IBM的网络信息体系结构，一种非常失败并且令人厌恶的交互协议，却受到许多无知厂商的吹捧。 
blue goo	/n./一种特殊材料制成的咀嚼物，它的目的是消除有害垃圾、消灭污染、将臭氧重新放到平流层中、防止口臭，还能够发扬诚实、正义等优良品质，等等美国式的宣传。 
blue wire	/n./在工厂中一捆加入电路板中的电线，这用来纠正设计或者制造中的问题。这种做法是有哦必要的，特别是在没有足够时间来设计或者在质量上保证另外一个主板型号的时候。 
blurgle	/n./英国口语，一些从上下文可以显然看出，或谁都知道的内容。 
BNF	/n./\n1，巴科斯诺尔范式的缩写，Backus-Naur Form。\n2，任何符合BNF特点的变量或表达式，可能含有正则表达式中的通配符。 
boa	/n./指IBM大型机埋在地板下的臃肿的电缆。 
board	/n./\n1，与bboard同义，电子通告板，甚至可被用于指代世界新闻网络组。 \n2，电子线路板。 
boat anchor	/n./这个短语的含义与doorstop类似，但程度更加强烈。用来指代硬件不可逆转的损坏或者无用。一个刚刚占据空间的人。老旧的但是仍然可以工作的硬件，这个短语原来具有冒犯的意味，现在则越来越有感情在其中了，因为越来越多的硬件变老了。 
bodysurf code	/n./一段程序或者一部分代码，它通常没有经过正式的设计或者深思熟虑，而只是仅仅凭借程序员的灵感。就像名字中所包含的那个体育运动一样，它通常只是给程序员带来尴尬的结果。 
BOF	/n./'Bird of a Feather'的缩写，物以类聚。表示在一个会议中一个非正式的讨论组或闲谈。 
BOFH	/n./Bastard Operator From Hell的缩写。指完全不能容忍黑客玩笑的系统管理员。 
bogo-sort	/n./一种典型的可怕的算法，不仅仅是一般差的算法。这是一种排序算法，它就好像从一副扑克中连续地扔几张到空中，然后随机地捡起来，并测试它们是不是有序的。 
bogometer	/n./测量bogosity的假想仪器。 
bogon	/n./\n1，体现bogosity的最小单位，元单位。\n2，一个TCP/IP解析器发送给总服务器的询问数据包，却错误地没有标志查询位，而标记了回复位。 \n3，网络上任何格式不正确的数据包。 \n4，指任何bogus的事物。 \n5，一个bogus或者说一些bogus的话的人。（参见bogus) 
bogonfilter	/n./boogon的过滤器，指任何能够过滤或抑制bogon的设备、软件或硬件。参见bogon。 
bogon flux	/n./bogon的流量。参见bogon。 
bogosity	/n./\n1，形容一件事物bogus的程度，参见bogus。 \n2，由bogon而产生的势场。 
bogotify	/vt./使...变得愚蠢或无用。 
bogue out	/vi./突然地、出乎意料地变得愚蠢或无能。 
bogus	/n./\n1，没有功能的。 \n2，毫无用处的。 \n3，错误的。 \n4，不正确。 \n5，令人难以致信的。 \n6，愚蠢的。 
Bohr bug	/n./一个可重复实验的故障，指只要避开这个故障的触发条件，在特定的环境下依然可靠的事物。 
boink	/v.,n./\n1，与。。。发生性关系。 \n2，指所有的纯粹的社交聚会。 
bomb	/n./\n1，软件或操作系统的冲突错误。 \n2，雅利达和苹果系统中和Unix的panic功能相同的工具，它显示黑火药炸弹和蘑菇云，表示系统已经死掉。 
bondage-and-discipline language	/n./类似于pascal、Ada这样的语言，虽然外表看起来很普通，却是为了强制使用者接受语言作者的思想。尽管这种语言已经被证明是存在漏洞的，可以被黑客利用的。 
bonk	/interj./表示对一些令人讨厌的人的恼怒或责骂。 
book titles	/n./黑客们习惯将一些重要的书籍或标准的文档冠以带有颜色的名称来表示它们的重要性，如black book ,Green book等等。 
boot	/v.,n./在一台机器上载入并初始化操作系统。 
bottom feeder	/n./Slopsucker的同义词，来源于渔人或者自然主义者的用来指带一种有鳍的生物。 
bottom-up implementation	/n./ 从底而上的实现 \n从顶向下设计的反向。现在这已经是一个被广泛认可的程序设计的智慧，就是最好从高层的抽象的层次逐步细化，不断细化操作序列，直到得到实际的代码。黑客们发现最好从反向顺序中来建造东西，将各个原始操作设计测试完毕，然后将它们组装到一起来。 
bounce	/v./\n1，一封邮件无法被送达，因此被返回并弹出一个错误框。\n2，打排球。 \n3，性交。 \n4，为了一个临时的错误而偶尔重启系统。 \n5，在机器发生错误后热启动系统。 \n6，IBM周期性地重启。 
bounce message	/n./邮件无法送达而弹出的通知消息。 
boustrophedon	/n./一种古老的书写方法。这个短语通常是别的行业的行话。知识渊博的黑客使用这个词指代计算机排版程序所做的一些优化。 
box	/n./\n1，计算机。\n2，IBM的前端处理机。
boxed comments	/n./围成盒子形状的注释，通常占据数行，如下面的例子：\n     /************************************************* \n      * \n      * This is a boxed comment in C style \n      * \n      *************************************************/ 
boxen	/n./一个假想的box的复数形式，用于形容UNIX的日常设备。 
boxology	/n./ASCII字符的一种艺术形式，使用框和箭头组成一幅画。 
bozotic	/adj./有着笨蛋的物质或者很像个笨蛋，滑稽、荒唐、错误却又非存心地幽默。 
BQS	/adj./参见'Berkeley Quality Software'。 
brain dump	/n./把所知道的关于一个主题或项目的所有信息都告诉一些人的行为。 
brain fart	/n./大脑突然短路造成的后果。 
brain-damaged	/adj./\n1，明显错误的。\n2，在一些软件的免费版本中，故意去除了一些功能，使得它的商业版本更有吸引力和竞争力。 
brain-dead	/adj./非常错误的、极度脑残的。形容一些极其严重的设计失误。 
braino	/n./在思考或回忆的过程中大脑突然出现的瞬间、可校正的故障，同thinko。 
branch to Fishkill	/n./在程序中任何不可预测的跳转，这跳转会导致灾难性的或者怪异的结果。 
bread crumbs	/n./插入程序中的调试语句，这些语句能够产生输出或者将程序的状态写入存档文件，所以你就可以观察到程序在那里死掉或者导致非正常行为的原因。 
break	1，/vt./破坏。 \n2，/v./使程序暂时停止以便于调试。 \n3，/vi./发送一个RS-232 break的指令。 \n4，/vi./敲击使得字体驱动程序发送错误中断信号给处理器的按键。 \n5，‘break break'表示中止一段对话。 
break-even point	/n./在计算机语言的设计过程中，已经十分高效的部分，以致于语言的其他部分可以使用这一部分来实现。 
breath-of-life packet	/n./在以太网中含有自引导程序代码的数据包，正常工作的计算机周期性的发送这种数据包给网络中不幸当掉的电脑使它能够重新启动。 
breedle	/n./参见feep。 
bring X to its knees	/v./代表因为负载过重而慢慢停止的机器、操作系统、软件或算法。 
brittle	/adj./形容一个软件容易功能完美，却容易因为外部环境的改变而发生错误，比如操作系统的变化、配置的变更等等。 
broadcast storm	/n./广播风暴\n一个在网络上广播的错误的数据包，这导致了所有的主机一次性的反馈，通常这个反馈数据包也是有错的，就导致了这整个过程重新开始一遍。 
broken	/adj./指程序无法正常工作。或者指人在极度的压力之下行为奇怪。 
broken arrow	/n./一个在3270终端第25行展现的错误代码，这是用于各种对协议的破坏的情况，或者无法预料的错误状况。在PC机上，通常用`-»/_'来表示。 \n注释：为了更完整的理解这个短语，这个词子军队用语中是指代涉及到核武器的事故。 
BrokenWindows	/n./黑客对于sun公司机器中制作粗糙、笨拙的OpenWindows的一种辱骂性的称呼。 
broket	/n./指'«'和'»'字符中的一个。 
Brooks's Law	/n./布鲁克斯定律：对一个已经渝期的项目追加人员会导致项目结束得更晚。 
browser	/n./浏览器\n一个用于来帮助用户来浏览超文本，在线文档或者数据库的程序。虽然这层含义已经存在了很长一段时间，这个词在1992年，在万维网流行后，这个词的含义更加专注了。现在，如果有人使用这个词，就是专指web浏览器了。 
BRS	/n./参见'Big Red Switch'。 
brute force	/adj./形容原始的编程风格，完全依靠计算机的处理能力来解决问题，而不去动脑筋思考并简化问题。经常无视问题的规模，而采用简单而天真的，只适用于小规模问题的方法去解决。 
brute force and ignorance	/n./一个比较流行的软件设计技巧。这种设计方法不考虑任何问题已经被怎样很好的解决的这个信息。如果设计要求教条式的坚持某种方法学，则这种方法比较适合。这个词通常会被缩略微首字母ＢＦＩ。 
BSD	/n./Unix的一个系列。 
BUAF	/n./是Big Ugly ASCII Font的缩写，是ASCII字符艺术的一种形式。 
BUAG	/n./是Big Ugly ASCII Graphic的缩写，ASCII字符艺术的一种形式，带有轻蔑意味。 
bubble sort	/n./一种排序算法，在黑客眼中是幼稚算法的一个权威性的例子。 
bucky bits	/n./\n1，在SAIL键盘上由CONTROL和META键所产生的9位的数据。 \n2，由1所引申出来的含义，指在任何键盘上由SHIFT键和其他键组合发送的数据位。 
buffer chunk	/n./缓冲区溢出（buffer overflow）的同义词。 
buffer overflow	/n./当你向缓冲区写入比它规模更大的数据时，可能会导致处理器的错误。 
bug	/n./在一个程序中可能会导致故障的部分。 
bug-compatible	/adj./指一个设计或者修改，因为被要求和其他程序或者早期的版本兼容，而受到了极坏的影响。 
bug-for-bug compatible	/n./同bug-compatible一样，同时它又多一层含义：很多无用功用来保证美国bug都被复制了。 
bug-of-the-month club	/n./一个虚拟的由Unix邮件系统'SendMail(1)'用户组成的俱乐部。 
buglix	/buhg'liks//n./指代DEC公司的ULTRIX操作系统的早期有很多问题的版本。这个词现在仍然指ULTRIX操作系统，但是没有那么多恶意了。 
bulletproof	/adj./指代一个极其健壮的算法或者实现，能够从任何难以想象的异常中恢复过来，这是一个罕见但珍贵的特质。 
bum	1，/vt./使。。。更高效，在时间和空间上，通常通过牺牲程序的可读性。\n2，挤出一些额外的东西。 \n3，/n./对一个算法、程序或硬件设备的很小的改动，却使它更有效。 
bump	/vt./增加的同义词。这个同C++的自增符号有相同的意思。特别用在计数变量，指针在while或者do-while循环之内。 
burble	/v./与词汇flame类似，但是隐含着信息源是真正的没有线索而且没有效果的。这是一个极具轻蔑意味的单词。 
buried treasure	/n./在程序中一段令人吃惊的代码。虽然通常情况下是不会错的，它通常不会被发现，是因为它在功能上是正确的，无论错误有多么可怕。这个词极具讽刺意味，因为所发现的可能是任何东西但绝不是宝藏。被埋的宝藏总是需要被挖掘出来而且需要被清除掉。 
buried in period	/n./\n1，当机器出厂前将所有部件都装上后需要经历一个测试阶段。 \n2，当一个用户全神贯注地使用电脑，他会有一段时间忘记最基本的生活需求，如吃饭、喝水和睡眠。 \n
burst page	/n./参见同义词banner。 
busy-waiting	/vi./人类的一种行为，表示主语正忙于等待某些人或事，准备当它们一出现就开始行动，以至于现在不能做其他任何事。 
buzz	/vi./\n1，指程序跑起来以后没有任何现象让人相信它正在跑，或者有可能会结束。 \n2，测试电线或印刷线路的连续工作能力。 \n3，处理一个数组，对其中的每一个元素做相同的事情。 
BWQ	/n./一段演讲或文档中流行词的数量。 
by hand	/adv./\n1，指一些本文由电脑自动完成的任务黑客手动去做。 \n2，指编程时手动用一些等级的语句去实现已经有库函数实现的功能。
byte	/n./字节\n信息量的度量单位，等同于一个字符的信息长度。现代计算机通常食用8位作为一个字节，也有使用9位或36位的。 
bytesexual	/bi:t`sek'shu-*l/ /adj./指能够同时支持big-endian和little-endian两种数据格式数据的硬件。 
bzzzt wrong	/excl./指回答错问题后，便得到提问者的哀悼，并被打得头晕眼花。 
C	/n./由Dennis Ritchie在1970年设计的一种编程语言。 
C Programmer's Disease	/n./C语言编程者的一种不好的编程习惯，即申请一个比最大情况下略大的静态数组，而不是花点力气去实现数组的动态申请，指图方便而不顾效率。 
C++	/n./由Bjarne Stroustrup继承C语言的特点而创造出的一种新的编程语言，它可以做其他任何语言可以做到的任何事。 
Calculator	/n./同bitty box ，指功能简单的计算机。 
Camel Book	/n./骆驼书\n"Programming Perl"这本书的昵称。 
can	/vt./在一个分时系统中，停止一个任务。尤其当用户是操作员的时候，偏重于使用这个词。 
can't happen	指在一个不可能被满足的条件下才被执行的代码，是传统的编码注释之一。 
candygrammar	/n./一种编程语言的语法，让人容易理解但是程序臃肿。 
canonical	/adj./一类事物通常地或标准的表述习惯或方式。 
card walloper	/n./一个电子数据处理的编程人员，编写出批处理程序，可以做一些简单的工作，比如打印工资单等。 
careware	/keir'weir/ /n./共享软件的一个变种，这种软件的作者往往要求软件收入的一部分捐献给慈善组织。 
cargo cult programming	/n./一种无用的编程风格，代码中包含一些没有明确目的的数据结构或语句。 
cascade	/n./小瀑布\n没有很好错误纠正功能的编译器所报告的大量的错误信息。通常一个小小的错误，导致程序的其他部分都被这种编译器解释为有问题的。 
case and paste	/n./在代码中加入一个新的功能，而这个功能的实现就是把另一个函数的代码复制过来并做一些微小的改动。 
casters-up mode	/n./
casting the runes	/n./表示当你叫一个专家帮你跑一个程序或写几行代码时他或她的神秘表现，因为他们从来不为任何人工作，所以没有人能够看到他们到底做得怎么样。 
cat	/vt./\n1，Unix的一个命令，将整个文件打印到屏幕。 \n2，引申义，将一大堆数据丢给一个没有准备接收你数据的程序，丝毫不考虑用户怎么浏览。 
catatonic	/adj./指代一种状态。在这种状态下，动画效果停止，用户得不到任何的反馈。比如：如果你在终端中输入字符，突然计算机甚至不回显你输入的字符，这个短语描述的就是这种状态。 
cd tilde	/C-D til-d*/ /vi./回到用户自己的目录。这个是来源于unix下的shell命令。我们也可以通过加入参数来拓展这些命令。 
CDA	美国1996年一项关于互联网通信的法案"Communications Decency Act"，它规定在网络上传播淫乱下游或者威胁他们的信息将会触犯联邦法律。 
cdr	/vt./LISP语言的一个命令，跳过一列元素的第一个，直接从第二个开始处理。 
chad	/n./\n1，纸张在打印完成后边缘的穿孔。 \n2，卡片穿孔机打完卡片或纸带时产生的碎片。 
chad box	/n./一个便当盒大小的金属盒子，用于收集打卡机产生的碎片。 
chain	1，/vi./程序将执行权交给子进程或后续进程却没有通过执行这个进程的操作系统命令解释器。 \n2，/n./在程序或操作系统中一连串的连接起来的数据结构。 
channel	/n./网络交互聊天程序中最基本的讨论单位。 
channel hopping	/n./在IRC中不断的切换频道。 
channel op	/chan'l op//n./指IRC某个频道中的特权用户，通常也缩写为`chanop' 或者`CHOP。这些特权包括踢出用户，改变状态位，和批准其他用户成为特权用户。 
chanop	/chan'-op//n./和channel op是同义词。 
char	/n./是'character'的速记形式，在C语言中是一种变量的类型。 
charityware	/n./参见同义词careware。 
chase pointers	/vi./\n1，在代码的不同层次上迂回追踪数据，通常出现于C程序中。 \n2，一步步检查内核的执行情况，通常只能通过一些令人费解的十六进制数据，以及一些动态的数据结构。 
chawmp	/n./表示16位或18位的数据。 
check	/n./由硬件检测到出错状态，通常是由于硬件故障而不是软件的中断。 
chemist	/n./指一类使用计算机只做一些简单事情的人，比如只浏览和写入数据，他们完全可以用计算机做一些更有效率的事情。 
Chernobyl chicken	/n./同义词'laser chicken'。 
Chernobyl packet	/n./一种包含广播风暴（参见broadcast storm）或网络瘫痪(参见network meltdown)的数据包。如此命名是为了纪念1986年在乌克兰Chernobyl发生的核事故。 
chicken head	/n./德国欧宝商业机的商标，很一些家禽的头部。 
chiclet keyboard	/n./一种按键由扁平的矩形或菱形的橡胶或塑料做成，体积很小的键盘，按键看起来就像是口香糖。 
chine nual	/n./LISP语言的用户手册。 
Chinese Army technique	/n./参见同义词'Mongolian Hordes technique'。 
choke	/v./\n1，驳回、拒绝输入，通常以很笨拙的方式。 \n2，在任何情况下都失败。 
chomp	/vi./失败，通常伴随着咬牙切齿。 
chomper	/n./咬牙切齿的人，失败者。 
CHOP	/chop//n./和channel op是同义词。 
Christmas tree	/n./一种RS-232线的测试器。这种测试器的特征是有闪耀的红色灯和绿色的LED灯，这个与圣诞灯光蛮相似的。 
Christmas tree packet	/n./一种数据包，这种数据包将每种选项都置位，而不管其协议。 
chrome	/n./用来吸引用户而向系统中加入的特征，这些特征往往对增强系统的功能没什么贡献。 
chug	/vi./运行的非常的缓慢。 
Church of the SubGenius	/n./1981年，由善于营销的教士Ivan Stang创建的一个基督教变种，它的目的是愚弄那些正统的基督教徒。 
Cinderella Book	[CMU]/n./灰姑娘之书\n得名的原因是因为封面上描绘了一个女孩，这个女孩被人们广泛的认可为灰姑娘。 
CI$	/n./黑客对于计算机信息服务CIS(CompuServe Information Service)的一种另类称呼。 
Classic C	/n./由K&R编写的第一版C语言书籍中所定义的C。 
clean	1，/adj./简洁，这个是用来描述软硬件的设计的，表达的意思是小巧且优雅。具体来说，就是一个设计虽然没有什么石破天惊的地方，但是却极有条理而且容易被理解。   \n2，/n./来删除不需要的文件。 
CLM	Career Limiting Moves的缩写 \n1，/n./一个可能危害到加薪的前景、甚至是工作的危险举动。 \n2，/adj./强烈地指出软件中一个严重的错误，这个错误由用户发现，之所以没有在发售之前没有被是发现是由于测试工具做得太差。 
clobber	/vt./无意的数据重写。 
clocks	/n./时钟周期\n处理器的逻辑周期，这样的称谓是因为它对应着处理器的一次时钟脉冲。指令的执行时间往往以时钟周期为度量单位而并非绝对时间。其中一个很好的理由是随着机器的改善，时钟周期也会跟着变化。 
clone	/n./ 
clock-and-hacking coding	/n./参见同义词'case and paste'。 
clover key	/n./特指苹果电脑用户，参见'feature key'。 
clustergeeking	/n./花在计算机上做计算机科学作业的时间比普通人花在呼吸上的时间还要多。 
COBEL	/n./一种功能弱小、语法冗长、结构松弛的编程语言，使一些不善于思考的人在大型机上做一些完全没有智力因素的工作。 
COBEL finger	/n./一种假想的疾病，如果使用COBEL编程，就会得这种病。 
code grinder	/n./ 
code of geeks	/n./参见geek code。 
code police	/n./一个假想的类似盖世太宝的队伍，如果一个人编程风格太差，这个队伍就会冲进你的办公室把你抓起来。 
codes	/n./程序。这个在那些经常黑掉超级计算机和人群中极为流行，在其他人之中则鲜为人知。 
codewalker	/n./代码行者\n一个程序组件，它需要来遍历其他的程序。比如编译器中就包含这样一个组件。 
coefficient of X	/n./黑客说话时常常使用很多虚构的数学上的隐喻之一。 
cokebottle	/n./一些特殊的字符，因为在你的键盘上找不到。 
code bot	/n./参见bot。 
COME FROM	/n./一种半虚构的编程语言，它根据'go to'语句而发明。 
comm mode	/n./与talk model同义，是与计算机或程序交互的一种模式。 
command key	/n./特指苹果用户，参见'feature key'。 
comment out	/vt./注释掉\n将一段代码用注释符号包围起来，这段代码将不被编译器编译。这样做的原因是，这段代码通常是冗余的或者过时的，但是却留在源代码中来让代码的意图更加清晰。 
Commonwealth Hackish	/n./在美国以外，尤其是英联邦，用英语说出的黑客术语。指奇怪的腔调。 
compact	/adj./对于一个设计来说，描述它所有的关键特性，这样那就可以被人一次性的领会。这种性质并不意味着其将更加细微或者功能上更加弱。 
compiler jock	/n./参见jock的第二个释义。 
compress	/vt./ 
Compu$erve	/n./CompuServe的个性叫法。 
computer confetti	/n./同chad，由打孔机产生的碎片。 
computer geek	/n./\n1，以消除bug为生的人。 \n2，计算机奇客的自称，带有一定的积极意味和抗议。 
computerron	/n./\n1，一个想像中的计算机性能部件，它能够综合考虑指令执行速度和存储器负载等因素。 \n2，一个想像中的存储计算亚原件，它能够像电子原件处理电子那样处理存储器中的数据。 
con	[from SF fandom]/n./\n科幻作品的集会。这并不用于其他的会议，比如一些很专业的会议。 
condition out	/vt./条件剔除\n防止一部分代码被编译，通过将条件编译的条件设为假。 
condom	/n./\n1，3.5英寸软盘的塑料保护壳。 \n2，光导管的保护镀膜。 \n3，键盘保护套。 \n4，在运输中保护硬件不受损伤的保护塑料外壳。 \n5，系统中虚假的路径。 
confuser	/n./computer（计算机）的方言。 
connector conspiracy	/n./生产商新产品可能不与旧版本兼容的趋势，逼近你要不买一整套全新的，或者买一个昂贵的兼容接口设备。 
cons	/n./\n1，在特定的列表中加入一个新的元素。 \n2，词组cons up：把数个小的部分整合起来。 
considered harmful	/adj./\nEdsger W. Dijkstra在1968年三月出版的"Communications of the ACM"的书中留下了批注："Goto Statement Considered Harmful"(goto 语句对编程有害），挑起了第一次针对非结构化编程的战争。 
console	/n./\n1，大型机中操作员的位置。 \n2，在微型机中，指主屏幕和键盘。 
console jockey	/n./参见 terminal junkie。 
content-free	/adj./形容一条信息没有给接收者带来任何知识。 
control-C	/vi./停下现在的工作。大部分操作系统都有这种操作来停止一个程序。 
control-O	/vi./让程序继续运行，但不产生任何输出。 这寓意着一个人对另一个人的某件事情不感兴趣，通常是针对某人吹牛时采取的反应。 
control-Q	/vi./重新开始 
control-S	/vi./暂停说话。这个与control-O不同的是，讲话者被要求停下来，但听者准备好后，讲话者又可以开讲了。 
Conway's Law	/n./关于计算机软件组织和计算机协会应该合谐的规定。 
cookbook	/n./厨艺书\n一本包含了各种小代码段的书籍，这些代码通常可以用来做很多奇妙的事情。这部书的功能和人类语言中的短语书很相似。 
cooked mode	/n./与'raw model'相对，指有中断功能、可擦除、可终止及其他特殊字符解释功能的字符输入模式。 
cookie	/n./句柄，事务id,或者其他两个正在运行的程序可以共用的符号。 
cookie bear	/n./cookie monster的早期叫法。 
cookie file	/n./将fortune程序的cookie打包，打包完成后，将有助于其他fortune程序提取使用。 
cookie jar	/n./存储器中用于存储cookie文件的位置。 
cookie monster	/n./70年代早期的一种黑客手段，可以随意关闭受害者的终端或控制台。 
copious free time	/n./\n1，一个虚构的全部由不可能完成的任务所构成的计划。 \n2，为一些愚蠢的、白痴的任务所留下的时间。 
copper	/n./传统的电线都使用铜作为核心的传导介质。 
copy protection	/n./版权保护\n一系列用于防止软件被非法盗版或者合法用户使用盗版的软件。 
copybroke	/kop'ee-brohk//adj./用来描述某受到版权保护的软件无法工作。 
copyleft	/kop'ee-left//n./由GNU EMACS或者其他自由软件组织所制定的软件版权规则。这种规则允许使用者复制软件。 
copywronged	/n./copybroke的同义词。 
core	/n./指代内存，虽然该短语比较古老，但是在unix社区中，仍然被有资历的黑客使用着。一些由这个短语派生出来的短语还是比较新的。 
core cancer	/n./一个在缓慢但是却不停的造成资源泄漏的进程，就类似于癌症。 
core dump	/n./\n1，将内存中的数据全部复制出来的行为。 \n2，引申为人们昏迷、呕吐或处于极度震惊中。 
core leak	/n./内存泄漏 
Core Wars	/n./在一个模拟的机器里，组装程序进行的活动。它的目标是通过重写对手程序的代码来杀死对手的程序。 
corge	/n./一个非语义变量。 
cosmic rays	/n./假想中造成bit rot现象的原因，参见bit rot。 
cough and die	/v/一个程序举手投降了，并不是因为bug或者疏忽的原因，而是因为设计的失误。 
cowboy	/n./黑客的同义词。有报道说在SUN公司里，这个词通常带有敬意。 
CP/M	/n./一个名叫Gary Kildall的黑客为8080计算机和基于Z80的计算机编写的一个小型操作系统。 
CPU Wars	/n./1979的一个大型漫画，讲述的是被洗脑的IPM组织的机器人侵略和平的HEC组织的公民的故事。 
crack root	/n./打败一个Unix系统的安全防御并且获得最高权限的行为。 
cracker	/n./打败了系统安全防御机制的人。 
cracking	/n./入侵到一个计算机系统内的行为。这种行为通常没有什么高深的黑客技巧，而只是通过坚持使用一些很出名的技巧来利用系统中常见的弱点。 
crank	/vt./描述一个机器的性能，特别是长期的性能。 
CrApTeX	/n./当TeX或LaTeX不能正常工作时，表示责备的词。 
crash	1，/n./一个突然的、剧烈的故障。 \n2，/v./突然就失败了。 
crash and burn	/n./电影一个壮观的碰撞，如汽车相撞，在计算机中表示严重的故障导致电源烧毁。 
crawling horror	/n./一些古老的设备或软件由于大量黑客的共同努力，使得它仍然顽强地工作着。 
cray	/n./\n1，由Cray实验室设计的超级计算机的广告词之一。 \n2，所有的超级计算机。 
cray instability	/n./一个算法或程序中只有被放到大型计算机中跑大数据时才会出现的问题。 
crayola	/n./一种超级迷你/微型计算机，合理地提供了超级计算机的部分功能，但价格却不合常理地低。 
crayola books	/n./美国计算机协会NCSC颁布的计算机安全标准中的一个系列，参见'rainbow series'。 
crayon	/n./\n1，在Cray超级计算机上工作的人。 \n2，一个只进行数据基本操作的computerron。 \n3，计算能力的计量单位，一台Cray-1的计算能力记作一crayon。 
creationism	/n./一种错误的观念，认为一个大型的，革新型的软件设计可以事先就完整地写出来，并且不费力地做出来，即使开发队伍天赋一般，付出的努力也一般。 
creep	/v./缓慢的而且不情愿的进展。 
creeping elegance	/n./ 
creeping featurism	/n./ 
cretin	/n./天生的失败者；可憎的人；不能把任何事情做好的人。 
cretinous	/adj./错误的；愚蠢的；无用的。 
crippleware	/n./\n1，试用软件，故意将某些功能除去，诱使用户购买可以正常工作的付费版本。 \n2，在使用中劝诫你提供一些捐的软件。 \n3，硬件上残废的，可以升级到更高级更昂贵的版本，却只需要做一些细小的改动。 
critical mass	/n./在物理学中，能够使得核连锁反应维持下去的可裂变物质的最小量。在软件中，指修改一个bug引入了其他的数个bug。 
crlf	/n./回车符。 
crock	/n./一种技术能够正常工作，但是不能保证即使在最小的干扰下不会出错。 
cross-post	/vi./在多个新闻组同时发表同一个文章。 
crudware	/n./指在用户组和电子公告板的一些业余爱好者的世界中传递的大量的低质量的数据。 
cruft	/n./\n1，令人不愉快的物质。 \n2，卑劣、粗糙生产的后果。 \n3，过量，冗余。 
cruft together	/vt./将一些东西匆匆拼凑起来，仅管暂时管用，但十分丑陋。 
cruftsmanship	/n./粗制滥造。 
crufty	/adj./\n1，制造很差的，很有可能过于复杂的。 \n2，令人不愉快的。 \n3，/n./一些令人不愉快的小事物。 
crumb	/n./两个二进制位。 
crunch	1，/vi./处理，通常以一个耗时、难懂的方式。 \n2，/vt./用一种复杂的方案来减少文件的大小（划不来）。 \n3，/n./字符'#'。 \n4，/vt./将程序代码挤压成最小的体型，并且还能正常编译运行。 
cruncha cruncha cruncha	/interj./当计算机艰难运行程序的时候，一种对自己说的鼓励的话。 
cryppie	/n./译解密码者。 
CTSS	/n./一种可兼容的分时操作系统。 
CTY	/n./电脑终端中与系统物理上相关的部件。 
cube	/n./\n1，小格间，许多软件公司的办公事都采用小格间的结构。 \n2，一台NeXT版的计算机。 
cubing	/vi./指一个在英特尔超级个人电脑上做的黑客行为。 一种无法描述的自我折磨行为。 
cursor dipped in X	/n./在线打字的时候，光标或多或少地向前移动，将所有的字母留在它的后面。 
cuspy	/adj./\n1，定得好的。 \n2，功能优秀的。 \n3，形容一个有魅力的，并且单身的女人。 
cut a tape	/vi./在磁带上写一个程序或文档以发行。 
cybercrud	/n./\n1，无聊的技术报告演讲。 \n2，邮件中令人费解的内容。 
cyberpunk	/n./从1990年开始，流行文化中包含了一群自称“网络朋克(Cyberpunk)”的人。 
cyberspace	/n./\n1，抽象的信息间隔，在载入的时候会有视觉提示，并且可定制，导视。 \n2，整个网络被称为网络空间(cyberspace)。 
cycle	/n./\n1，计算时的一个基本时间单位，一时钟周期。 \n2，抽象中的，度量人们大脑的计算能力的单位。 
cycle crunch	/n./超过一定数目的同时使用一台电脑以至于每个人并没有得到足够的时钟周期来完成自己的任务，系统开始堵塞。 
cycle drought	/n./缺少时钟周期，可能是由于cycle crunch，也有可能是其他原因。 
cycle of reincarnation	/n./用以表示一个著名的现象：在处理图象的某个时候是放在主cpu中处理还是放在显卡中处理好，为了达到较好的效率，任务可能会在两个处理器中多次移交。 
cycle server	/n./功能极强的机器，主要目的是来运行大计算量或者存储密集性的程序。暗示交互性极强的工作在其他机器上来做。 
cypherpunk	/n./解密高手。 
D. C. Power Lab	/n./SAIL计算机摆放过的地方，实验室以Donald C命名，黑客们发现有趣的是这个人与电气工程没有一点关系。 
daemon	/n./一种不能被手动唤醒的程序，它保持静止直到某些条件被触发。 
daemon book	/n./介绍BSD UNIX的内部构件的标准参考书籍，"The Design and Implementation of the 4.3BSD UNIX Operating System"。 
dahmum	/n./组成互联网上的争论，尤其是善于操作系统的争论的内容或素材。 
dangling pointer	/n./ 悬挂指针\n一个不指向任何地方的引用。这种情况的出现通常是因为指针之前指向的东西别移除或者消失了。在这里，则具有一般性的意义，比如一个人换了电话以后的那个老电话号码。 
dark-side hacker	/n./黑暗黑客\n一个罪犯或者有恶意的黑客。 
Datamation	/n./一个黑客认为所有的白领都会读的杂志。 
DAU	/n./德文中D"ummster Anzunehmender User 的缩写。 
day mode	/n./同phase的第一个释义，但只作用于人。 
dd	/vt./最初是UNIX中的复制命令，可以使用一些参数。 
DDT	/n./所有在机器命令级别帮助编程人员调试程序的调试器的总称。 
de-rezz	1，/vi./消失或溶解。 \n2，/n./苹果计算机的反编译器。 
dead	/adj./丧失功能的，垮掉，崩溃，特别是指硬件。  指正在工作但是得不到维护和改善的软件。 
dead code	/n./死代码\n一些永远得不到执行的代码，因为对这些代码的调用已经被移除了。出现这种情况通常表示程序中有逻辑错误。一个好的编译器通常要报告出这些死代码。 
dead link	/n./死链接\n一个永远链接不到它所需指向信息的万维网资源地址。出现这种情况的原因是文档被移除或者删除了。 
DEADBEEF	/n./在IBM的环境中，新申请的一个字长内存中会被初始化为十六进制的DEADBEEF。 
deadlock	/n./\n1，死锁，两个处理器都在等对方先做些什么然后自己再进行处理，因此两个都动不了。 \n2，形容人们都不先开口的情形，就像死锁一样。 
deadly embrace	/n./死抱\n和死锁意思一样，虽然它通常是指涉及到两个进程的情况。这个词在欧洲特别流行，而死锁是在美国流行。 
death code	/n./系统中的一个程序，它的功能是将一切位置零，包括寄存器、内存、存储器，甚至是这个程序本身所占用的存储空间。 
Death Square	/n./Novell网络集团的商标。 
Death Star	/n./AT&T集团的商标，就像电影中的死亡之星。 
DEC	/n./Digital Equipment Corporation的缩写，现在已经被DEC公司弃用。 
dec	/dek//v./减小的缩写形式。特别喜欢被汇编程序员来使用。 
DEC wars	/n./1983年，Alan Hastings和Steve Tarr用黑客世界中的一些事物和称呼恶搞了一把星球大战'star wars'。 
decay	/n.,vi/一种对c语言中大多数数组型值的一种自动转化。这种说话不会被纳入这种语言的标准规范之中的。 
deckle	/dek'l//n./指10个比特的意思。 
DED	/n./发光二极管Dark-Emitting Diode的缩写。 
deep hack mode	/n./参见hack mode。 
deep magic	/n./深度魔法\n对于某个程序或者系统来说的一项出色而有神秘的核心技术。通常是不会被其他人怎么接触到的。比如一些编译器的优化技术或者操作系统设计就属于这种深度魔法。 
deep space	/n./\n1，描述程序出了执行完出了内存以后的想像中的位置。 \n2，一个人发晕、糊涂到前言不接后语的地步。 
defenestration	/n./
defined as	/adj./定义为\n被指派到某种角色。 
dehose	/dee-hohz//vt./清除hosed状况。 
delint	/dee-lint//v. obs./在lint阶段，通过修改代码来消除问题。这个用法已经没有被广泛使用，是因为现在的Ｃ编译器在编译阶段所发出的警告已经和lint阶段差不多详细了。 
delta	/n./\n1，一个很小的或带来增长的量变。 \n2，早期Unix中用于控制代码版本的文件。 
demented	/adj./形容对于一个程序的厌恶。 
demigod	/n./一个这个的黑客：有着多年经验，在世界上有名气，并且担当主力编写过一款被黑客社区半数以上的人胜过的工具或游戏。 
demo	/de'moh/展示\n展示产品或者原型。一个比测试更能有效发现bug的方法，特别是观看者是很重要的人物的时候。    做展示的行为。   产品的一个早期版本，在这个版本中展现的是程序的基本功能。 
demo mode	/n./\n1，演示模式，在一定的时间内按一定顺序将代码跑一遍。 \n2，在电子游戏中，一段不需要操作而程序自动将游戏跑一段的画面。 
damon	/n./\n1，同daemon。 \n2，在Unix系统中用法与daemon相同。 
demon dialer	/n./一个反复拨打同一个电话号码的程序。 
depeditate	/n./与斩首decapitate类比，诙谐地将（文本、代码的）底部吹掉、去除。 
deprecated	/adj./指的是某个程序或者功能被认为过时或者正在被淘汰。通常是因为有更好的替代品出现。但是这些东西往往会保留很长时间的。这个短语在标准文档中往往会以较高频率出现，当文档的作者发现很多功能将被淘汰。 
derf	/derf//v.,n./当某人登录的终端却离开，他人继续使用这个帐号来操作的行为，特别是用这个帐号来发表文章。 
deserves to lose	/adj./形容某些人故意将一些事情做错。 
desk check	/n.,v./在脑子中模拟程序流程，一种发现bug的方法。但是在现在这种开发环境下已经不流行了。 
despew	/d*-spyoo'//v./自动生成大量垃圾信息，并发送到网络。 
Devil Book	/n./参见daemon book，daemon book的作者更喜欢用Devil Book来称呼这个文档。 
dickless workstation	/n./极度的黑客式讽刺，形容一类排他的并且需要配备昂贵的存储服务器的网络设备，如Sun3/50等。 
dictionary flame	/n./字典火焰\n通过在某些关键短语上钻牛角尖，来转移辩论中的核心问题。这种技巧在那些在辩论汇总喜欢在定义上做文章而不管现实状况的人。 
diddle	以并不严肃认真的方式来工作或者修改。以及这种行为所导致的后果 。 
die	/v./与crash同义词，表示系统或软件故障。 
die horribly	/v./表示严重的系统或软件故障，崩溃，与crash and burn 意思相近。 
diff	/dif//n./一个写明了各项变化的列表，特别是指代码或者文档之间的变化。通常这个列表是由diff指令来完成的。 
digit	/n./指Digital Equipment Corporation的员工。 
dike	/vt./移除某部分东西或者使某部分东西失效，比如电脑中的一根线或者程序的一个子过程。 
Dilbert	/n./一个在黑客中非常流行的连载漫画的名字。 
ding	/n.,vi./Feep的同义词，在黑客中不流行，但是在现实世界中极流行。 
dink	/dink//adj./指一些已经不值得怎么去对待的小机器，通常这些机器是你不得不在工作上去使用的。 
dinosaur	/n./恐龙\n任何需要抬高或者特殊能源供应的机器。尤指那些老式的小型机，这和那些新的基于微处理器的机器截然不同。 
dinosaur pen	/n./恐龙笔\n一种传统的机器，它需要单独的房间，抬高的地板，特殊的电力供应和大功率的空调。 
dinosaurs mating	/n./当一个big iron被另一个big iron收购或合并的时候发生的情形（讽刺地）。 
dirtball	/n./一个微不足道，也许十分努力的局外人，他不属于主流甚至于小的团体。 
dirty power	/n./容易给计算机造成问题的电压。 
disclaimer	/n./免责声明\n在网络上发表新闻，常在后面仪式性的追加一段免责声明，表明这是作者的个人想法，与他所属的机构及发表的网站机构没有关系。 
Discordianism	/n./对于厄里斯女神的崇拜，在黑客中非常流行。 
disk farm	/n./一间或数间摆满了磁盘的房间。 
display hack	/n./一个和万花筒功能类似的黑客程序，在别人的电脑上展示美丽的图片。 
Dissociated Press	/n./这是一个将任何材料转换为可笑的垃圾的算法，之所以这么命名是为了讽刺美联社(Associated Press)。 
distribution	/n./发布\n为了发布而将代码按树状组织起来。 邮件列表的一种比较流行的说法。 某些信息的特有的域。 
disusered	/adj./指一个人在某个计算机上的帐号被消除了。通常是因为不好的原因。 
do protocol	/vi./按照某些清晰的预定的规则来和某人交互。 
doc	/n./文件"documentation"较为常用的简写方式。 
documentation	/n./指一个软件或硬件动辙数公斤的各式各样的说明文档。 
dodgy	/adj./参见同义词flaky，在非美国地区被广泛使用。 
dogcow	/n./参见Moof。 
dogpile	/v./当一个很不友好地将他所有人的问题的回复都很简短地写在一个贴子里，这种行为可以被称作dogpile。 
dogwash	/dog'wosh/一项并不紧急的工作，做动词的时候是指参与到这种性质的工作之中来。 
domainist	/adj./\n1，一类根据别人邮件地址域名来评判他人的人。 \n2，用于形容一个邮件地址，因为邮件地址的'@'符号的右边一般来说是一个域名的一部分。 
Don't do that, then!	程序的编写者对于用户的报怨通常作出的回应。 
dongle	/n./\n1，一个商业软件的安全性或防盗版装置。 \n2，由1扩展，任何程序运行时所需要的硬件设备密码或可转让的号码。 
dongle-disk	/n./为了实现某些特殊用途而制造的软盘。 
donuts	/n./一个可以替代任大小的何内存位的集合名词。 
doorstop	/n./用来描述那些已经不起作用的设备，特别是老式的设备。保留的原因是政治原因或者仅仅是为了备份。 
dot file	[Unix]/n./指在正常的目录浏览工具中默认不可见的文件。 
double bucky	/adj./同时按下CTRL和META功能键，在苹果机上。 
double DECkers	/n./用于描述一对都在电子设备公司上班的夫妻。 
doubled sig	/n./在一个新闻组发布的新闻中或在一封电子邮件中引用了两次的签名（通常会在末尾加上包含发送者信息的签名）。 
down	1，/adj./没有操作地。 \n2，/vi./停止工作。 \n3，/vt./故意使...停止工作，通常是为了维修的原因。 
download	/vt./从一个大型服务网站服务器中经由数字传输线路传输一些文件或代码，下载。 
DP	/n./\n1，数据处理Data Processing。 \n2，缩写，参见Dissociated Press。 
DPB	/vt./把东西丢到...的中间。 
DPer	/n./ 进行数据数理的人。 
dragon	/n./一个功能与"daemon"类似的程序，唯一的不同是它从不被用户唤醒，只会协助系统做很多的辅助工作。 
Dragon Book	/n./龙书 \n经典的编译方面的书籍："Compilers: Principles, Techniques and Tools"。 
drain	/v./ 同flush的第二个释义。 
dread high-bit disease	/n./ 一个地区性的电脑设备的毛病：字符进进制码的最高位会被强制置为1. 
DRECNET	/n./这个单词本身的意思是污秽的，但被黑客用来指代DECNET，这是一个由DEC公司帮助编写的含有对于用户控制的网络协议。 
driver	/n./事件处理程序中的一个主循环，那些接受指令而且负责执行的代码。 一些专门控制某种外围设备的程序。 一种不同硬件间数据格式的转换程序。 
droid	/n./ 一个有着以下特质的人： \n（1）对于上级部分或体制有着天真的信任。 \n（2）对于官僚部门发表的废话有着偏执的信仰。 \n（3）规则支配精神。 \n（4）对于批评已经麻木。 \n（5）没有进取精神，不会去做任何职责以外的事情。 
drool-proof paper	/n./解释地过于详尽的说明文档，以至于一个白痴也能读懂。 
drop on the floor	/vt./ 无声无息的抛弃信息或者其他有价值的数据来应对一些出错的状况。 
drop-ins	/n./ 在终端上由于线道噪音或者其他的功能失效而导致的扭曲的字符出现在屏幕上。 
drop-outs	/n./ \n1，一种电源故障。 \n2，由于软件故障或系统饱和而发生的缺失字符的现象。 \n3，精神故障。 
drugged	/adj./ 明显的愚蠢。 对于硬件来说，则是指相对于正常速度都显得相对缓慢。 
drum	/n./早期的技术用语，指老式的圆柱休状的磁性存储设备。 
drunk mouse syndrome	/n./ 一些电脑的鼠标定点设备出现的故障，表现鼠标移动没有规律，或很难移动到想要的地方。 
Duff's device	/n./ 由Tom Duff在卢卡斯影业时发明的一种C语言的令人激动的用法。 
dumb terminal	/n./ 一种比glass tty先进一步的终端，有一个很小的光标，但是没有屏幕编辑或者其他更好的功能。 
dumbass attack	/duhm'as *-tak'/ /n./ 导致老手犯简单，幼稚错误的原因。 
dumbed down	/adj./ 简单的，有强烈暗含着过于简单的意思。 
dump	/n./ \n1，关于系统的一个问题或一种状态，未经整理的、信息量非常大的资料。 \n2，备份。 
dumpster diving	/n./ \n1，从办公或专业软件的安装过程中筛选出有用的保密信息。 \n2，在高科技设备公司大楼后的垃圾车内寻找废弃的但仍有价值的设备。 
dup killer	/n./ 一种在世界范围的网络BBS系统中负责检查并删除从不同的路由发出的相同内容的信息。 
dup loop	/n./ 向网络中无限循环地发送相同消息的数据流。 
dusty deck	/n./ 一些在系统开发中需要一直维持不变或保持兼容的老程序。 
DWIM	1，/adj./即使在输入很糟糕的情况下，也能够猜测用户想要的答案是什么，甚至能够猜对。 \n2，/n./BBNLISP或INTERLISP语言的程序，它的功能是修正众多的普通错误。 \n3，/interj./对着一台不愿正常工作的电脑骂的话。 
dynner	/n./ 表示32位。 
earthquake	/n./ 在现实世界中对计算机硬件的最终测试。 
Easter egg	/n./\n1，一条隐藏在程序或代码中消息，作为一个笑话。 \n2，对一些并没有进行定义的命令或击键，程序作出的图形化的或文字化的回应。 
Easter egging	/n./ 随机的替换掉一些不相关的组件来希望系统的失效会自动消失。 
eat flaming death	/impl./在《CPU WAR》漫画中，黑客之间流行的一句话。 
EBCDIC	/n./ Extended Binary Coded Decimal Interchange Code的缩写，是IBM老式机中使用的字符集，至少在六个版本中被使用。 
echo	/n./ 在惠多网自动信件共享系统中的一个讨论组。 
eighty-column mind	/n./ 指那些因为存储器从打孔机转换到磁带机而感到受到创作的人，还没有人敢告诉他们硬盘的存在，指那些思想守旧的人。 
El Camino Bignum	/n./ 一条贯穿旧金山半岛的公路，普通人常称呼为El Camino Real。 
elder days	/n./ 黑客主义的英雄时代。 
elegant	/adj./ 将简洁，力量，和设计的优雅结合起来。这个赞美比聪明等程度更强。 
elephantine	/adj./形容程序或系统的代码臃肿而且有很多无用的东西，代码风格差。 
elevator controller	/n./一种嵌入式系统的应用。在1983到1984期间，这个被视为典型的存储量有限的计算环境。 
elite	/adj./过于强调证据，思想闭塞的所谓专家。 
ELIZA effect	/n./指人们在分析问题的时候容易联系到以前的经验上的趋势。 
elvish	/n./\n1，一个信件样式的表格，中间用漂亮的手写安色尔字体书写着凯尔特语的"Book of Kells"，出自电影《指环王》。 \n2，指任何能用图像设备打印出来的，生僻的难以辩论的字体。 \n3，特指一种艺术字体：`B"ocklin'。 
EMACS	/n./ 一种黑客常用的文本编辑器，内嵌了完整的LISP系统。 
email	/ee'mayl/ 电子邮件。 
emoticon	/n./ 一个可以在电子邮件或消息中表示表情的ASCII字符。如下： \n:-) 笑脸 \n:-(焦虑的脸 \n;-)半笑的脸 \n:-/扭曲的脸。 
empire	/n./ 一种源自Peter Langston开发的战争模拟游戏系列的任何一个分支。 
engine	/n./ \n1，一种包含某些功能的硬件设备，但是不能脱离前端设备独立使用。 \n2，一个与1中功能类似的软件，在后台做着很繁杂的数据处理，比如数据库引擎。 
English	程序的源代码，可以是任何语言形式的。与编译好的和可连接的二进制代码相对的。 Pick Operating System的官方数据库语言。 
enhancement	/n./ 修正一个bug的另一种说法。一个具有讽刺意味的黑客可能把其称做是修改点某种特点。 
ENQ	/enkw/ or /enk/\n一种在线上询问别人是否可进行交谈的用语。 
EOF	/E-O-F/ /n./ 一个文件的结束符号。 
EOL	/E-O-L/ /n./ Newling的同义词，一行的结束符号。 
EOU	/n./ 在ASCII中，control字符没有对应的显示图形，往外输出的时候可能会造成错误，因此编程人员用EOU来助记。 
epoch	/n./纪元 \n在操作系统中标致开始的时间。在unix操作系统中大多数指的是1970年1月1日这一天的开始时刻。 
epsilon	任何一个东西的小量部分。 
epsilon squared	/n./ 比epsilon指代的量还要小，完全可以忽略的。 
era, the	/n./Epoch的同义词。 
Eric Conspiracy	/n./ 一次无耻的会谈将一伙神秘的，长有大胡子的黑客团体（名叫Eric）定性为灾难性的阴谋集团。 
Eris	/e'ris/ /n./. 希腊神话中掌管混乱和未知的女神。 
erotics	/ee-ro'tiks/ /n./ 英文中指代电子的行话。 通常在被Helsinki的黑客使用着，可能很好的电子设备让他们兴奋和温暖。 
error 33	/n./ 根据一个成功的科研项目推断另一个项目会获得成功的错误。 
evil	/adj./ 由黑客使用的话是指有些系统，程序被设计的太差劲了，以至于不值得去处理。这个词并不表示不合格或者和差的设计，而是不兼容的设计标准。在主流思想中，这个词更是一种道德和工程上的判断。 
evil and rude	/n./ 既差劲又粗暴，参见evil和rude，特指系统的粗暴是不是由于开发人员的无能造成，而是有意为之。 
exa-	表示数量的单词前缀，为10的18次方。 
examining the entrails	/n./ 通过观察core dupm或者16进制的镜像文件来发现导致系统崩溃的程序中的bug。 
EXCH	/eks'ch*/ or /eksch/ /vt./ 交换两样东西，或者交换地方。这个原来是PDP-10系统的一条交换两个寄存器内容的指令。 
excl	/eks'kl/ /n./ exclamation point的缩写形式。 
EXE	/eks'ee/ or /eek'see/ or /E-X-E/ /n./ 可执行文件的缩写。有些操作系统使用这个扩展名。 
exec	/eg-zek'/ or /eks'ek/ vt., /n./ 操作系统中用来解释脚本，执行程序的一个命令。. 
exercise, left as an	/adj./ 在科技丛书中，由短语右边的部分来完成证明过程，比如可以将证明过程留作给读者的一个练习。 
exon	指在电脑遭遇黑色星期四（参见black thursday）之后，迅速进入互联网寻找可以被利用的站点的猥琐的行为。 
external memory	/n./ 备忘录，掌上电脑或者便条。 
eye candy	/i:' kand`ee/ /n./ 当程序在执行某个后台任务的时候，在前台展现给用户用来分散注意力的东西。 
eyeball search	/n.,v./ 在一堆代码或数据中，单凭肉眼来寻找某样东西，而不是依靠软件工具的帮助。 
face time	/n./ 用来和其他人面对面的交流来处理问题的时间。 
factor	/n./ 因子，系数。参见coefficient of X。 
fall over	/vi./ 崩溃的意思。 
fall through	/v./ \n1，精疲力尽之后退出一个循环。 \n2，写了一个会将控制权交给子程序或远程进程的程序，但这个程序没有通过测试。 \n3，在C语言中，switch结构当一个case语句满足条件进入执行代码，则称为fall through。 
fan	/n./ 没有特别说明的话指的是科幻迷。 
fandango on core	/n./ 在C语言中，一个指针超出了边界，引起了系统中断的行为。 
FAQ	/n./ \n1，常被问的问题，Frequently Asked Question。 \n2，所积累知识的提纲。 
FAQ list	/n./ 常被问问题的列表。 
FAQL	/n./ 就是FAQ List。 
faradize	/far'*-di:z/ /v./ 来开始任何一个极其让人上瘾的过程，或者现在正在走向那么一个上瘾的过程。 
farming	/n./ 指的是硬盘磁头在存储介质上留下划痕。 
fascist	/adj./ 指的是一个拥有过份的安全壁垒的计算机系统，使用限制，或者访问管理策略。暗含着阻止黑客完成任何有趣的事情的策略。  在编程语言或者其他软件工具的设计方面，这个指的是最严格或者最结构化的实现一个功能的方法。这可能是指更严格的错误检查方法。 
fat electrons	/n./ 资深黑客David Cargill善于电脑故障原因的一套理论。 
faulty	/adj./ 在功能上有故障的bug 。 
fd leak	/F-D leek/ /n./ 一种类似于core leak的程序bug, 程序无法关闭一个文件的描述符在文件操作完成之后。 
fear and loathing	/n./ 
feature creature	/n./指一个喜欢向程序或者设计中加入各种新特性的人，甚至牺牲连贯性和精准性。 
feature shock	/n./ 当一个程序员或者用户在面临特点或者功能太多，但是又没有什么引荐资料的软件包时所面临的困惑。 
featurectomy	/fee`ch*r-ek't*-mee/ /n./ 指的是从程序中删除一个特征的两种不同的方式。一种删除是相信这个移除能够使程序更加的优雅，或者有更好的方法来实现那种功能。 另外一种指的是为了满足某些外部限制来删除程序中的某个特征。 
feeper	/fee'pr/ /n./ 一个在终端或者工作站上工作的设备，它能够发声。 
feeping creature	/n./ 一个并非十分必要的功能。 
feetch feetch	/feech feech/ /interj./ 如果有人跟你讲一个对于某个程序的新的改进，你可能就会说这句话。这句话的含义可能取决于说这句话的声调。如果洋溢着热情，意思就是这样做太棒了。如果带着疑虑，则表示并不支持。如果带有一点推卸的感觉，则表示保持中性的态度。 
fence	/n./ 一段序列的或者一个符号用来标识数据单元的边界。 添加到数组中的一些多余的数据用来测试数组中的内容或者作为终结符号。 用来利用编译器知识的任何技术或者技巧。 
FidoNet	/n./ 全世界范围的个人电脑的网络，其中有交换邮件，讨论群和文件。这个成立于1984年，原本只包含IBM的pc机和它的兼容机型，现在则连苹果机也包含进来了。 
field servoid	[play on `android']/fee'ld ser'voyd/ /n./某项服务机构的代表。 
File Attach	[FidoNet]随着bbs上的消息而携带的文件。 通过bbs上的文件携带功能向某人发送一个文件。 
File Request	[FidoNet]第一种意思指的是和ftp等价。 另外一种意思指使用bbs上的file request 选项。 
file signature	/n./ 魔力数字曲第三种意思。 
filk	/filk/ /n.,v./ 一首被改掉歌词的民歌，用于幽默的目的。而由黑客创造的computer filks，则包含某些复杂的技术幽默。 
filter	/n./ 一种按照某种定义好的方式将数据输入流转化为输出流的程序。 
fine	/adj./ 好，但是不是足够的好。 
finger	一个用来展示登录到某系统的某个用户的信息或者所有用户的信息，通常包括全名，上次登录时间，空闲时间，终端线。 做动词时指的是调查用户的信息。 扩展的意思包含检查用户的信息。 
finger trouble	/n./ 拼写的错误或者其他在键盘上犯下的错误。 
finger-pointing syndrome	/n./ 指的是一个由于太多bug所导致的结果。特别是在一个新的或者实验品上面。硬件供应商指责软件供应商。软件供应商则指责硬件供应商。 
finn	/v./一个基于用户在irc上所花的时间而对用户所进行的一个排名。这个短语的起源是来自irc原来是诞生于芬兰的。 
firebottle	/n./ 一个巨型的，原始的，急需能量的电子设备，和fet的功能类似，但是由玻璃，金属等材料制成的。通常所具备的特点是高消耗，低密度，低可靠性，高温操作。 
firefighting	/n./系统管理员为解决突然的操作上的问题而需要做的。 指在项目结束前夕投入大量的人力。 
firehose syndrome	/n./ 主流的意思是如果你想从消防站上饮水的话，那样会把你的嘴唇扯裂。在计算机网络系统中，流控制机制的缺失或者失败会导致发送者发送的信息量超过了接收者所能负荷的。 
firewall code	/n./你放入系统中用来防止用户做任何破坏操作的代码。因为用户总是想做一些事情而不像犯错误，防火墙不仅仅是一种保护机制也是一种和用户交互的机制，所以用户就不会做出伤害系统的事情来。 
FISH queue	/n./与先进先出相对比，这个意思是先进来了，然后一直待在那儿的意思。是以一种玩笑式的指出对某个事件序列的处理已经死掉了。Fishnet用来指代速度极慢的网络或者有巨大漏洞的网络。 
FITNR	/adj./在bug报告中的一种只写概念。 
fix	/n.,v./当一个报告被报告太多次而不能被忽略时一个人所需要采取的行为。 
FIXME	/imp./指在C语言中需要继续加工的代码旁边加的注释。这么做的原因是能够易于被一些字符串匹配程序快速的发现。 
flag	/n./一种只能在两个值中选择一个值得变量，特别是用来指示两种输出中的一种或者控制在两件事情中选择来做一件事情。 
flag day	/n./一种既不能向前兼容也不能向后兼容的软件改动，而且改动和撤销改动的代价都很大。 
flaky	/adj./高频率的损失。这种用法的本意是指一个非正常的，疯狂的，或者不可靠的人。用来指一个系统时，它的意思是系统是有效的，让人想使用它，但是经常的出问题。 
flame bait	/n./一个可能会引发flame war的文章发表。 
flame war	/n./一场激烈的争辩，特别是指在电子论坛上发生的。 
flarp	/flarp//n./ 有一个传说就是任何一个程序包含了"flarp"这个单词的话就会失效。 
flat	/adj./缺乏任何复杂的内部结构。  指代一个存储体系结构，指的是一位的线性空间。 
flat-ASCII	/adj./指的是一个只含7位asc码字符的文件，而且只含asc的标准控制字符。 
flat-file	/adj./对数据库，树，网络结构的一种去结构信息的表示方法，但是这种结构又可以通过隐含的信息表现出来。 
flatten	/vt./去除结构信息，特别是指将树变为一序列的节点。 
flavor	/n./变种，类型。  那些让某物独立成为一种的特性。  在lisp语言中用来表示面向对象中的那个“类”。 
flavorful	/adj./有很多显著的特性。 非常让人愉悦的。 
flippy	/flip'ee/ /n./ 单面软盘被改造成双面的软盘。这么称呼是因为必须把盘翻过面来让另外一面的信息能够 被获取到。 
flood	/v./在IRC频道上输出大量的文本。如果这些文本特别没有意义或者用户们正在进行一场严肃的交谈，这样是很没有礼貌的。 
flowchart	/n./一种可视化的流控制表示规范，其中会使用箭头，会话气球或者其他的各种形状。黑客们通常不使用这种图，觉得这种图很笨，而且一般将它与cobol程序员联系起来。 这种态度来自流图的一些弱点，比如容易读但是不容易些，不够精确等。 
flush	/v./ 删除某东西，通常是多余的东西，或者终止某项操作。  将缓存的I/O数据写入到磁盘中。 将某人从一项活动中排斥出去，或者忽略某人。 
Flyspeck 3	/n./ 指这样一种字体，这种字体很小而不可读。 
FOAF	/n./朋友的朋友的缩写，一个未经证实的，但是可能是真的故事。这个词并非由黑客发明的，但是却被广泛认可。 
FOD	/fod/ /v./ 以极端傲慢或者无视他人的态度来结束。 
fold case	/v./ 这个短语通常被那些不介意工具毁掉了一个case的人。这也暗示案例已经被毁掉了，但是工具所获得的数据仍然被保存了。 
followup	/n./ 在usenet中，用以回复其他帖子的帖子。这个通常包括ID，父信息，智能化的新闻阅读器可以很好的利用这些信息。 
fontology	/n./ 指代那些用来构造和发明windows系统下新字体的知识。 
fool	/n./ 由黑客使用的话，是指一个习惯从明显错误的假设中来推理，而且无法被证据等来说服。 
fool file, the	/n./ 指最愚蠢的表达的集合。 
footprint	/n./ 指由一块硬件所占据的地板或者桌子的一个区域。 RAMFootprint指的是操作系统或者程序所需要的最小的内存。 
for free	/adj./ 指的是程序设计语言或者硬件通过了解其设计就能很好的实习。 
for the rest of us	/adj./ 通常用来指性价比很高的产品，也讽刺的指那些性价比很低的产品。 用来形容那些接口极少或者功能很少的程序。 
foreground	/vt./ 将任务放在最高优先级来立即处理，黑客们通常在处理非计算机的事务时用这个词。 从技术角度来讲，在一个分时系统中，一个能够在前台运行的程序是指能够接受输入而且能够反馈输出给用户的程序。 
forked	/adj./ 在终端上很慢，或者死机。 
Fortrash	/for'trash/ /n./ Fortran语言中的黑客注意，指的是它的原始设计，总体的不规范的语法，受限的控制结构，和充满异常的语义。 
fortune cookie	/n./ 一个随机的引用，无足轻重的一个物品，笑话在用户登录或者登出的时候展现。 
forum	/n./ 任何一种讨论区。 
four-color glossies	/n./ 一种声称包含技术内容的文章但是却非常的肤浅。 也指代不能够包含足够信息来解决问题的技术文档。 
frednet	/fred'net/ /n./ 指代一些随机的，不普遍的在网络上的协议。 
freeware	/n./ 自由软件，通常是由热心的用户群来开发和发布的。 
freeze	/v./ 指对一个准备发布的软件或者文档停止修改来保持稳定性。也暗含着将来某一天，这些东西可能被修改的。 
fried	/adj./ 因为硬件的原因而不能工作。只一个人筋疲力尽。 
fritterware	/n./ 指占用很多的资源但是却没什么效率的事物。 
frob	/frob//n./指任意一个小的物品，能够放入手中的物品。 
frobnicate	/frob'ni-kayt/ /vt./指没有目的地摆弄。 
frog alt. `phrog'	指让人觉得恶心的东西， 也可以用来指代任何事物。 
frogging	[University of Waterloo] /v./一个文本文件或者输入流的部分损坏。 只意外的以非传统的ASC字符形式来展现文本。 
front end	/n./一个中间态的，来帮其他机器处理事务的机器。 指在谈话时对你不在意的人。 指给其他软件提供接口的程序。 
frotzed	/frotst/ /adj./ 因为硬件问题而崩溃。 
FRS	/n./ "可自由再发布的软件"的缩写。 
fry	失效，特别是指硬件方面的。 导致失效。 
FSF	/F-S-F/ /abbrev./ 一个非盈利的，支持GNU项目的机构。自由软件组织。 
FTP	/F-T-P/, not /fit'ip/ 在因特网上的一个文件传输协议。 通过这个协议来发布一个文件。 
fudge	以一种不完整但是可以勉强接受的方式来做，特别是指编写一个软件。 最后的结果代码。 
fuel up	/vi./快速的吃或喝来赶快回到黑客的工作。 
gabriel	/gay'bree-*l/ /n./ 一个不必要的拖延技巧。绑绑鞋带或者不断系头发。 
gang bang	/n./ 在很短时间内用一大堆松耦合的程序来拼凑成一个具有众多功能的软件。往往这样的软件有很多问题。 
gas	一个具有厌恶感和憎恶感的词汇。暗示的意思是气体应该被大量的排除，所以就消灭了制造麻烦的根源。  指在非序列存储的文件中，因为数据被删除，而不能被使用的空间。  
geek out	/vi./ 在一个非技术氛围内，突然变成一个技术痴迷者。 
generate	/vt./ 根据一个算法，一个程序或者一组规则来制造某事物，或者作为执行一个算法或者程序的副作用。 
Genius From Mars Technique	/n./ 某种可视化的特质能使一个人不顾标准的路径而得出一个超乎预料的新算法。 从不同的角度解决一个问题，而且回想起来发现解决得很好。 
gensym	/jen'sim/ 为某事物暂时定一个新的名字，这样的话名字就不会和已经出现的名字发生冲突。 最后结果产生的名字。 
Get a real computer!	/imp./当有人在某个系统上完成工作有困难的时候，这个系统通常有下述特点：单任务，无硬盘，地址空间小于16m。黑客通常用这句话来回应这种情况。 
GFR	/G-F-R/ /vt./ 按照程序自动或者半人工的方式来删除文件，特别是那些被用来设计来获取大量存储空间的程序。 
GIGO	/gi:'goh/ [acronym] 当用户因为输入错误或者使用不当而导致程序出问题，而且用户还在抱怨的时候。通常用这句话来进行回应。 还被用来分词用户对计算出来的数据过于信任。 
gillion	/gil'y*n/ or /jil'y*n/ /n./ 指10的九次方这个数据。 
GIPS	/gips/ or /jips/ /n./ 一秒钟执行giga级的指令数目。 在1991年，这只是在少数的超级并行计算机中出现，但是现在情况不一样了。 
glark	/glark/ /vt./ 从上下文环境中推导出某事物。 
glass	/n./硅的同义词。 
glue	/n./ 一个泛指的词汇，泛指任何将两个模块连接起来的逻辑接口或者协议。 
go flatline	/v./ 终结，终止。 完全的安静下来，这里指机器经历了可控制的关机。 只一个显示管没有了纵向扫描，而只是看到很亮的横向扫描线。 
go root	/vi./ 暂时进入root模式来进行一个特权操作。在澳大利亚则不这么用，因为在那里root指动物的性别。 
gobble	/vt./ 来消耗，获取。 
golden	/adj./ 用来描述一个磁性介质，指其中包含了一个经过测试的，准备发布的软件版本。 
gonkulator	/gon'kyoo-lay-tr/ /n./ 一个自以为是的设备，实际上那个设备没什么实用的目的。也用来形容一个人最不喜欢的电子设备。 
gotcha	/n./ 系统的一个失败的特征，特别是指程序设计语言或者环境，这个特征可能会导致bug或者错误，而且会导致完全超乎预料的输出。 
green machine	/n./ 一个计算机或者外围设备，被设计或者实现来按照军方的标准。 
Green's Theorem	/prov./ 只对于某个故事，在任何群体里，至少会有一个人没听说过那个故事。 
gronk out	/vi./ 停止工作，对于人来说，是指回家或者去睡觉。 
gronked	/adj./ 破的，坏的。 对于人来说，是指处于一个非常疲惫的状态。 
grovel	/vi./ 工作处于中间状态或者没有显著的进步。  每分钟都停下来检查或者做全面的检查。 
guiltware	/gilt'weir/ /n./ 自由软件附带着这样一种信息：这个作者为了这个软件工作了多长时间或者多强的劳动。让使用这个软件的人感觉要离开寄钱给这个开发者。 
guru	/n./ 专家，不仅是帮人家做某事，而且是知识的源泉。 
house wizard	/n./指一个黑客占据了技术专家，研发者或者系统级的职位在一个商业公司中。这个人往往很有影响力。 
huff	/v./使用huffman算法来压缩数据。 
humma	/excl./ 在大多数聊天软件中，当你觉得无话可说，但是又觉得需要说什么事情的时候，就可以使用这个词。 
hungus	/huhng'g*s/ /adj./ 巨大的，难以控制的。 
hyperspace	/hi:'per-spays/ /n./ 一个远离pc指针的内存位置，特别是指那些没有被虚拟存储系统映射到的位置。 
hysterical reasons	/n./ 指的是某件事必须以一种非常愚蠢的方式来完成就是为了向前兼容性，而且必须兼容的谁急往往很糟糕。 
home box	/n./ 一个黑客的个人机器。 
home machine	/n./ 一个黑客的个人机器。 一个用来读电子邮件的机器。 
heads down	[Sun] /adj./ 长时间的，过度专注某件事情，导致对外面的事情的遗忘。 
hardcoded	/adj./指的是直接写在程序中的，不易被更改的数据，与那些写在配置文件中的数据想对应。 
I didn't change anything!	/interj./ 我没有改变任何事情！ \n一个愤愤不平的哭叫声经常在退化测试bugs 出现时被听到，对这一主张的非正式（ canonical）的回复是“这个bug 还是如之前一样的存在着，不是吗？”又见一线修复（one-line fix）。当一个应用程序员在责备一个明显的与系统软件变换无关的应用软件问题时，这样的哭叫声同样会被听到，例如在终端又加了一个网络会出现被零除错误。通常，我们发现他们的断言是错误的。在一段质问结束后，他们会承认从他们的观点来看，程序中一些重要的重组和变化是不应该破坏任何事情的，然而事实上，却完全地毁掉了（hosed）代码。 
I see no X here.	我没有在这里看到X \n这句话还有其他可能等同的方式来表示，例如“这里没有X”，“X 是缺少的”，“X 在哪？”。黑客们（和他们所编写的交互式计算机游戏）通常更喜欢原来的这句话。这要追溯到原始的程序控制数据处理器模型10 的到来（ADVENT），当你要求它不在你的位置对目标做介入对象的操作，它就会以这种方式来回应“我没有在这里看到X”。 
IBMdiscount	/n./IBM 折扣 \n物价上涨。在IBM 外部，这由来于共同的感知IBM 的产品总是将标价过高（见clone ）；在IBM 内部，据说这由来于住进一个区域的大量的IBM 员工导致了物价上涨。 
ICBMaddress	/n./ 洲际弹道导弹地址 \n（又见‘导弹地址’）一种通过世界性新闻网络系统绘制地图的工程来记录地点位置的形式，其中包括了经度和纬度，它更偏向于弧秒精确度。而实际上它是用世界性新闻网络系统在绘图仪上的链接来生成地理纠正图的；然而，当提及记录位置时通常会用它的‘洲际弹道导弹地址’或‘导弹地址’，而且许多人都将包含了‘导弹地址’的签名块（sig block ）放在了他们的名字中。（一个真实的导弹地址将包含目标高度）。 
idempotent	/adj./ 幂等的 \n[来自于数学科技词汇]当C 的头文件被一次或多次在许多源文件中使用时，会经常见到这个术语，其中包含了这些源文件共同的定义和声明。如果一个头文件被同一个编译器包含了两次（或许是嵌套的使用了#include），就会出现编译错误除非头文件是被保护的而不是被多次包含的；这样一个受保护的头文件我们成为幂等的。这个术语同样可以用来描述一个子程序被用来执行一次临界行为，甚至该程序被调用多次。 
If you want X, you know where to find it.	（PL/I，是Programming Language One的简写。当中的“I”其实是罗马数字的“一”。它是一种IBM 公司在1950年代发明的第三代高级编程语言，如果你想要X，你要知道在哪里可以找到它有这样一个传说，C 语言的发明者，丹尼斯.里奇曾经回应C 语言作为一种当时很普及的程序语言和其它语言的相似特征时，回应了这样一句话“如果你想要程序设计语言，你要知道在哪里可以找到它”。从那以后，这句话成为了避开改变新的设计来模拟旧的（含蓄的说，较低的）的请求所回应的黑客们的标准方式。情形X 为Pascal 在Usenet 的新闻组时不时的有所出现，更确切的X=X 已经在图形软件的讨论中有所报道。（参见X） 
ill-behaved	/adj./ 举止不当的\n1．[数值分析]由于累积的取整错误或者不好的收敛属性而导致算法或计算方法趋于失败的。 \n2．象屏幕，键盘，和磁盘一样的软件它们绕过有定义的OS 接口，自己来做事情，通常依赖于机器的硬盘，有时能够正常运行，有时不轻便的，有时又和其它系列的软件不兼容。在IBM PC/MS-DOS 世界里，有这样一个大众定理（近乎于真理），大意是（拥有着大量的在OS界面上不适宜的，性能失常）的所有有趣的软件都是举止不当的，不合适宜的。又见bare metal相反的well-behaved, 对比PC-ism. 参见mess-dos。 
IMHO	/abbrev./ 恕我直言 \n[来自经由Usenet 的旧金山影迷；`In My Humble Opinion'的缩写]“IMHO，因为键入一些错误的信息而导致一些无法察觉的错误，混有C 的名字应该避免，无论怎样他们都显得过于帕斯卡了。”它还有其它的形式，例如IMNSHO (依我看（自信的）) and IMAO (依我看（傲慢的）). 
Imminent Death Of The Net Predicted!	/prov./ 网络被预言临近崩溃 \n[新闻组]新闻组自从1980—81首先成功开始，大约以每年2倍的指数级成长。从另一方面来看，信号干扰比稳定的减少了。这些趋势引领了在1983年的网络将濒临崩溃的预言。10年甚至几十年过去了，足够多的另人沮丧的预测混淆了这个已经成为笑话的预言“网络将濒临崩溃”，任何时候拽出一个人他不满于网络的信号干扰比，或是巨大的稳定增加的容量，或是可能的损失，或是或是一个关键的结点或链接，或是一个笨蛋为公布资料的版权的潜在的诉讼，等等。 
in the extreme	/adj./极端的 \n被黑客们首选的所推崇的后缀，例如，“极其阴暗的”，甚于obscure 相反的highly 
inc	/ink/ /v./ 增加 \n口头的（很少用语书面的），增加的速记，例如‘逐个增加’，特别用于程序员的集合中，在集合中这个语言可以给出增量的一个帮助标记的记忆方法。 
incantation	/n./ 诀语 \n任意一个想要在系统中获得所要的结果的特别武断的或者隐含的命令，做低沉状，不使用口令或是其他明确的安全特征，而是特别的使用一些技巧像对于一些不是很好归档的文件应该学习使用wizard“编译器通常在数据部分找出初始数据的位置，但是如果你使用了正确的诀语做安静的命令，他们将会被迫介入文本空间”。 
include	/vt./ 包括 \n[新闻组]1.为了复制另一条信息的部分或全部的一个回应或是跟进工作，使得回应的内容更加清晰明了。在“黑客写作设计”中可以看到更多的关于包含形式的讨论。 \n2.[来自于C]#include «disclaimer.h»在信号块中的出现指出了标准disclaimer 文件的概念。 
include war	/n./ \n包含作战 \n在一个讨论线程中过分的多层次的包含，这样一个实践过程趋于干扰读者。在论坛中，有着高通讯量的新闻组，例如Usenet，它可能会导致爆发和激励一个杀死文件（ikill file）的开始。 
indent style	/n./ 缩排风格 \n[C 程序员]在可读的样式中所要使用的缩排风格的规则。这里主要有四种C 的缩进风格，如下；它们的目标是使得读者在视觉上对结构范围的控制更加容易。一个重要的变量就是“{”和“}”关于语句（s）的位置，它们将语句括入来保护或是控制语句（if,else,for,while,or do）在一个区域中， “Kernighan & Ritchie”之后的名字就为“K&R 形式”，正是因为这个例子在K&R 中以这样的形式被格式化，有时也被称作“核心形式”是因为Unix 内核被写在其中，或是“一个真正的支柱形式”（缩写1TBS）因为它的其它辅助形式。每一等级的缩排风格体现在缩进8 个空格键或是1 个Tab 键，下面是一些常规的形式 \nif («条件») { \n«主体» \n} \n‘Allman 形式’原名Eric Allman,一个伯克利的黑客用此缩进形式写了许多的BSD（最初的Unix 系统）的实用程序（有时称BSD 形式）。和其它正规的缩进形式在Pascal 和算法语言中一样，每一等级的缩进如下8 个空格键，但通常4 个空格即可（尤其在C++代码中） \nif («条件») \n{ \n«主体» \n} \n`Whitesmiths 形式，是被一种较早的商业C 语言的编译器' Whitesmiths C 的推广，最基本的缩进是每个等级缩进8 个空格，但有时也会见到4 个空格键的情况。 \nif («条件») \n{ \n«主体» \n} \n“GNU 形式”被用于GNU 编辑器和免费软件基础代码中，而且是无处不在的，缩进的格式是每个等级缩进4 个空格键。在缩进外和内部使用半缩进的形式。 \nif («条件») \n{ \n«主体» \n} \n调查显示Allman 和Whitesmiths 形式是最受欢迎的，而且两个基本上是相当的，K&R/1TBS曾经在很普及，但是现在没有另外两个更通用（人们失去了对在if 和while 中的起着保护作用的正确括弧的支持，听起来不像是好事），支持1TBS 的人们争论到，1TBS 的可读性虽然没有它在垂直空间的节约来的重要，但它能够使人们一次在一屏内看到更多的代码。无疑这样的事件将继续着激烈的竞争的主题。 
infant mortality	/n./ 初期死亡率 \n在黑客中有这样一个广为传播的传说，那些硬件的突然变化的失败将导致减少机器首次使用的时间。大致一半的芯片和电线在一个新系统的初期几周内将遭致失败的，这样的失败通常被归类为“初期死亡率”，参见bathtub curve, burn-in period. 
infinite loop	/n./ 无限循环 \n没有任何限制的，（就是说，机器持续的运转或者发出嗡嗡的声音一直处于紧张的忙乱状态）。这里有一个为一代代的高速运转的机器而准备的笑话：Cray-3 是如此的快使得它可以在2秒内就可以执行一次循环。 
inflate	/vt./ 使膨胀 \n解压缩或展开文件。在因特网黑客中比较少见，最初在MS-DOS/Windows 中使用。 
insanely great	/adj./ 及其美好的 \n[来自于Mac 社区史蒂芬工作；或者BSD Unix 的比尔]一些事务是如此的美好，以至于只有那些有着强大的黑客特质的人才可能完成它们。 
interesting	/adj./ 有趣的 \n在黑客术语中，这个词语有着强大的“恼人的”，“艰难的”的含义。黑客喜欢挑战，并享受着“祝你生活愉快”这样一句古老的中国谚语带来的讽刺。 
interrupt	中断 \n1.[技术术语]在计算机中，一个事件中断了正常的处理进程，并通过中断处理程序常规将暂时的转移控制流。 \n2．一个对黑客留心的请求,经常明确的说出“中断，最近有见到乔吗？” \n3.在MS-DOS 下，几乎与系统调用同义，因为OS 和BOIS 通常性工作都是被内部指令来调用的，因此程序员们经常不得不绕开OS 来得到可能的合理性能。 
interrupt list, the	/n./ [MS-DOS]一些众所周知的软件中断调用命令的列表（有证明的或非证明的），对于IBM 的个人通讯业务及兼容性，维护和使之有效的，并由拉尔夫.布朗免费的重新分配。最近的1992年，它已经增长到长度为大约2 兆字节。 
interrupts locked out	/adj./ 中断死锁 \n当你在餐厅试图引起服务员的注意，而被人忽略，一个黑客就会下这样的评论“她必定中断死锁”，同义词为“中断禁止”同样很常用。它是富于变换的，“设置中断屏蔽的”和“伪装的中断”也经常被听到，参见spl. 
IRC	/I-R-C/ /n./ 网上交谈 \n[网上多线交谈]全球同线网络使得人们可以实时的和其他人交谈，IRC 是一个有组织，有安排的网络服务器，可以接受每一个用户的客户程序，并进行连接。RC 团体和Usenet 和MUD团体在某种程度上有着重叠，这也包括了黑客们和发现了计算机网络奇迹的人们。一些新闻组术语已经将IRC 收录在其中，包括了一些常规，如表情符号。这里还有一些本土的更有活力的术语，在辞典中被标价为[IRC],参见talk mode. 
iron	/n./ 硬件，尤其是较老的，较大的主机像铁柜一样的外壳而内部较低密度的电子设备，（这条术语还用在现代巨型计算机上）。常见的有big iron，反义词silicon，又见dinosaur。 
IronAge	/n./ 铁器时代 \n在计算机的历史中，1961—1971 是商业主机科技的形成时期，当铁氧体磁心恐龙世纪统治着地球。随着1971 年第一代商业微处理器（Intel 4004）的结束和第一个微型计算机（PDP-1）的交付出现，铁器时代开始了，而且这个铁器时代足够长，又见Stone Age;对比elder days。 
iron box	/n./ 铁盒子 \n[Unix/Internet]一个特殊的环境为黑客进入远程连接的创造了足够长的追寻轨迹的陷阱。包含一些修改的改变环境变量的命令来限制黑客不明显的的举动，并以可以同时打开多个文件为诱饵来使得黑客对此感兴趣来登入系统，又见后门，firewall machine, Venus flytrap,而克利福德.斯托尔的报告中" The Cuckoo's Egg"就讲述了他是怎样制造和使用铁盒子的。对比padded cell. 
ironmonger	/n./ 金属器具商 \n[IBM]硬件专家（贬义），对比sandbender, polygon pusher。 
ISP	/I-S-P/ 因特网服务提供商 \nInternet Service Provider 最通常的缩写，一个仅仅在1993 年之前存在的公司，IPS 以销售因特网接口而畅销，当一个较大的全国性的商业BBS 的网络接口是以ISP 为技术的，这个术语被用来保留作为当地或局域的服务供应商，这样他们可以较便宜的转售网络接口而不用发布他们的信息或是广告。对比NSP。 
IWBNI	要是。。。该多好。。 \n`It Would Be Nice If'的缩写，对比WIBNI。 
IYFEG	[Usenet] `Insert Your Favorite Ethnic Group'的缩写，用于开玩笑的文章中，以避免侮辱任何种族、民族、宗教、性别。 
J. Random	/J rand'm/ /n./ [由J. Random Hacker 概括得来]任意的，普通的，任意一个，一个较老的`J. Random'通常作为一个名词的前缀来使得这个名字出局。它粗糙的刻画了它的一些特性或是任意一个特性，“你乐意让任一个失败者来娶你的女儿吗？”。最常用的是`J. Random Hacker', `J. Random Loser', 和`J. Random Nerd'，但也可能简单地被用来作为一个随机的类型。 
J. Random Hacker	/J rand'm hak'r/ /n./ [MIT] 像一个未知的士兵的神秘图形，原型是一个黑客，参见random, Suzie COBOL. 这可能开源于`J. Fred Muggs',的灵感，一个娱乐圈的黑猩猩，他的名字早在TMRC, 时代就家喻户晓了，可能正是受了`J. Presper Eckert' 的影响。 
jack in	/v./ 登录到一台机器或是连接一个网络或是BBS。特别是，进入一个虚拟的模拟真实的环境比如MUD 或是IRC.这个术语来自于旧金山的计算机朋克，它在那里被用来堵塞电极进入插座来直接短路接口到虚拟的真实环境。它首先被用于MUD 和IRC 的狂热者和在BBS 上的年轻黑客们。 
jaggies	/jag'eez/ /n./ 步进效应是可被观察到的当一个边缘被像素设置所渲染后所呈现的状态。 
JEDR	/n./ 和IYFEG. 同义，曾经，在Usenet,人们更趋向于使用`JEDR'来取代IYFEG 或`«ethnic»'; 这基于公众试图禁止再一次的使得一个名字为JEDR 的失败者被一个通报的种族玩笑而被惹怒的事情再次发生。这个故事结束后，此术语就被用来出现同样状况的场合中，JEDR 在网络上有着它的持久效应。由于文化教养的敏感度不同，以至于太多的尝试使得很快的，通用的被拒绝了。 
JFCL	/jif'kl/, /jaf'kl/, /j*-fi'kl/ vt., obs. 取消或是废除某事，"Why don't you jfcl that out?"这是最快的闲置的在较老模式的PDP-10机器碰巧遇到JFCL 情况的指令。它表示着如果标志被设置则跳跃，否则清除掉。这样做是有一些用处的，但是它是如此之快，以至于如果标记没有特指的话，就不会有任何操作。Geoff Goodfellow,，Steele-1983的联合作者之一，废除了他的宝马许可证许多年。用法：很少被用，除非PDP-10 老一代的黑客们。 
job security	/n./ 当一段代码以含糊的格式写出来时，而没有更好的理由来被发现。它经常被提到在程序员们试图提高他们的工作的安全性。这里有个完整的变坏的笑话，如果两个黑客一起检查一段代码，其中一个在一部分指出“工作安全性”，另一个可能仅仅是点点头。 
jock	/n./ \n1.以大量的并且是无理的强制性程序著称的程序员。 \n2.通常被另一个名词所修改，描述一个在计算机的某些特殊领域的专家。`compiler jock' 和`systems jock' 的混合体似乎是建立的最好的例子。 
joe code	/joh' kohd`/ /n./ \n1.编码过度紧凑的以至于不可维护，Perl m 可能就是一个方便的程序，可是当你看它的源代码时就会发现它完全是joe 代码。 \n2.了草的书写，可能会有很多的BUG，通信记者们希望保持匿名的在Berkeley 实验室指出一些独特的JAVA 定向编辑器，。却观察到了偏离定向的用途，这个原始的绰号`Joe code' 就是在这样的环境下产生的，直到1994年，这条术语已经被概括为`«name» code',，用来被他的作者来标识一些不同的属性，“这段代码没有被检查出返回了一个空的指针给内存，怪不得，它是Ed code!”最常被用在程序员离开车间时，这样就有一个项目的任何问题的很好的替罪者。 
jolix	/joh'liks/ /n.,adj./ 386BSD, BSD 的免费网络端口，由Bill Jolitz 和他的朋友用来释放Intel i386的体系结构。与BSDI 的接口不同，它是基于同一种磁带，曾经被称作BSD/386，现在为BSD/OS。又见BSD. 
JR[LN]	/J-R-L/, /J-R-N/ /n./ JRL 和JRN 的复合名，有时在讨论TOPS-10 和WAITSi 使用的ID 用户的示例名字时使用，被理解为`J. Random Loser' 和`J. Random Nerd'名字的首字母缩写，例如，一个人说“请键入log one comma jay are en 以登录”，就是"log 1,JRN"，听众就会明白他们应该使用他们自己的计算机ID 来替代‘JRN’。 
JRST	/jerst/ /v. obs./ [基于PDP-10的跳跃式指令]突然的改变主题，没有任何意识的返回到先前的主题。很少被使用除了使用PDP-10的顽固派和愚蠢者。参见AOS. 
juggling eggs	/vi./当你试图修改程序并构思好很多细节在脑海中，“现在别来打扰我，我正在用鸡蛋玩杂耍”意思是一个中断很有可能将导致程序员被扰乱思路。在小说“上帝眼中的微尘”，一个外国人在描述一个极其困难的任务时，就会说“我们在变化的地心引力下，用无价的鸡蛋在玩杂耍”。参见hack mode。 
jump off into never-never land	/v./ 与branch to Fishkill, 同义，与非IBM 相关的计算机的技术文化中更普遍的术语是`jump' 而不是`branch'.，对比hyperspace. 
jupiter	/vt./ [IRC] 将IRC 机器人或用户杀死，并用他们的昵称来取代他们的位置，这样使得他们不可再次连接。当一个特殊的IRC 用户做这些的时候，机器人掌管着一个人的昵称被声明后，而不被另一个人来采用。 
K	/K/ /n./ 一千字节，即用作口语中也用在书面语言中做后缀。（如同meg 和gig 作为兆字节和千兆字节），参见quantifiers 
K&R	[Kernighan and Ritchie] /n./ 由Brian Kernighan 和Dennis Ritchie 所著的C 程序设计语言，尤其，最经典，最有影响力的是第一版（普伦蒂斯·霍尔出版社，1978，ISBN 0-113-110163-3）同步的White Book, Old Testament.参见New Testament。 
k-	/pref./ 极其的，非常的。不仅用于通常的黑客，更常用于解密高手，和一些其他复合领域的人才，例如`k-kool' /K'kool'/, `k-rad' /K'rad'/, 和`k-awesome' /K'aw`sm/.，又可以用来增强负面影响的，像这样的`k-evil', `k-lame', `k-screwed', 和`k-annoying'.过多的在教正式的场合或者技术文本中使用这种前缀，会被认为是比较“烂”的状态。 
kahuna	/k*-hoo'n*/ /n./ [IBM:来自于夏威夷中巫师的名称]同义词见wizard, guru. 
kamikaze packet	/n./ 正式的行话是Christmas tree packet. RFC-1025,有TCP 和IP 支持，是否正确的处理Kamikaze包，也就是非常正确的立即处理了含有最大特征的包。 
kangaroo code	/n./ 袋鼠密码同义词套管程序。 
ken	/ken/ /n./ \n1.肯.汤普逊，UNIX 的发明者，早期曾经手工的发送一些带有“Love, ken”字条的磁带，一些老的计时器仍然用他的姓氏来作为第三人称的引用，特别是新闻组中，只有姓氏而没有名字的`Ken'被广泛的理解和引用。同Dennis 就是Dennis Ritchie 只有姓氏而没有名字。 \n2.欺骗者，这起始于软件的支持组，正是因为在当时用户组中最大的两个欺骗者都叫Ken。 
KIBO	/ki:'boh/ \n1.[缩写]Knowledge In, Bullshit Out. 无论何时有效的正当的数据它的重要性通过一个忽略的其本身的组织或个人而发现，比如说广告活动有利于展示该产品的真实规格。对比GIGO;又见SNAFU principle. \n2.James Parry kibo@world.std.com 网络使用者的坏名声正是被各种各样的网络的超现实主义和一些不可识别的机器辅助的连接带有他的假名的线程的技巧所左右。 
kiboze	/v./ [Usenet]在新闻组中的消息中查找字符串，特别是带有追寻位置的目的的。这样的活动被KIBO 所欢迎。 
kibozo	/ki:-boh'zoh/ /n./ [Usenet]查找字符串，却不是KIBO 的人。 
kick	/v./ [IRC]使某人远离IRC 频道，而这唯一的特权是赋予给CHOP 的。这种极端的办法经常会导致权利泛滥，但有时也会出于CHOP 的观念头。 
kill file	/n./ 拒读名单 \n[Usenet]每一个文件的使用者通过使用新闻组来阅读程序，来丢弃一些与自己并不是感兴趣所匹配的主题，作者，或其他标题行的概要文件，这样的拒读名单就意味着增加了被将来新闻读者所忽略的安排，这也可能决定了忽略其他媒体的人和主题。 
killer app	杀手级应用软件 \n杀手级应用程序实际上使得原本一团糟的市场在科技时代反而有一些希望，在1980年代中期被称为Lotus 1-2-3的电子表格的首次使用使得IBM 的PC 机的早期市场更趋于产品的需求。这个术语的应用可以追溯到VisiCalc 上，它曾经在成功的苹果2机上有着相似的角色，1994年后像将万维网被称为网络级杀手应用程序一样的事情已经司空见惯了。当新的个人计算机技术产生的时候一个标准的问题会被问及“什么是杀手级应用程序”。 
killer poke	/n./ 杀手级搜索 \n一个引导机器的硬盘损坏的秘诀是将无效的值插入到内存映射中来控制内存器。特别是各式各样知名的没有硬盘内存管理的应用在bitty boxes 上技巧，是可以使得监视器的电子设备超负荷或者被捣毁的。又见HCF. 
KIPS	/kips/ /n./ 千条指令/每秒 \n[缩写, 类似于MIPS 加上K] 千条指令每秒很少使用。 
KISS Principle	/kis' prin'si-pl/ /n./ KISS 原则 \n"Keep It Simple, Stupid".保持简单，浅显。是指在设计当中注重简约的原则，来抵制creeping featurism 并且控制发展的复杂性，可能与marketroid 是相关的在销售陈述中，“简单就是美”。 
kit	/n./ 工具箱 \n被打好包的源软件的发布，理论上是被压缩的，安装时按照一定的步骤，并被一些更高级的README file.的合理的链所证明。更多的术语发布被用来在这个特殊的工具上，更多的精确的条件被主机环境所要求。 
kluge around	/vt./ 避免因为不同的系统而造成BUG 或是其它困难的条件。对比workaround。 
kluge up	/vt./ 将一个执行任务的快速侵入绑定在一起，这相对于cruft together 是文雅的，并包含了hack up的内容，如“我正在通过绑定的侵入程序将缓冲区的内容放置到一个安全的地方。” 
Knights of the Lambda Calculus	/n./ λ演算的骑士 \n一个半神秘的机构组织，有着神奇的表处理机和有阴谋的黑客。名字来自于一个数学表达式被Alonzo 教堂发明，LISP 被紧密的连接在一起。这里没有登记列表，感应的标准也是含糊的，一个知名的LISPer 被给出一些按键，通常成员们都互相知道他们谁是谁。。。 
Knuth	/knooth'/ /n./ 克努思 \n神话般的，出处来自于对于数据结构和算法的问题的回答，当你不知道答案时，一个安全的回答是“我想你可以在Knuth 中找到答案”。 
lace card	/n. obs./ 整列穿孔卡片 \n一个穿孔卡片所有的洞都被穿孔的。当卡片的读取器趋向于在一处来通过时将被堵塞，而这样生成的卡片正是由于小而紧凑的高强度的结构而避免了内部机械的弯曲，卡片的打孔器可以用来堵塞这些由于压力而生成的东西，当一些不利的因素以通过卡片读取器来反馈给花边卡片时，你需要用card knife，首先用在不利因素上的，来清理掉这些堵塞。 
language lawyer	/n./ 一个资深的、高级软件工程师，非常熟悉各式各样的用户权限限制和特征，能够适用于一个或多个计算机语言。通过能力可以区分A language lawyer，来展现你的5个句型来分散在200多页的指南，这意味着你对问题“只是你心里想想这样吗？”的回答。 
larval stage	/n./ 幼虫状态 \n描述一些热衷于编码的偏执狂的阶段，他们往往是刚出道的黑客。共同的症结在于在给定的一周内超过36小时的hacking run ，忽略其他一些正常活动，包括最基本的饮食，睡觉，个人卫生，长期的高度的眼睛模糊的，这样的状况可以维持6个月甚至是2年，更普遍的中间值是18个月，这样反复的几次后，通常会折磨的使得他们不能再开始正常生活，这种痛苦的经历对于天才的程序员来说是必要的。又见wannabee. 。 
lase	/layz/ /vt./ 通过激光打印机来打印给定的文件，“好的，让我们打印这个吸管，看是否所有的图形学的宏指令调用可以做正确的事情”。 
laser chicken	/n./ 宫爆鸡丁，一道中国的传统菜肴，有鸡肉、花生、还有红色的胡椒粉和一些酱料，许多黑客又称它们为laser chicken，有两个原因：它能击溃你就像激光一样，还有就是它的酱汁颜色是红色的，使人回忆起激光束。在这个变化的主主题上，有报道说一些澳大利亚黑客重新指定了一个普通的菜肴“lemon chicken”作为Chernobyl Chicken。这个名字是由酱汁的颜色所派生的，因为在黑暗中它有着明亮的发光的颜色。 
Lasherism	/n./ [哈佛] 一个以非标准形式来解决标准问题（比如8皇后问题）的程序，它是通过程序员一定的脑力劳动所实现的，有别于crock 或kluge 。这样的构造在混有C 的内容的练习中相当受欢迎，这个词语来自于1980年哈佛大学的Lew Lasher 的偶然行径retrocomputing. ，后因此而臭名昭著。 
LDB	/l*'d*b/ /vt./ [来自于PDP-10的指令集]提取于"LDB me a slice of cake, please.这个术语因为和LISP'同名而活跃着，被认为是愚蠢的，又见DPB. 
leaf site	/n./ 仅仅起始于和阅读新闻组的新闻和邮件的机器，而不是中继任何第三方交易。经常以一种批评的语气所发出，当叶节点相对于主干、其他中继器的比率太大时，网络就趋于发展为瓶颈。 
leak	/n./ 漏洞 \n当一些资源没有被适当的释放在操作结束后，有着限定项的，一种资源管理网络臭虫就会发生，这些资源就会消失。这样新的分配请求将被搁置。memory leak 和fd leak 有他们自己的登记入口；而window handle leak 有时会在windows 系统中提及。 
leaky heap	/n./ [Cambridge] An arena with a memory leak.参见Arena和leak。 
leapfrog attack	/n./ 用户标识和密码信息被另一台主机所获取。而远程登录通过一个或多个主机是为了混乱跟踪路由到目的的路径。 
leech	/n./ 在BBS 系统中，crackers 和warez d00dz, 经常学习一些知识，而不发明一些新的软件、或技术。BBS 文化特别指明了leech 就是经常下载文件，而很少甚至不上传文件以回报的人，他们对于消息部分是没有什么贡献的。黑客文化将这个定义扩展到一个人经常的发布一些请求援助的信息或是通告一些信息资源，但却没有什么贡献。 
legal	/adj./ 和其它相关规则一致的被使用，和其他一些被软件约束的集合，“年长的=+交替轮换的+=在C 标准中不再合法的语句”。语句分析器在处理合法的输入时就会换行。黑客们经常将他们的工作作为一种有着特定环境的游戏来模拟，通过“自然法规”所允许的技巧，来获得他们的既定目标。他们对合法的使用更偏向于玩游戏的感觉以及法庭和律师的通用性。 
legalese	/n./ 在一句描述产品描述或是接口标准的，愚钝的、咬文嚼字的、冗长的语句。这样文字似乎是被有计划的来迷惑大家以请求一个语言专家来从语法上来分析它。但黑客们并不害怕语言中的高信息密度和复杂度，他们享受着对法律术语深厚而持久的厌恶。他们总是将此联系到骗局，诉讼，和他们通常吃亏的环境。 
LER	/L-E-R/ [TMRC, 来自于发光的二极管']一个发光的电阻（就是一个在燃尽过程中的电阻）打破了欧姆定律。又见SED. 
LERP	/lerp/ /vi.,n./ 线性插值法的首字母缩写，常用作这个操作的名词或动词。Bresenham'的算法就是在一条直线的两端逐步增量的线性插值法。 
let the smoke out	/v./ 烧坏硬件的（参见fried），参见magic smoke 一个关于神话的讨论。 
letterbomb	1.一些含有活动的数据的电子邮箱有意的对一些接受信件的机器或是终端做一些违法的事情。举个例子，可能会发送一些信件炸弹来锁定被看作是特殊类别的终端，这样就会彻底的使得用户循环为放弃这些拥挤的文件提供动力。在UNIX 系统下，一个信件炸弹将会使着得到部分的通过一个内核命令解译执行得到的邮箱的内容，这样的内容将会以从愚蠢到悲伤来被安排。又见Trojan horse; 对比nastygram。 \n2.和mailbomb.类似。 
lexer	/lek'sr/ /n./ 通常黑客对“字典分析机”的速记，一种对语句的语法分析器的输入记号法阶段。 
lexiphage	/lek'si-fayj`/ /n./ 在IT 行业臭名昭著的chomper ，参见bagbiter. 程序的提取在一个被选择的受害者的位元映射终端，用词语"THE BAG"来修饰信件，伴随着一些被咬过的痕迹。 
Life is hard	/prov./ [(施乐公司)帕洛阿尔托研究中心]此术语有两种可能的解释:(1)当你的建议有着任何一些功绩时，我将会表现的好像没有听过一样。(2)当你的建议有着明显的功效时，周围的环境将设法防止它被认真的考虑。这个术语的魅力就在于微妙的说谎但又重要的模棱两可。 
light pipe	/n./ 纤维视觉电缆。 
lightweight	/adj./ 与heavyweight; 相反的，它的使用常以混合的形式，比如“轻量级加工”。 
like kicking dead whales down the beach	/adj./ 形容一个慢速的/困难的/令人厌恶的过程，它首次受欢迎是因为一个IBM 主机操作系统在完成工作时遇到困难时的引用。“当然，你可以用COBOL 写一个C 编译器，就像在海滩上踢一个死了的鲸鱼。”又见fear and loathing. 
like nailing jelly to a tree	/adj./ 用来描述一个任务原本被认为不可能的，特别是当一些困难发生在不太好的规格说明上或是内在的棘手的问题域中，却尝试着用一些节点和弧的极好的安排来展示图表说明。这是因为没有人能够确定“极好”意味着是用算法来实现的。电脑黑客用这个术语来调用一些主流的起源于20世纪的总统Roosevelt 的术语。有这样一个传说，厌倦了与哥伦比亚不得要领的关于挖掘通过巴拿马的运河后的谈话，他评论到“与海盗这样的人们谈判就像试着在墙上钉葡萄干一样”后来罗斯福政府被反哥伦比亚的人们所鼓励并建立了名为巴拿马的省份。 
line 666	[from Christian eschatological myth] /n./ 程序因为一些不明的原因而失败，这意味着无论谁出局想要得到的都是很值得的，“当我一步一步查询它时，它是能够正常工作的，但是在line 666 上，当我运行它时，它却不能正常了”。“当这种问题大批量的产生时，多备忘录分布设备却在终端行信息中死去，可能会有些人嘲笑编码的缓冲区的大小”。 
line eater, the	/n. obs./ \n[Usenet] 1.在一些现在已经过时的网络新闻软件中有一个漏洞可以“吃掉”一个文件的缓冲区的大小，这个臭虫可以被以空格或是TAB 键开始的文件所触发，这个漏洞很快就变成了神话人物的化身，被叫做“终端信息吞噬者”经常会记录一些伪终端信息食物。相反的，这些食物并不因为space 或是tab 键来开始而被吃掉的，因为这样的漏洞是无效的，但是如果这里有一个space 或是tab 键在它们之前，那么这些终端信息吞噬者将会吞噬这些食物，而这个文件的开始部分将会被假定受保护的，这种为了终端信息吞噬者而牺牲的行为继续了一段时间，直到这个漏洞被钉在了墙上。后来还经常被幽默地提及。这个漏洞本身有时也会被偶尔的被报道在一些邮箱和网络的网关中所潜伏。 \n2.参见NSA line eater。 
line noise	/n./\n 1.[技术词汇].为通信环节的电子噪音而预订的一些伪造的人物，特别是RS-232的一连串的连接，终端信息的噪音可能会因为一些差劲的连接而被感应，或被其它的电路或是电子风暴干扰或是串话，或是鸟类的粪便排便在电话线上。\n 2.任何一块文件或是别处的数据看上去像是感应的终端信息噪音3。这个文件在理论上是可读的文本或是程序源代码，但使用的语句是那样的奇异以至于看上去像是感应的终端信息噪音1，2.是的，就是这样难看的语句。典型的例子是TECO; 经常被声称为与终端信息噪音难以区分的"TECO 的输入句法。其他的WYSIWYG 的编辑者，比如说，多路信息与计算机系统和UNIX 被一个真正的黑客所掌握，这样他有资格做一些故意的搅乱言的行为，比如INTERCAL。 
line starve	终端信息急需 \n[麻省理工]1.供给纸张并以错误的方式通过一个终端信息来穿过打印机（大多数打印机是不能这样做的）。在显示终端下，移动光标到屏幕的前一个终端信息行前。为了打印X 的平方，你只需输出X，终端信息急需2，由终端行信息给出。\n2.导致终端显示此行动的字符。在微软计算机和X3.64终端标准之前，ASCII 0011010有被叫做SUB 或control-Z,是一种最常见的终端信息急需字符。不像“终端信息供给”一样，终端信息急需不是一个标准的术语性的ASCII 。甚至在黑客中这都被认为是愚蠢的。\n3.[被提议的]一系列的像C 一样的禁止新的一行或是其它可能发行的字符。 
linearithmic	/adj./ 算法的，有着在数学上的O(N log N)级别的运行时间。被创造为一种在C 上线性的，指数级别的混合词。 
link farm	/n./ [Unix]一个包含许多和主目录树的文件的连接的目录树，当一个人想维护同一个资源树的几个相同备份时，这种连接群可以为此节省空间。比如说，依赖于不同的结构体系的目标文件的一些差异“让我们冻结源文件，并重建FROBOZZ-3 和FROBOZZ-4 连接群”连接群也可以用来解决在较老的C 语言程序员中I 参数的数目限制问题。但是，他们完全失控的，在变成与spaghetti code.等价的文件系统后。 
link-dead	/adj./ [多用户计算机环境]有一种说法多用户计算机环境的角色因为逐渐下降的因特网连接而被取代，冻结。 
lint	1.紧密的检查和程序相接近的字体风格，使用语言，可移植问题，特别是在C 中，尤其经由一些特别的自动分析工具，如果UNIX 使用工具在使用。这个术语被用来限制线头的使用，但却成为了一些非UNIX 系统商店的desk check 的速记，甚至是一些不是C 的语言中也一样。 \n2.文档过度冗长的，被用作“这个草稿有太多的线头”。 
Linux	/lee'nuhks/ or /li'nuks/, not /li:'nuhks/ /n./ 被Linus Torvalds 和他的朋友在大约1990年所创造的免费的UNIX 软件通用型，历史上，这里有很多的出众的黑客项目，是对Unix 386, 486 和奔腾微指令的一个全部的克隆，并分布这个免费的网络资源遍及整个网络。这就是自由软件基金会GNU 的目的所在，但自由软件基金会并没有创造什么和UNIX 编辑器相关的核心内容。另外，相似的错误还有FreeBSD和NetBSD，它们更没有什么成功可言。Linux 的成功秘密似乎在于更早的将其发展过程公开化，并吸收了很多其他黑客，创造了滚雪球的效应。 
lion food	/n./ [IBM] 中间管理或是员工总部，来自于一个较老的关于两头狮子的笑话，为了能够逃出动物园，它们采取分开的方式来增加它们成功的机会，但是同意在2个月后见面，当它们再见面的时候，其中一个变小了而另一个变沉了，其中变瘦的那个问道“你是怎样作到的？我一次只吃一个人，结果有一个小部队来逮捕我，枪炮/网真的是太可怕了。后来，我就只吃老鼠/苍蝇，甚至是草，才变的这么瘦。”另一只较肥的回答道：“我隐藏在一个离IBM 办公室很近的地方，一次吃一个经理，而没有被任何人发现。” 
Lions Book	/n./ John Lions 说过“源代码以及对Unix level 6的评价”，这本书包含两部分，一个是Unix Version 6 内核的全部源码列表，另一个是对源算法的讨论的评论。在1976——77年新南威尔士大学建立之初，这个术语在学校内部很是流行。可是在很多年之后，这仅仅是一个对于任何一个在贝尔实验室之外的人的有效的详细的关于内核的文档。正是因为西方电子被希望是在内核上一直保持一个秘密的状态，Lions Book 被猜想为分布式的合并了一些协议。尽管这样，相对于很多黑客来说，它还是很快的被地下出版商传播开来。 
list-bomb	/v./ 由于邮箱炸弹的缘故，有些人通过锻造一些信息来造成受害者成为其它一些很多邮箱列表的订购用户，而这是一个弄巧成拙的策略，它仅仅是强制邮箱列表服务器对每个订购用户的回执信息有一个请求确认。 
literature, the	/n./ 计算机科学学报和其他一些出版物，含糊的回答一些问题,发言者认为很多东西都是琐碎的，不重要的。这样在回答一个恼人的问题时，就会说“它在文献中”，相反的Knuth,其中没有什么琐碎的概念。 
lithium lick	/n./ Steve Jobs 一个被他的尊敬的上司关注太多的员工，当他们开始显示一些工作上的绩效，并重复着在普通对话中的一些最常见的语句时，会被说有着`lithium lick。例如，“它仅仅是在运行着、工作着，但不一定是正确的”。 
little-endian	/adj./ 在一种较低意义的低地址的，只有给定的16或是32字节的环境中，描述一个计算机体系结构。PDP-11 和VAX 计算机家族和因特尔微软处理器以及很多通信和网络化硬件都是小尾数的。参见big-endian, middle-endian, NUXI problem.这个术语有时也用来描述一些非字节的单位的次序，但最多的还是字节中的位元。 
live	/li:v/ /adj.,adv./ 与测验相反的，它会提及一些真实的含有数据或是带有运行着的程序的真实世界。举个例子，“我认为这个记录被删除已经完成”的回应是“它还活着吗？”或者是“你有没有试过让他们在活跃着的数据上演示”这样的用法包含着一些更多的易毁的数据但又要保证数据不被毁坏，一些坏的事情将会发生的内容。所以适当的回应应该是“好吧，请确保它能够完美的运转，在我们将它投掷到活跃的数据中前，”这暗含着被删除的数据有着相当重要的意义。所以一个乱七八糟的记录删除者的存在可能会导致很严重的后果。 
live data	/n./ \n1.当数据被一些不明显的操作比如监视所触发，就会被写入并被解释和接管程序流。这样的黑客用法将会打破安全性，举个例子，一个巧妙的终端会有一些对于程序键允许下载的字符串的命令。当列出这个终端，安全性被病毒破坏，触发了下一次一个不幸的用户点击这个键时，这个用法就会写入活跃的数据。另一个例子是，一些知名的漏洞允许一定的文本发送固定的命令给机器以简单的监视。 \n2.在C 代码中数据包含着指向勾起的函数的指针 \n3.像trampoline,的一个物体，在程序被运行时所构造，并作为代码而运行。 
Live FreeOr Die!	/imp./ \n1. 美国新罕布什尔州的座右铭，出现在他们洲的汽车至招牌上。\n2.在浪漫的日子里，一些UNIX 的狂热者将它们看作是小的，反对工业风暴的地下围攻者，的一个和UNIX 相关的口号。这里的“free”是指fascist 设计哲学和过于复杂的商业运作系统中的常见的管理信息系统的特征。Armando Stettner，一个早期UNIX 的发明者，曾经早强大的unix 下分发假的执照牌，而产生了这个座右铭，早New Hampshire，全部用的绿色或是白色。这些现今已经是一些宝贵的珍藏品。最近（1994年）它们的较低级的仿制品用带有红色的标记来发行。 
livelock	/li:v'lok/ /n./ 一个任务的临界条件的环境是不可能完成的是因为它的客户端会持久的产生一些任务给它，在它们处理完此任务却还没有来得及清空任务时。不同于deadlock i 的是处理过程并没有阻塞或是为什么事情而停滞。但是几乎无限量的工作等待去做并且是无法停止的。 
liveware	/li:v'weir/ /n./ \n1.同义词wetware.不是很常用。 \n2.[剑桥]寄生虫“服务员，我的沙拉里有虫子”。 
lobotomy	/n./ \n1.一个黑客所受到的正式的管理训练就会说他又所经历的。在IBM 或是其他地方，这个术语被黑客或是更低一级的管理者所用。后者使用它无疑是一个笑话。 \n2.将处理器从微型计算机中除去的目的是取代或者更新它。而真正的clones 系统将会以迟钝的形式，除了大脑其他任何部件，而被销售掉。 
locals, the	/pl.n./ 当地的网络用户。用来标记它与真实的距离是多么的不相关的用途。“在我们释放它到本地时，我有一些妙计用于邮箱工具中”。 
locked and loaded	/adj./ 可移动的磁盘卷被适当的准备着使用。就是说驱动器被锁定并且磁头数被装载。相反的，正式因为它们的磁头数被装载，无论电源是否开着，这个描述都不会用在Winchesteri 驱动中。 
locked up	/adj./同义词如hung, wedged. 
logic bomb	/n./当一些特定的条件相符合时，将代码暗中插入到应用软件或是系统中使得执行一些有破坏性的或是折中的安全行为。 
loop through	/vt./ 处理列表中的每一个元素，“挺住，我已经在我的纸式邮件中得到了循环。”来自于迭代循环的计算机语言，对比`cdr down'，在C 语言和UNIX 程序中并不常用。IT 界的黑客们过去常常说`IRP over'，之后在PDP-10汇编程序中则用一些含糊的假的反义词。 
loose bytes	/n./ 黑客联邦在记录或是结构体中在成员之间插入添加有字节的许多编译器来复制被机器结构所强加的调整要求。 
lord high fixer	/n./ 在组织机构中对系统的很多方面都了如指掌的人。 
lose	[MIT] /vi./ \n1.失败一个程序在遇到意外的条件或是预料到的问题是不能够正常的工作而溃败。 \n2.特别对于体弱的，缺乏美感的。 \n3.令人厌恶的，异乎寻常的愚蠢的人。 \n4.涉及到损失特别是语句"That's alose!" and "What a lose!"。 
lose lose	/interj./ 对于不受欢迎的环境的回应或是评论“我意外的删除了我所有的文件”。 
loser	/n./ 一个意外的不太好的环境，程序，程序员，或人，一个人习惯性的失败。有些人并不知道这语气的强弱之分“真正的失败者”‘ 总的说的失败者’“ 彻底的失败者”。 
losing	/adj./ 造成损耗的任何人或事。 
loss	/n./ 损失的东西。损失的环境，强调的形式包括“魔比损失”“ 总的损失”。通常的感叹词“这是怎样的损失啊！”“ 好大的损失啊” 这样的标记`moby loss'相对于**`moby loser'已经足够了。用于抽象名词，魔比就像是一个简单的放大镜。却可以施加到人的身上，它意味着一些积极的，向上的含义内容。 
lossage	/los'*j/ /n./ 漏洞或是故障所产生的结果。是一个集合名词"What a loss!" 和"What lossage!"几乎是同义的。前者较轻的特指了说话者现在所处的环境，后者指出了说话者作为当前的受害者损失还在继续中。举个例子，暂时的硬件失败就是一个损失loss,而在重要的工具中的漏洞就是一个严重的损失lossage。 
lost in the noise	/adj./ 同义词. lost in the underflow.这个术语来自于信号术语，这里的信号有着非常晓得振幅以至于不能够在低密度的系统噪音中被分离。虽然在黑客中很流行，但它并不仅仅限制与黑客界中，在物理，工程，天文，统计学中都被广泛的使用。 
lost in the underflow	/adj./ 太小而不值的被特殊考虑的。小的在精确度和测量的极限之外，在`floating underflow'曾被提出，条件发生是在浮点算法处理器试着处理一些较小的在大小极限之外的数量。它是`undertow'的双关语。“来自于体育馆的光线的光子压力改变了棒球的投掷路径”但是在underflow 中却失去了效果。对比于epsilon, epsilon squared;又见overflow bit. 
lots of MIPS but no I/O	/adj./ 过去常常用来描述一个技术上杰出的但看上去却不能正常的与其他人交流的人才。技术上说是描述一个机器有着很多处理能力，却在输入输出上存在着一些瓶颈。 
low-bandwidth	/adj./ [来自于通信理论]曾经指示为一个对话，虽然不是无内容的，而且不是可怕的情报信息，“这是一个低窄带的对话，你所被期望做的只有做一名听众。” 
LPT	/L-P-T/ or /lip'it/ or /lip-it'/ /n./ 打印终端 \n终端打印机，当然，极少的在UNIX 下，更常用的是在IT 界，MS-DOS, CP/M 和其他一些被美国数字公司所强烈影响的操作系统中成长起来的黑客们中使用。 
Lubarsky's Lawof Cybernetic Entomology	/prov./ 这里总有一个漏洞。 
lunatic fringe	/n./ [IBM]被信赖的顾客，并被发售软件的第一版的接受权。 
lurker	/n./ 在电子论坛中称沉默的大多数的一种，偶尔公布一些信息或是根本不公布信息但是却经常的有规律的通过阅读组内的公告信息来获取一些内容。这个术语有轻蔑的意思，但实际上常用来自嘲。“哦，我就是一个潜水者。”经常的“潜水者”被假设为组内发射公告的听众，当一个潜水者首次说话时，我们称他为`delurking'.脱离潜水的。 
luser	/n./ 同loser失败者，特指一个系统的用户。这个词1975年在MIT被创造出来，源于黑客的一种玩笑。 
M	/pref./ (on units) suff. (on numbers) [国际单位制]参见数量词 
macdink	/mak'dink/ /vt./ [来自于苹果机，被鼓励这样的行为]对于一个程序或是文件制造许多增量的和不必要的化妆用的变化。在没有它们的情况下会变成经常性的主题。“当我前一天的下午11点离开时，他仍然在讲述他为报告所做的幻灯片。”参见fritterware, window shopping。 
machinable	/adj./ 可用计算机处理的。有供计算机阅读的复制件软拷贝的性质 
machoflops	/mach'oh-flops/ /n./ [百万次浮动逻辑运算的双关语]涉及人为的膨胀的性能图形经常被计算机厂家所引用。而真正的应用软件就是幸运的一半的引用速度。参见Your mileage may vary, benchmark. 
Macintoy	/mak'in-toy/ /n./ 苹果机，被考虑为小玩意，但不会比Macintrash.更轻蔑。 
Macintrash	/mak'in-trash`/ /n./ 苹果机，被描述为不接受或是不欣赏远离由接口的真实的计算机的黑客，maggotbox 这个术语在美国北卡罗来纳州的三角形的研究领域中使用被有规律的报道。对比Macintoy.参见beige toaster, WIMP environment, point-and-drool interface, drool-proof paper, user-friendly。 
macro-	/pref./ 大的，与微小的相对，在主流的或其他科技文化中，和前缀mega-百万一起的对抗，但黑客更趋向于限制后者在数量上。 
macrology	/mak-rol'*-jee/ /n./ 烦冗 \n1.设置一些复杂的零碎的宏命令，例如，由LISP, TECO, 或是其它相似的汇编程序所写的较大的系统的一部分。 \n2.涉及在理解1的烦冗之上的艺术与科技，有时系统的烦冗并不像考古学，生态学，或是神学，所以这就是听上去很象的构造。又见boxology。 
macrotape	/mak'roh-tayp/ /n./ 磁带的工业标准卷，被认为是与microtape.相对的，又见round tape。 
maggotbox	/mag'*t-boks/ /n./ 见Macintrash. 这个更加贬义的。 
magic	/adj./ \n1.仍未解释的，或是太复杂的难以解释，与automagically 对比的，克拉克第三定律，任何充分的高级的科学技术都是与魔力难以区分的。电传打字机的回应就是被大量的魔力的字节所控制。它常规的在三个指令下计算出8个字节的同位。 \n2.工作原理没有被真正的理解的一些东西的特性， \n3.[斯坦福大学]没有被宣传的特性，允许一些东西，其他则不可能或是这个种类的以前的一些特性但现在不被公开的，又见A Story About `Magic'。 
mail storm	/n./ 来自于暴风雨的广播，受灾或的影响，常会发生这样的事情：当一个机器和网络连接或是有活动的用户重新连接在掉线之后，经进来的邮件就好象洪水一样淹没到机器的膝盖。又见hairball。 
mailbomb	邮件炸弹 \n[Usenet]1.发送或是催促其他人发送大量的电子邮件给一个单独的系统或是人，特别是使之崩溃或是向接收者的系统兜售信息。有时这种反击的做法被认为是一种有着预感的严重的犯罪。邮件炸弹自身被广泛的认为是一种严重的犯罪。它能够瓦解邮件交通，或是其他与受害者相关的无辜的用户的设备或是工具，在一些极端的例子中，它可以上至到网站中。 \n2.有着相似效应的自动程序。 \n3.邮件发送对比letterbomb, nastygram, BLOB (sense 2), list-bomb。 
main loop	/n./ 在输入或是事件驱动程序的高水平控制流结构，是一个可以在程序的输入上接受或是执行或是分派的结构，又见driver。 
management	/n./ \n1.社团力量的中坚分子区别于首要的通过他们的多产的有效的工作效率以及极少的管理上的失败，嘲笑的说道“管理者决定的。。。”。 \n2.神话的，对于世界较小的刺激的负责任的巨大的官僚主义。黑客们挖苦通告经常被标记为`The Mgt';起源于小说Illuminatus"。 
mandelbug	/man'del-buhg/ /n./ 臭虫在一些原因下是如此的复杂和含糊的行为举止使得他的混乱的，甚至是无定论的。这个术语意味着说话者认为它是一个Bohr bug, 而不是heisenbug. 又见schroedinbug。 
manged	/mahnjd/ /n./ 提及被损坏的，通常超出修理的，磁盘将会在电子暴风雨之后manged。 
mangle	/vt./ 与mung 或scribble,的使用是相似的，但是它的内容里包含了更多的暴力，其中一些函数编码是不可逆转的废物。 
mangler	/n./ 管理者，对比于management. 与system mangler 在内容上多少有些不同。 
manularity	/man`yoo-la'ri-tee/ /n./ 对于一些任务人工的实验室的概念性的测量，特别是自动化的一种，被假设为消除。与文本编辑器相比纸张上的合成英语有着更高的使用手册的尺度，特别是在修正阶段。黑客们更倾向于将这种手册尺度看作是原始方法的象征。实际上，一个真正的黑客将会面对一个要求自己手动的计算任务时，会不可避免的捉住这个机会来重新建立一个工具。 
marbles	/pl.n./ 最小程度的建立自己的方式更近一步的工具或是提取物的一些层次。在一个坏掉的系统崩溃后，你需要确定机器是否有足够的能力来自己重新显现，或是重新备份，或是我们自己重新组建。“这个编译器，没有足够的大理石来编译hello, world”。 
marginal	/adj./ \n1.及其小的，边缘增加效益在核心，可能会随着时间的激增而降低GC。在日常术语中，这更意味着轻而易举的清扫我们的书桌，如果你有更多的空间来放置垃圾来让你分门别类。 \n2.非常小的优点，价值， 被提议的新的特性却对我本人没有什么价值 \n3.相当小的获胜概率，供给的电源是相当小的，怪不得fried。 
Marginal Hacks	/n./ Margaret Jacks 大厅，斯坦福人工实验室在1980年代初搬进的一个建筑。 
martian	/n./ 在TCP/IP 网络上发送的包裹，其源地址为测试回送接口[127.0.0.1]. 这意味着它的回路是以不是很清晰的地理位置的源地址来标记的。域服务器收到了很多来自火星的包，不知道网关是否有错误数据包的过滤器？ 
massage	/vt./ 模糊的术语曾用来描述将数据集平滑的转化成其他不同的形式，特别是这个转化不能失去任何信息，与munch or crunch. 相比没有什么困难，他写了一个程序将X 位图文件转换为了GIF的格式。 
math-out	/n./ 被数学或是其他的被视为难以理解的概念所包裹的论文或是报告，这可以是个隐瞒了实际上是一个内容目录形式的树形格式的装置。又见numbers, social science number。 
Matrix	/n./ \n1.著名的BBS 软件或是站长被称作FidoNet.惠多网络。 \n2用来描述.被预料出现当前网络实验的电脑空间的术语（参见network, the）。 \n3。当代计算机网络的总称。 
maximumMaytagmode	/n./这是怎样的洗衣机啊，或是在一定程度上，习惯于沉重的硬盘摇晃的像个失重的家电公司，如果持续时间太久，就会导致磁盘变成行动碟。 
Mbogo, Dr. Fred	/*m-boh'goh, dok'tr fred/ /n./ [斯坦福]一个你不想要的普通人将成为问题，特别是无能力的，不适当的专业人员，一个奸诈的人“你认识好的眼科医生吗？”“ 当然，试试Mbogo 的眼睛护理和专业的干洗吧”，这个名字来自于伪造的和电视剧"Addams Family"中的内科巫婆医生Mbogo 博士的协同词。 
meatware	/n./ wetware.的同义词，很少常用。 
meeces	/mees'*z/ /n./ [学研究中心]偶尔的不是顽童的游客[也就是，老鼠，不再被活用的，起源于1960年的被禁止的卡通人物Mr. Jinx:的一句话“我讨厌这样的成群的老鼠”]。 
megapenny	/meg'*-pen`ee/ /n./ 用半幽默的方式作为一种单位来对比计算机的花费和性能图。 
MEGO	/me'goh/ or /mee'goh/ \n[新闻媒体用语，“这事太没劲了”]1.故意的掩饰或是捣乱，来迷惑听众，以期望他们因为没有理解正在进行的事情，而降低其支持率。术语MEGO 经常会指出工程师的资深管理或是包含一些高比例的TLAs。 \n2。对MEGO 策略的适当回应\n3.在非黑客中，并不提及使得眼睛模糊的行为，而是说眼睛自身模糊的，可能就是因为过度的使用而触发的一种征兆。 
meme plague	/n./ 成功传播的但是有害的文化基因，特别是寄生于受害者身上，并继续传播下去。占星术和BASIC，还有其他的宗教信仰经常被视为这样的例子。这种用法曾被历史所指出像纳粹主义的民主参与者或是各式各样的基督教徒往复循环的倍受折磨的跟风的指数级的增长着。 
memory farts	/n./ 当DOS 启动进入BIOSes 时，会被检查存储器，看上去就好像是气涨的。 
memory leak	/n./ 内存泄漏 \n程序员因为在动态分配逻辑空间时没有释放内存，而造成的错误，会因为内存最终被耗尽，而系统崩溃，有时也称为“内核泄漏”，这种问题在一些较老的，有着较小的，固定的地址空间的机器上更为严重，一些特殊的内存泄漏的探测工具常备编写来根除它们。随着虚拟内存的出现，较不幸的是更容易出现马虎所造成的内存的浪费。参见aliasing bug, fandango on core, smash the stack, precedence lossage, overrun screw, leaky heap, leak. 
memory smash	/n./ 内存冲突 \n编写了一个指针，但它并没有指向你想要的。这样会偶尔的减少一些你机器的比特，有一些精细的差别但相关的术语有memory leak o 或r fandango on corebecause 因为它不能指出内存分配的错误或返回条件。 
mess-dos	/mes-dos/ /n./ 错乱的磁盘操作系统 \n对微软操作系统的嘲笑术语，经常跟随一些固定程式的驱逐“说不！”大部分黑客们都厌恶着微软磁盘操作系统的单任务性质，在软件大小上的极限，以及它不好的原始界面，以及被绑定在IBM 上。在爱尔兰和英国，有时甚至被称为家用漂白消毒剂，在清洁完厕所后。 
mickey	/n./ 老鼠，米奇 \n老鼠运动的一个清晰的单位，曾经被建议“迪斯尼”会成为卡通图形性能特性化的一个基准点。 
mickey mouse program	/n./ 等同于北美的笨的，不重要的程序，并没有必要轻视主流俚语的内容“那就是米奇老鼠，不重要的东西”有时不重要的程序也会很有用。 
MicroDroid	/n./ [新闻组]微软的员工，特别是一个公布了各种操作系统支持新闻组，微小的公布继续着关于微软操作系统的任何信息，却像拜访摩门教传教士一样而告终。 
microfloppies	/n./ 微型软磁盘 \n3.5英寸的磁盘，相反地有5.25英寸的vanilla 或极小的磁盘，现在已经过时的是8英寸的类型。这个术语曾作为5。25英寸的标题，现在过时的，仅仅用作3英寸标准磁盘的替代品。 
MicroslothWindows	/mi:'kroh-sloth` win'dohz/ /n./ 微软窗口操作系统 \n微软窗口操作系统的黑客界中，一个IBM 的PC 机的窗口操作系统经常因为兼容性而被受限，相对于486来说过于恼人的慢速度。又被称为Windoze，这意味着你必须睡一会儿以等待它之后来做一些事情，后面这个术语在新闻组中更加常用。 
minifloppies	/n./ 小型软磁盘 \n5.25 英寸的磁盘。和3.5 英寸磁盘及微型软磁盘是相对的，8 英寸的现在被荒废了。曾经这个术语被舒加特合伙人做为他们的SA-400 小型软磁盘的商标。但没有人注意到这些。 
nagware	/nag'weir//n./唠叨软件 \n[Usenet] 共享软件的一个种类，在开始或结束时提醒你注册，键入一些键以继续，以至于你不能用成批的相同的模式来使用软件。 
nailed to the wall	/adj./ 钉在墙上的 \n[像战利品一样]是说一个错误终于在较长的，猛烈的攻击下被消除。 
naive user	/n./ 倾向于因为没有经验的无辜的使用者，当它用于一些有经验的人身上时，这就成为了一种明确的愚蠢的含意。
P-mail	: /n./物理邮件 , 与 email 相对 , 与 smail-mail 相近 , 但是更少见.
P.O.D.	: /P-O-D/ "Piece of Data" 的缩写 ( 与一段代码相对 ). 习惯用法很少 .( 参见 pod)
padded cell	: /n./一个可以限制 luser 的能力到主机系统的限定使用能力的程序 .( 例如 USG Unix 里的 rsh(1) utility) 在其中可以放置 luser ，这样他们不能破坏任何事务. 它不同于 iron box 的地方在于它是公开的，并不是为了保护安全性, 而是要保护他人(包括luser) 免受luser的伤害. 又称"padded cell environment".
page in	: /v./  [MIT] \n 1.在page out之后重新恢复对周围环境的感知。通常用于讽刺。\n2.与swap in同义。见swap in。
page out	: /vi./  [MIT]  \n 1. 由于先前有偏见的或心不在焉（做白日梦而走神）而对周围事物暂时没有觉察。"你能重复一遍吗？我刚刚走神了." ( 参见page in, 与glitch 和 thinko 相对比 ) \n 2. 同义词 ,"swap out", 参见 swap out. 
pain in the net	: /n./ 一个{flamer}. 
Pangloss parity	: /n./  [来自于 Dr.Pangloss, 伏尔泰的 "康迪特" 中的永恒乐观主义者]\n 在社团 DP 商店中，有这样一种常见的情况：严峻的但是要同等的共享lossage。正是因为 这样一个理论：只要在组织中的每个人拥有同样过时的电脑, 那么一切都好.
paper-net	: /n./\n在 Hack 中代指邮政服务, 类推到一个非常慢而且可靠性差的网络. 新闻组信息阻塞块有时会包含一个Paper-net, 表头在发送者通讯地址之前, 它的两个变体是Papernet和P-net. 既然标准的网络礼节的 指导方针认为这种做法是浪费 带宽并且不被接受的, 因为网虫大多数情况是不可能随便地使用通讯地址。对比voice-net,snail-mail,P-mail.
Param	: /p*-ram'/ /n./   \n "parameter"的缩写, 参见 parm, 与 arg 和 var 对比.
PARC	: /n./  见 {XEROX PARC}.
parent message	: /n./  所谓{followup} 所跟随的东东（父信息）.
parity errors	: /pl.n./   \n 注意力， (更严重情况下是) 意识的一点小失误, 通常是由于花费了整个晚上甚至是加上第二天的 HACK 行为所导致. 例句 ,"我需要回家休息到头睡觉，我开始制造很多相同的错误了"起源于随机存储器硬件中一个常见而且可以修正的短暂错误. 相同的错误可以损害大量存储器和串行通信链路, 这是非常严重的而且不是总能修改的.
Parkinson's Law of Data	: /prov./   \n " 数据扩展以至于填满整个存储空间 ", 购买更多存储器促进了更多存储集成技术. 近10 年来观察得出系统内存量每18个月加倍. 幸运的是定值美元的存储密度每12个月也是加倍的.(参见Moore's Law). 不幸的是，物理定律说明后者是不能无限继续的.
Parm	: /parm/ /n./   \n 参数的更加紧缩形式.这个术语来源于IBM,而且在IBM 外书写形式是少见的.同义词arg 被黑客们所喜爱,与arg,var相对比.
Parse	: [from linguistic terminology] /vt./   \n 1. 确定一个句子或说话的语法结构,例句,"那就是我见到你的那个." 我不能语句分析这个". \n 2. 更一般地,懂得或理解.例句,"就是这样简单，你只需kretch 蜡烛，然后检修zotz" ,"我没有能理解它的含义" . \n 3. 关于鱼类,需要自己去除骨头.例如,"我反对解剖鱼",意思是"我不想要整条鱼，仅仅是一部分就可以了". 一个解剖的鱼是没有骨头的,这样就有了一个争议,"unparsed"是多骨的，还是剔骨的意思.
Pascal	:: /n./\n 在1967-68 年由Niklaus Wirth 在CDC6600 上设计的作为基本程序教学工具的Algol 语言.这个语言设计的初衷从严格的通用编程角度出发是培养良好程序设计风格和习惯,后来发展成为一个多用途的工具,也成为一族语言的祖先,其中包括Modula-2 和Ada(参见bondage-and-discipline language).hack 角度的pascal 总结在1981 年Brian Kernighan 的论文"Why Pascal is Not My Favorite Programming Language",这篇论文被科技杂志所拒绝,却以影印版所传播,最后发表在Alan Feuer 和Narain Gehani 所主编的"Comparing and AssessingProgramming Languages"上.其中的部分讨论值得在这里重复一下,因为它的批评对经过十年改进的Pascal 依然很恰当而且对于bondage-and-discipline languages 是很好的告诫. \n 作为反对Pascal 的总结,Kernighan 写道:"9.没有退出. 最后的一点也是最重要的,这个语言是不充分的,有限制的,因为没有退出它的限制的方式.没有类型转换最为需要时类型检查;没有可以代替的有缺陷的运行时间环境,除非控制编译器来定义标准过程.这个语言是封闭的.\n使用Pascal 编程会陷入一个困境,因为这个语言是无能力的,它需要扩展.每个使用者需要按他们的方向来扩展Pascal 来实现他们的目的.分别编译的扩展,Fortran-like Commom,字符串数据类型,内部静态变量,初始化,八进制数据,位运算等等,都需要加入个人的使用当中,但却损害了他人. \n 我认为使用Pascal 为了它的初衷之外的地方是个错误.在它的形式下,Pascal 是个小语言,适合于教学但不适合实际编程." \n Pascal 已经被淘汰了(c 语言),但依然在MS-DOS 和Macintosh 世界中作为一个爱好语言保留了一定地流行.
pastie	: /pay'stee/ /n./   \n 一个背面粘帖标签,被用来附在键盘的键上来表示一些可以由这些键得到的非标准字符.在APL 语言环境中有可能使用Pasties,其中每个键都与一个特殊的字符有关.例如,在R 键上的pastie 可以提醒使用者它可以用来产生希腊字母的第17 个字母δ.对比tits on a keyboard.
patch	:  1. /n./  \n 1. 名词,一段代码的附加,通常作为对一个bug 的quick-and-dirty 补救.一个patch 可能生效或不生效,也不一定最终加入在整个程序中.不同于diff 或mod 的方面在于patch 由基本方法产生而不是整个程序.经典的例子是前面板开关的使用说明和用HLL 所写的二进制可执行程序的修改.参见one-line fix \n 2. 动词,在一段代码中插入一个补丁. \n 3. [在Unix 中]名词一个diff (注释2) \n 4. 应用于补丁程序的二进制代码修改集合.IBMC 操作系统经常会收到操作系统的十六进制补丁.如果要修改自己的OS,需要分解.这些补丁可能被另一些补丁所修改.这样就产生了令人费解的patch space. \n 5. [unix] 由Larry Wall 所写的补丁程序,可以自动应用一个patch(解释3)于一组源代码集合.\n关于二进制补丁内在危险的故事(事实上,你不能或不检查一个安装补丁)：一个tiger team渗入到了一个安全军方电脑,他们不能找到一个trap door 或者用其他方式渗入到IBM 操作系统的安全,所以他们做了一个可以访问IBM office 的站点,篡改了一些IBM 信息,创建了一个伪造补丁,这个补丁含有他们需要的后门.而且这个补丁在恰当的时间作为IBM 补丁被分发,并被安装.
patch space	: /n./    \n 没有使用的二进制区位,在插入机器说明时被修改.(典型的是,patch space 被修改从而含有新的代码,被取代的代码包含一个指向patch space 的访问.)HLL 的大量使用使得这个术语很少用.参考patch(注释4),zap(注释4),hook.
path	: /n./   \n 1. bang path 或者准确的说是路由网络地址的;两个机器之间节点间的连接. \n2. [Unix]文件名,完全由根目录(与当前目录相对,后者叫做相对路径)所决定,又叫做路径名.\n3. [Unix 和MS-DOS] 搜索路径,一个环境变量,确定了Shell 在其中寻找命令的目录.另外,相似的概念在Unix 中常见.(例如,当C 预处理器寻找#include files 时有一个寻找路径)
pathological	: /adj./   \n  1. [科学计算] 是非典型的正常输入数据集,特别是,当使用一个算法时发现的缺点或者是bug.一个被病态的输入所中断的算法是有用的,尽管在实际中这样的输入是不可能发生的.\n 2. 当使用测试输入时,意味着故意在最坏的情况下进行.这样做的意义在于两方面,一是数据是被破坏的情况下,另一面是某些人为了想出这样疯狂的例子,而着手明确地来攻破这个算法。 \n 3. 也指不可能的环境集合.例句,"如果网络中断，并且在根用户的命令执行一半时发生，那么系统有可能会崩溃的" "是的，不过它仅仅是一个病态的情况" 经常放弃这种情况,这样的结果是可接受的,因为他们不正常的发生,以至于不必另外的处理这种情况(参见解释1). \n
payware	: /pay'weir/ /n./  商业软件。与 shareware 或 freeware 相对. \n
PBD	: /P-B-D/ /n./  ["Programmer Brain Damage"的缩写] 应用于错误报告，来揭示由于程序员不当的或目光短浅所造成的程序中断的地方。 \n
PC-ism	: /P-C-izm/ /n./  \n 一段代码或一个编码技术，它利用了IBM PC中的不安全的单任务环境，通过硬件寄存器的忙等待，屏幕存储器的直接欺骗，或使用时序硬盘循环。参见ill-behaved, vaxism, unixism. 又称"PC-ware"，名词，在有一个比较好的操作系统的机器上充满PC-ism的程序（贬义词）
PD	: /P-D/ /adj./   \n "Public domain" 的缩写.来源于英特网档案网站,应用于分布于新闻组和网络归档文件的站点的软件.大部分软件实际上并不是合法的public domain,但却因为各种各样的版权和使用权下允许复制而被广泛传播.参见copyleft.
PDL	: /P-D-L/, /pid'l/, /p*d'l/ or /puhd'l/  \n 1. 名词,程序设计语言"Program Design Language"的缩写,在处理过程中被用来强制设计程序的任一类正式而无用的伪代码.通常,处理过程希望被PDL 来描述和代码同步的来维护.参见flowchart .\n 2. 动词. 使用程序设计语言设计.例句,"I've been pdling so long my eyes won't focus beyond 2 feet."\n 3. 名词, "Page Description Language"的缩写.最常见的例子是Adobe's PostScript language(参见PostScript),还有其他一些,如Xerox InterPress 等.
pdl	: /pid'l/ or /puhd'l/ /n./ ["Push Down List"的缩写]\n1. 在ITS 时代,所喜欢的MITism 的stack, 参见overflow pdl.\n2. Dave Lebling,Zork 的一个合著者.\n3. 很少使用,任何意义上的PDL,因为这些并不总是大写.
PDP-10	: /n./  [Programmed Data Processor model 10] \n 实现分时的机器.在hack 中这是很重要的,由于在1970s 中期,许多大学的计算设备和研究实验室斗采用它,其中包括MIT AI 实验室,斯坦福,和CMU.这个指令集(著名的是bit-field 指令)的某些方面仍然是不可超越的.当DEC 认为PDP10和VAX 生产线在相互竞争,并决定将软件发展集中在获利多的VAX 上,PDP10 在VAX 机器(PDP10 的继承者)的出现下逐渐退出.PDP10 最终于1983 年从DEC 的生产线上退下,紧接着,DEC 的建造一个变量新模型的Jupiter 项目失败了.(其他公司的市场克隆的常识也毫无结果,参考Foonly 和Mars) 这个事件宣告了ITS 和产生最初Jargon 文件的技术文化的宿命, 不过到1991年中期,它成为那些在PDP10上学习的hacker 中一个可纪念的事情. 参见TOPS-10 , ITS, AOS, BLT, DDT, DPB,EXCH, HAKMEM,JFCL,LDB, pop,push.
PDP-20	: /n./   \n 不存在的最著名的电脑.运行TOPS-10 操作系统的PDP-10 最为区分于PDP-11 的方式被认为是DECsystem-10. 过后,运行TOPS-20 的那些系统被认为是DECSYSTEM-20(字母大写的原因在于一个由Singer 对DEC 诉讼),与流传相对的是,没有出现PDP-20,10 和20 唯一不同的地方在于操作系统和颜色.大部分运行TOPS-10 的机器上是Basil Blue,而大部分TOPS-20 上是Chinese Red.
peek	: /n.,vt./  \n (和poke)大部分微型电脑BASICs 上对绝对地址上访问内存内容的命令,被扩展成任何HLL中概念(peek 访问内存,而poke 修改.).大部分在小的non-MMU 微指令上的非法访问包括peek内存,或多或少随意地,寻找系统保存有用事物的地方.对不同计算机的这样地址的列表传播.(参见interrupt list ,the) 对这些地址poke 的结果可能会有用,有趣,或者是完全的lossage(参见killer poke). \n因为一个real operating system 在微指令上peek 和poke 任务提供了实用的,高级的服务,而且真实语言不鼓励低级内存慢,一个问题像"How do I do a peek in C?" 是newbie 的一个特征.(当然,OS 内核常这样做;一个真实的C hacker 会迅速地将一个绝对地址赋给一个指针变量)
pencil and paper	: /n./   \n 一个过时的信息存储和传递设备,它通过将沉淀的石墨放在纸浆上工作.在基于纸的技术上的更多近期发展包括改进的一次写的更新设备,它使用类似于鼠标球的滚动头来涂颜料.所有这些设备需要在手写技术上熟练的操作员.这些技术在hacker 世界中是普遍存在的,但是易被忘.大部分hacker 有比较潦草的书写,而且长时间的键盘输入使得这个更加退化.大概出于样的原因,kacker 不赞成使用pencil-and-paper 技术,并且在除了日常书写之外的地方反对.
peon	: /n./   \n 一个在计算机系统上没有任何特殊权限的人.例句,"I can't create an account on foovax for you; I'm only a peon there."
percent-S	: /per-sent' es'/ /n./   \n [来源于C 中pritf(3)库函数中的常用来插入任意字符串变量的代码] 一个未确定的人或物. \n 例句,"I was just talking to some percent-s in administration." 参见random.
perf	: /perf/ /n./   \n 同义词chad (注释1).相关术语perfory.术语perf 可以指穿孔.
perfect programmer syndrome	: /n./   \n 傲慢且自我的信念,认为自己高于常人.常常在一些有点能力但缺乏经验的程序员身上更加明显.(特别是毕业生,他们观念被解决toy problem 的好的表现所扭曲) 例句,"我的程序当然是正确的，没有必要来测试它" "是的，我想这里可能会有问题，但是我不会在根模式的情况下做有修改的标记."
Perl	: /perl/ /n./   \n 由Larry Wall 而发展的解释语言,在新闻组广泛传播.表面上类似于awk,不过更深, 它包括许多sed(1)和shell 的便利工具和一个广泛的Unix 系统调用界面.那些固执的的黑客系统管理员逐渐的开始考虑将它作为备选的语言之一。在一个著名的关于lex(1)评论中Perl 被描述为Unix 编程的"瑞士军刀式的武器".参见Camel Book.
person of no account	: /n./   \n 用来指一个没有网络地址的人,常常用来防止混淆.例句,"这是比尔，他没有账户，但他曾经有一个bill@random.com". 参见return from the dead.
pessimal	: /pes'im-l/ /adj./   \n [optimal 的反义词] 极度地糟糕.例句,"这个环境极其恶劣." 又称pessimize,动词.使尽可能糟糕的.这些词明显的与optimal 和optimize 为反义词,由于某个原因在英语字典中不出现,尽管pessimize 出现在牛津英语词典中.
pessimizing compiler	: /pes'*-mi:z`ing k*m-pi:l'r/ /n./ [optimal 的反义词]  \n 极度地糟糕.例句,"这个环境极其恶劣." 又称pessimize, 动词. 使尽可能糟糕的. 这些词明显的与optimal 和optimize 为反义词, 由于某个原因在英语字典中不出现, 尽管pessimize 出现在牛津英语词典中.
peta-	: /pe't*/ 参见数量词quantifiers.
PETSCII	: /pet'skee/ /n. obs./  [PET ASCII 的缩写]  \n 在海军准将商业计算机PET 系列个人电脑和之后海军准将C64, C16,和C128 机器上使用的ASCII 字符集的变种.PETSCII 集使用左键和up 键来代替下划线和插入符,将未更换的字母表放置在位置65-90,将变化的字母表放在位置193-218,而且加入了图形字符.
phage	 /n./ \n 一个以越权的方式修改其他程序或数据库的程序,特别的它还可能传播病毒或者木马的程序.\n参见worm,mockingbird.类比于生物学中的噬菌体.
phase	 \n 1.名词.关于标注24 周期的睡醒时间表的计划;对于那些在晚上工作或者没有固定时间表的人们很有意义的概念.每天定期进行改变一个人的时期多达六个小时,这并不少见.例句,"你的突变时期是什么时候?" "我会继续到下午8 点左右. 之后，我就会进入周五的计划列表中." \n 一个人12 个小时偏离phase 有时被称为夜间模式.(白天模式也是使用的,指在从9 点到下午5点工作.)改变周期叫做改变phase,Caltech 最近使用了phase shifting . \n 2. " change phase the hard way": 为了进入另一个phase 而长时间清醒. \n 3. "change phase the easy way" : 保持睡着,等等.但是有人认为保持清醒或睡着是简单的,但是缩短你的白天或这晚上是难的,(参见wrap around) 影响那些跨越时区的旅客的时差感归因于:旅客的紧张和时区的改变.那些突然发现他们必须在短时间内改变周期的hacker 经历了相似的没有旅行的时差感.
phase of themoon	 /n./ \n 幽默地用来指被依赖于的一个随机变量.有时意味着所依赖的不可靠,或者是说可靠性在于无法决定的条件.例句,"This feature depends on having the channel open in mumble mode,having the foo switch set, and on the phase of the moon." 参见heisenbug . \n 有这样一个真实的故事: 曾经有一个依赖于the phase of the moon 的BUG.有一个小程序在MIT 许多程序中用来计算月亮的真实phase.GLS 将这小程序放到一LISP 程序中,当它要写出一个文件时,首先输出一个大约80 个字符长的时间戳.偶然的情况下,消息的第一行会因太长而溢出到下一行,当读回文件时这个程序会barf.第一行的长度取决于日期和时间,还有phase 详细说明的长度.所以这个bug 依赖于the phase of the moon. \n 第一版Jargon File (Steele-1983)中包含了可以展示这个bug 的时间戳的例子,但是字母打印机纠正了这个.这就被称作the phase-of-the-moon-bug 的bug.
phase-wrapping	 /n./ 同义词包着的(解释2) \n 
phreaker	 /freek'r/ /n./ \n 一个参与盗用电话线路的人.
phreaking	 /freek'ing/ /n./  [来源于" phone phreak"] \n 1.破解电话网络的艺术和科学(例如,免费打长途电话). \n 2. 扩展为在其他环境中破解安全.(特别是,但不完全是,在通讯网络中),参见crack.有一段时期,盗用电话线路在黑客中是比较敬佩的活动,这样一个君子协定：把preaking 作为一个智力游戏和一种形式的探索，是非常赞同的,但是严重的盗窃服务是禁忌的.在hacker 社区和核心电话飞客之间有着重大交叉,他们使用他们自己的半地下网络作为传奇的"TAP Newsletter". 随着技术的广泛传播在1980 年代中期这个风气逐渐消失.大约在相同时间,电话网络的改变使得旧风格的技术变得不大有效了.所以phreaking 开始转到依赖于犯罪行动,例如偷窃电话卡号.犯罪团伙的罪行和惩罚,像"414 团伙",使得这个游戏变得丑陋.一些过时的hacker 仍然盗用电话线路,但是那些日子已经不存在了.
pico-	 /pref./ \n 一个小于nano-的数量词,与nano-和micro-具有相同的使用方式,但更宽松些.这种用法在nano-和micro-使用中并不常见,但应该被任何一个hacker 所认识.参见quantiers ,micro-. 
pig, run like a	 /v./ \n 在给定的硬件上,软件运行地非常慢. 区分hog.
pilot error	 /n./ \n 使用者的错误配置或误用软件.从而产生像bug 似的结果."Joe Luser 报道在发送邮件时的一个BUG 会产生伪消息头" "这不是bug, 是飞行员式的人为错误，他的发送邮件装置被毁掉了."
ping	 \n 1.俚语,指一个计算机为了确定另一台计算机的存在和警觉性而发送的一条小的网络信息(ICMP ECHO). Unix 命令中的ping(8)可以这样做.偶尔作为一个电话问候.参见ACK,EN \n 2. 动词, 验证存在\n 3. 动词, 引起注意\n 4. 动词, 向一个mailing list 中的所以成员发送一个消息并请求一个ACK(为了确定任何人的地址是可达到的.).例句,"我们没有从Geoff 那得到任何有用的信息, 但他确实对ACK 同时做出了回应当我在向我的朋友发牢骚时."\n 5. 名词, 一定程度的兴奋.高兴的人流露出pings;此外可以创造ping 和给予所需要的人.这种ping 可以出现一个惊呼"Ping!",形式"pingfulness",用来形容所流露出ping 的人,对比blargh.  \n 迄今为止最好笑的ping 使用是由Steve Hayman 于1991 年在新闻组群com.sys.next.上的描述.他试着分离连接着一个NeXT 机器的TCP/IP Ethernet 上的一个错误的电缆片段,对于在每次调整后回到控制台来检查是否ping 包通过了.所以他使用NeXT 上的录音特征,然后写了一个脚本不断地引发ping(8),听取回应,回放所记录的返回包的录音.结果是一个程序导致机器不断地重复"Ping ...ping...ping...".他将音量调到最大,通过耳听找寻,很快找到了坏的连接器.\n
Pink-Shirt Book	 \n Peter Norton 程序员对IBM PC 指南,原先的封面是穿着粉色衬衫并得意地笑的Peter Norton. 可能是对这个使用的认同,最新版本的封面是另一张穿着粉色衬衫的Peter Norton 照片.
PIP	 /pip/ vt.,obs. \n [外围交换程序]拷贝,来自CP/M,RSX-11,RSTS/E,TOPS-10,和OS/8(从PDP-6的一个用途获得)上的程序PIP,用来文件拷贝.在这个程序产生时,同时是1963年PDP-6的发展时期,它被称为ATLATL("Anything, Lord, to Anything, Lord"). 参见BLT,dd 参见at.
pistol	 /n./  \n [IBM]一个使人很容易犯错误的工具,例如,"Unix rm * makes such a nice pistol!"
pixel sort	 /n./  \n 在crush 过程中不可逆转地丢失有价值数据的压缩常规.用在"lossy"方法中,例如JPEG.这个理论仅仅用在摄影画面上,一些微小的数据丢失不影响视觉效果.术语"pixel sort"意味着对于这个理论的不信任.对比bogo-sort.
pizza box	 /n./ \n 在台式工作站里罩住电子设备的稍大而薄的盒子,这样的命名是因为它的大小和形状和像风洞似的两兆单盘可移动磁盘堆常常叫做pizzas,而装他们的驱动器被称为烤炉.这是进步的标志,在以前磁盘是比萨似的,而现在整个计算机都是这样的。
pizza, ANSI standard	 /an'see stan'd*rd peet'z*/ \n 意大利香肠和蘑菇比萨.杜撰出来是因为在某个时期直到1990 年中期CUM hacker 所点的比萨是那种味道. 参见rotary 参见ebugger, 对比tea, ISO standard cup of .
plaid screen	 /n./ \n 当某些memory smash 重写控制块或者一位图显示的图像存储器时所出现的特殊作用.术语"salt 和pepper "代之相似开端的不同样式.尽管这个术语被PARC 杜撰出来代之错误的结果,某些X 演示像display hack 引起了plaid screen 效果.
plain-ASCII	 同义词flat-ASCII
plan file	 /n./  [Unix]   \n 在支持finger 的系统上, 当用户被finger 时,就会显示用户的主目录中的"plan file".这个特征本来用途是用来保持潜在地查询地址和长期计划,但是现在变为幽默和表现自己的目的. 像sig block ,参见Hackin 参见X for Y. 近期在plan file 的革新是"scrolling plan files "介绍,这是使用只打印ASCII 字符集,回车和换行的一位动画,避免了终止具体转义序列,因为finger 命令不能通过换码符.(为了安全原因,参见letter mb) \n Scrolling .plan files 已经成为小规模的艺术,而且某些站点举行竞赛来寻找谁能创造出最长,最有趣,最原创的动画.不同的动画字符包括: \n Centipede: \n mmmmme \n Lorry/Truck: \n oo-oP \n Andalusian Video Snail: \n _@/ \n 而且在Usenet 上可以获得一个可以产生他们的编译器(ASP). 参见twirli baton.
platinum-iridium	/adj./ \n 对于其他相同类别来说是标准的.这个含义来自巴黎附近的国际计量局标准千克.例句,"This garbage-collection algorithm has been tested against the platinum-iridium cons cell in Paris." 对比golden.
playpen	 /n./ \n [IBM] 程序员工作的房间. 对比salt mines.
playte	 /playt/ \n 16 位, 从nybble 和byte 类推出.习惯用法: 很少.参见dynner crumb .这些术语的讨论请参见nybble
plingnet	 /pling'net/ /n./  \n 同义词UUCPNET,参见Common alth Hackish,它使用"pling"来代之bang .(通样在bang path中)
plokta	 /plok't*/ /v./ [Press Lots of Keys to Abort 的缩写] \n 为了得到系统的响应按随便的键.为了退出一个不知道的程序的过程,或着试图了解系统是否慢或被占用时,人们就试图plokta.在试图了解一个特殊操作的不熟悉的关键字序列,plokta 也可被使用.某人可能会陷入"plokat mode ",当他将两只手放在键盘上希望得到响应. \n 一个细微的并更直接的plokta 形式在邮件信息或者Usenet 文章中常被看到-- 文本可能以下面内容结束:\n^X^C\nq\nquit\nq\n^C\nend\nx\nexit\nZZ\n^D\n?\nhelp\n当使用者徒劳地试图寻找到正确地退去序列,在消息后面留下堆积地错误的尝试.
plonk	 /excl.,vt./  \n [Usenet: 可能收到英国俚语对于廉价酒的"plonk"或者指表现笨的人的"plonker"的影响]\n随着他跌倒在kill file 的底部,newbie 所发出的声音. 当它发源于newsgroup talk.bizarre,这个术语作为公共嘲弄的形式在Usenet 上广泛传播.
plugh	 /ploogh/ /v./  [来自ADVENT 游戏] 参见xyzzy. \n 
plumbing	/n./  [Unix] \n 作为shell 代码的术语,这样称呼是因为"pipelines"的普及,它反馈一个程序输出对于另一个的输入.在Unix 下,用户应用程序可以被执行或者通过一些封装在shell 脚本中的管线和当前文件的组合而满足.这样比每次写C 程序花费更少,这个能力也被认为是Unix主要特征之一. 一些其他的操作系统,像IBM 的和VM/CMS 的,支持相似的功能,特别是用在"hairy plumbing "的构建.(参见hairy)You can kluge together a basic spell-checker out of sort(1), comm(1), and tr(1) with a little plumbing." 参见tee.
PM	/P-M/ \n 1. 动词(来自"preventive maintenance"),为了检查或测试目标维修机器.参见provocive maintenance , scratc monkey. \n 2. 名词"Presentation Manager"的缩写. 一个elephantine OS/2 图形用户接口.
pnambic	 /p*-nam'bik/ \n ["Pay no attation to the man behind the curtain"的缩写字,出自"The Wizard Of Oz"电影的一个场景.]\n1. 由于不完整的执行或者系统的复杂性,一个过程或者函数的发展阶段需要人际交往来模拟或者代替其中一些或者所有过程或者函数操作,输入或者输出.\n2. 用于修饰或者说明一个表面操作是全部或者部分歪曲的过程或者函数.\n3. 被prestidigitization.需要最终pnambic 产品是"Dan Bricklin's Demo" ,一个支持用户界面设计原型的程序.在hacker中一个相关格言:"Any sufficiently advanced technology is indistinguishable from a rigged demo."\n参见magic (释1)
pod	 /n./  [是"Prince of Darkness"的缩写] \n 一个Diablo 630. 来自DEC-10 PODTYPE 程序用来提供格式化文本.不要与P.O.D 相混淆.
point-and-drool interface	 /n./ \n 技术术语"point-and-shoot interface"的模拟,在Mcintosh 上描述一个窗口,图表和鼠标接口.当然，这意味着这样的接口适合于白痴.参见for the rest of us,WIMP environment ,Macintrash,drool-proof paper .还有" point-and-grunt interface".
poke	 /n.,vt./  参见peek
poll	/v.,n./ \n 1. 检查输入行,传感器,或者内存单元的状态,从而看特殊的外部事件是否注册. \n 2. 不断地访问或与某人检查,例句,"我坚持探询他，可是他却没有接他的电话，他肯定电话交换了" \n 3. 询问.例句,"午饭？我要询问下每日的外卖订单." \n 
polygon pusher	 /n./ \n 一个将他大部分时间花在物理布局水平上的芯片设计者(这需要绘出大量的多颜色多边形).还有"rectangle slinger".
POM	/P-O-M/ /n./ \n "phase of the moon "的一般缩写. 习惯用法: 常在习语"POM-dependent",意思是flaky.
pop	 /pop/ \n [来源于移走栈中最顶元的一个操作,而且程序返回地址被保存在堆栈上.]  \n 1. 动词从stack或pdl 中移去.如果某个人从他的stack 中pop 了某件事情,这意味着他完成了这上面的工作,且可以将它从事情列表中删除. \n 2. 当一个讨论进行到脱离主题的时候, 某人将喊道"Pop",也就是指"回到原来的出发点".喊的时候常常向上举着胳膊用手指向天花板.
POPJ	/pop'J/ /n.,v./  [来自PDP-10 return-from-subroutine 的指令] \n 从偏离中返回.动"词用法,"Popj,popj",意思是"让我看一下,我们在那里?" 参见RTI.
poser	 \n 一个wannabee ,不是hacker 俚语,不过在crackers,phraks 和warez d00dz 中使用.不像lamer 或者leech 消极. 可能来自在punk-rockers 和metalheads 中的一个惯用法,奚落那些只说不做的人.
post	 /v./ \n 给一个mailing list 或者newsgroup 发送消息.在语境中与mail 相区分,例句,"Are you going to post the patch or mail it to known users?" 
postcardware	/n./ \n 一种接近于freeware 的shareware,只需要合适用户发送一张家乡的或其他的明信片就可以从作者那里获得.
posting	 /n./ \n 跟动词post 相关的名词.与一个letter 或者平常的email 区分,在于这是广播的不是点对点的.不清楚发到通讯录上的消息是posting 还是email, 可能最好的划分点在于如果你不清楚可能接受者的姓名,这是一个posting.
postmaster	 /n./ \n 在一个与Internet 或者UUCPNET 连接站点上负责email 联系和维修的人.常常但不总是与admin 相同.电子邮件Internet 标准(RFC-822)要求每个机器有一个postmaster 地址,通常这是这个人的别名.
PostScript	 /n./ \n 一个页面描述语言(PDL),基于John Gaffney 1976 年在Evans 和Sutherland 的最初工作,这在XEROX PARC 上通过"JaM" (John and Martin,Martin Newell)展开,最终在1982 年他和Chuck Geschke 建立Adobe Systems Incorporated 后,由John Warnock 等在当前形式下实施.PostScript 使用一个充分编程语言而不是一些低级转义序列来描述在激光打印或者其他输出设备上的图像,从而起到杠杆作用.值得注意的是从Bezier 曲线描述可以在低分辨率下实现了高清字体的the fly rasterization .hacker 认为PostScript 是非常有用的,而且技术优点的组合和广泛地传播使PostScript 成为图像输出的选择语言.
pound on	 /vt./ \n 同义词bang on.
power cycle	 /vt./ \n 关闭一个机器并接着重新启动它,这是为了清理某些hung 或者gronked 状态.同义词120reset,参见Big Re Switch .对比Vulcan nerve pinch ,bounce (解释4),和boot.参见AI Koa (在附录A 中),这关于Tom Knight 和新手.
power hit	 /n./ \n 提供给机器电流的一个高峰或低谷;一个电力glitch. 这会给你的机器造成瘫痪而且永久损害.
PPN	 /P-P-N/, /pip'n/ /n. obs./  [来自"Project-Programmer Number"] \n在TOPS-10 下的用户ID,和在SAIL , BBN, CompuServe等下的它的可改变后代. 从PDP-10 时代,过时hacker 使用这个来代之其他系统上的用户ID.
precedence lossage	 /pre's*-dens los'*j/ /n./  [C 程序员]  \n 由于意想不到的分组算法或者编译器的逻辑运算,而在一个表达式中的编码错误.特别是在C 中特定的一般编码错误中使用,出于&,|,^,<<,和>>的非直觉的低优先级.(正是因为这个原因,有经验的C 程序员故意忽略语言的baroque 优先等级而使用括号) \n 这样可以通过使用括号来避免. LISP 程序员喜欢指出这种情况在他们喜爱的语言中是不存在的,它完全避开了优先级,只需要在每个地方精确地使用括号. 参见aliasi bug,memory leak ,memory smash ,smash the stack , fandango on core, overrun screw.
prepend	 /pree`pend'/ /vt./  [由"append"类推而来] \n 在前面追加.正如"append "(不能作为动词,不能前缀或者后缀),直接对象总是所需要添加的,而不是原先的文字(或者是字符串或者别的).例句,"If you prepend a semicolon to the line, the translation routine will pass it through unaltered."
prestidigitization	 /pres`t*-di`j*-ti:-zay'sh*n/ /n./ \n1. 通过熟练的手法将某个事物放到数字符号的动作.2. 通过方法的数据输入.
pretty pictures	 /n./  [科学计算]  \n 从numbers 的下一步. 一个程序有趣的图像输出可能与这个程序要模拟的系统没有合理的关系. 好的说明见management.
prettyprint	 /prit'ee-print/ /v./ \n 1. 从一个hairy 内部表示产生一个可以阅读地输出,特别是,用于grinding (解释1) 程序代码过程,尤其是对LISP 代码.\n 2.用某个特别的巧妙的而且非平凡的方式格式化.
pretzel key	 /n./  [Mac 使用者] 参见featur key.
priesthood	 /n. obs./  [TMRC]  \n 挑选出来的一组系统管理者,来负责一批操作计算机系统的操作和维护.在这些计算机上,一个使用者不能直接访问一个计算机,必须提交数据和程序给一个执行的教父. 几天或几个星期后数据被返回. 参见acolyt
prime time	 /n./  [来自TV 节目]   \n 在一个分时系统上的正常高使用率的时间;日班. 避免prime time 传统地作为额一个night mode hacking 的主要理由. 个人工作站的增进提供了这个术语,还有分时. 深夜hacking run 独创性的趋向没改变多少.
printing discussion	 /n./  [XEROX PARC]   \n 一个拖延的,低级的,费时的,无要领的讨论.
priority interrupt	 /n./  [来自硬件术语]   \n 描述任何刺激物,可以足够强烈到从hack mode 中跳出来.经典地用来描述被一个SO 从直接的性中拖出来,也可以指更多平常的中断,例如附近火警响起. 也可以称为一个NMI(non-maskable interrupt),特别是在PC-land 中.
profile	 /n./ \n 1. 一个程序的控制文件,特别是自动从每个用户根目录中读取的文本文件,而且为了用户化程序行为可以被用户修改. 用来避免hardcoded 选择.(参见dot fi , rc file) . \n 2. 一个关于一个例行程序所花费时间的报告, 用来在其中发现和调整hot spot. \n 3. 用于特殊目的的标准子集. 这个解释使那些在无止境ISO 标准的奇异世界里逛的hacker 困惑.
progasm	/proh'gaz-m/ /n./  [Wisconsin 大学] \n 在经历了一个程序或者其他计算机相关项目的完成的喜悦感.
proglet	 /prog'let/ /n./  [UK]  \n 一个为了满足即可需要的短的即可程序.常常用BASIC 写,很少超过12 行,而且没有子程序. 代码很容易写出,而且不需要编辑,运行也非常正确(代码的数量根据每个人的技术和所使用的语言来决定).对比toy program , noddy , one-liner wars.
program	/n./ \n 1. 一个计算机的神奇咒语,可以将输入编程错误信息. \n 2. 实验认识论的训练.\n3. 艺术的一种形式,表面上是为了计算机的指令,但如果其他程序不能理解,则不可避免地成为一个失败.
Programmer'sCheer	 \n "Shift to the left! Shift to the right! Pop up, push down! Byte! Byte! Byte!" 一个如此早的笑话,以至于都长头发了.
programming	: /n./   \n 1. 调试一张白纸的技术(或，在在线编辑的那些日子里，指调试一个空白文件的技术)。  \n 2. 一种娱乐，类似于用头撞墙，只是不太可能有什么奖励. \n 3. 当你穿着衣服时能做的最有趣的事(尽管衣服不是必须的).
programming fluid	: /n./   \n 1. 咖啡 \n 2. 可乐 \n 3. 任何含有咖啡因的刺激性饮料. 很多黑客认为这些饮料对通宵hacking来说很关键. \n 见wirewater.
propeller head	: /n./   \n 对黑客来说, 这个词与computer geek同义. 而非黑客们有时用这个词来描述所有科技人员. 该词可能是从科幻迷们将螺旋桨骷髅帽(propeller beanie)作为科幻迷身份标记的这种传统演化而来的(这种传统由过去的一位科幻迷Ray Faraday Nelson所创, 当然没有人真的戴这种帽子, 除非用来搞笑).
propeller key	: /n./  [Mac用户] 见{feature key}. \n 
proprietary	: /adj./   \n 1. 在marketroid语言中意为"超级棒的"; 暗示产品拥有与公司内软硬件开发人员的智商不匹配的无比优秀的特征.  \n 2. 劣质的; 暗示产品与开放系统的标准不相符, 于是用户在买了它之后就要一直受卖方的敲诈, 无论是服务还是产品升级, 卖方都可以随意收费.
protocol	: /n./   \n 这个词被黑客所用时, 指的并非是一种严格标准的东西, 就像教皇特使谈话的得体性或俄式餐具的使用顺序那样; 黑客们并不关心这些东东. 该词用来描述一些规则, 根据这些规则, 不同的机器或软件能方便地彼此合作. 比如, protocol的确包括网络中发送数据包的合法形式或哲学家用餐问题中叉子的使用顺序. 这表示信息有标准格式, 而且不同的组织之间有一个大家都接受的优先级或指令集, 以便它们之间能按照一个预定的顺序交互. 参见handshaking, do protocol.
provocative maintenance	: /n./  ["preventive maintenance"的讽刺性变体] \n 为了保证系统保持稳定而定期对机器所做的一些操作. 这样称呼是由于这些操作往往是由一个不知道自己在做啥的field servoid所做的; 这样的"maintenance"常常"induce"问题, 或者会导致机器在一个无法测量的时期内保持在一个"不"稳定的状态. 参见scratch monkey.
prowler	: /n./  [Unix]  \n 一个定期(一般为一周一次)运行的daemon, 负责找出并删除core文件, 切割管理日志档案, 攻击"lost+found"目录, 并清除盘踞在文件系统角落的cruft. 参见GFR, reaper, skulker.
pseudo	: /soo'doh/ /n./  [Usenet: 'pseudonym'的缩写]\n 1. 用于电子邮件或Usenet的伪装, 用户用pseudo来达到娱乐目的或用来避免自己网络行为所造成的不良影响; 即"nom de Usenet", 网名, 常与伪造的记帐(用来掩盖消息来源)相结合. 也许pseudo中最出名及有趣的恶作剧是B1FF. 参见tentacle.\n 2. 概念上, 由flamage生成的模拟Usenet用户的AI程序. 很多flamer被指出实际上是这种pseudo, 尽管事实上现在还没有这种高智商的AI程序. 然而, 在1989年, 有一些伪造的帐户就使用了一种基于词频的模拟生成器来模仿几个著名的flamer; 这种方法在很大程度上利用了这些被模仿者所说过的话(back postings, 对比Dissociated Press). 很多人都被这些伪造的帐户所欺骗, 并且关于这些帐户真实性的辩论直到最后幕后主使人出现并承认后才得以平息.
pseudoprime	: /n./   \n 类似西洋双陆棋的一个典型状况(六个连续的相同点数), 只是其中有一个点丢失. 这个词是一个神秘的双关语, 来自于一个数学方法, 那就是, 不精确的确定一个数是否是质数, 而是使用统计技术来决定这个数是否"可能"是质数. 在1985年之前, 通过了这个素数测试的数被称为"pseudoprime"(数论专家们使用的pseudoprime意义在那之后就有了些变化; 1985年前的pseudoprime现在是"probable primes", 而现在"psudoprime"在模运算中有更严格的定义). 黑客的西洋双陆棋用法来自一个想法, 那就是一个pseudoprime几乎与prime一样好: 它在被证明不是prime之前都可以用来做一个prime的工作, 而且它可能不会被证明为假.
pseudosuit	: /soo'doh-s[y]oot`/ /n./   \n 一个想成为suit的人; 即一个想进入管理层或行政部门, 并且开始主动穿西装打领带的黑客. 这是一个黑客的坟墓. 参见lobotomy.
psychedelicware	: /si:`k*-del'-ik-weir/ /n./  [UK]  \n 同义于{display hack}. 参见{smoking clover}.
psyton	: /si:'ton/ /n./  [TMRC]  \n 带有不良力量的基本粒子. 一件事失败的概率与落在它上面的psyton数目成正比. Psyton是由观察者产生的, 这也可以解释为什么观看的人越多, demo演示就越可能失败. 这个词似乎很大程度上被bogon所取代; 参见quantum bogodynamics.
pubic directory	: /pyoob'ik d*-rek't*-ree/) /n./  [NYU] \n (也作'pube directory') \n 机器上的公共目录, 允许FTP访问. 得名的原因是该目录是SEX(释义1)的默认位置. 例句: "我会在周五之前把源码放到pube directory中."
puff	: /vt./   \n 将用Huffman编码压缩的的数据解压. 至少有一个名为"PUFF"的Huffman解码程序被广泛使用, 但是近期以来这种程序往往与编码器绑定在一起. 与huff相对, 见inflate.
punched card	:: n.obs.  [techspeak] (也作'punch card')  \n 计算技术之Stone Age的标志, 现在已经在IBM商店之外的地方绝迹了. 实际上puched card的出现远早于计算机, 它可以追溯到1801年, 当时是作为织布机的控制装备. 后来又出现了用于车床的板子, 传言说这种板子的尺寸是用来印美元大钞的, 但又不太像.  \n IBM(该公司起源于一个车床生产商)将punched card用在了计算机上, 在板上打出三角形小洞来作为二进制编码; 每张板80列, 每列一个字符. 也曾尝试过其它的编码框架, 板子尺寸以及小洞形状. \n IBM的punched card所造成的"后遗症"之一就是很多字符终端都是80列宽; 甚至到了今天, 很多不同计算机的快速参考卡(quick-reference card)也是这个尺寸.  \n 见{chad}, {chad box}, {eighty-column mind}, {green card}, {dusty deck}, {lace card}, {card walloper}.
punt	: /v./  [出自一个关于美式足球的笑话: "Drop back 15 yards and punt!"(往回跑15码然后撞线!)]  \n 1. 放弃, 一般指压根就没努力.  \n 2. 更具体的, 放弃思考当前的"Right Thing"是什么并尝试一次低效的hack. \n 3. 一个设计决策, 暂不解决某个问题, 一般是由于不能决定一个理想的算法框架.  \n 4. 将一个棘手的实现问题交给设计的其它部分去做. 例如, "用编译器做那个太难了, 我们把它punt给运行时系统吧."
Purple Book	: /n./   \n 1. 即"System V Interface Definition"(第五系统接口定义). 此书第一版的封面是十分恶心的暗紫色阴影. \n 2. 同义于{Wizard Book}, Donald Lewine的"POSIX Programmer's Guide" (O'Reilly, 1991, ISBN 0-937175-73-0).  参见{book titles}.
purple wire	: /n./  [IBM]  \n 被Field Engineer安装的线路, 用在测试或调试中发现的问题附近. 尽管这些线的颜色实际是黄色, 但它们依然被称为"purple wire"... 对比 {blue wire}, {yellow wire}, 和{red wire}.
push	:   \n [出自将当前信息放在栈上的操作, 以及过程调用返回地址也存在栈上]\n (也作 PUSH /push/ 或 PUSHJ /push'J/, 后一种写法是基于PDP-10的过程调用指令)\n 1. /vt./ 将数据等放在stack或pdl上. 如果某人说一个东西被push到他的stack上, 那意思就是说他头上悬挂的Damoclean事件(出自谚语"Sword of Damoclean", 意思是将发生不幸的事)已经越来越多了. 这也暗示某人会优先处理这件事; 否则他会说将这事添加到他的queue里去.\n 2. /vi./ 进入题外话, 将当前的话题先放放, 以后再说. 是pop的反意词; 参见 {stack}, {pdl}.
quad	 /n./ \n 1. 两位,同义如quarter,crumb,tayste. \n2. 一个什么东西的四个组合(对照hex,常识2). \n3. 在APL 语言中关于I/O 为了一些神奇目的使用的一个矩形字形或一个中字形.Former Ivyleaguers and Oxford types are said to associate it with nostalgic memories of dear old University. \n
quadruple bucky	/n. obs./ \n 1. 在一个MIT 的space-cadet 键盘(space-cadet keyboard)上,当键入一个字符键时,使用四个键(control 键,meta 键,hyper 键,super 键). \n 2. 在一个Stanford 或者MIT 键盘上,当键入第五个字符时,可以使用四个键(这四个键是位于键盘两边的control 和meta 键).但是这很难做到,一个恰当的方法是用左手按住左边的control 和meta 键,并且用右手按住右边的control 和meta 键,最后用鼻子去按第五个键. \n 在实际中quadruple-bucky 组合很少使用,因为当一个新的命令被发明,通常将某个容易键入的字符来赋予它.如果你想写一个包含许多命令或特征的程序,你可以说:"当吹口哨吹出贝多芬第五交响曲,录制的命令是quadruple-bucky cokebottle."(可以参见double cky,bucky bits,cokebottle).
quantifiers	\n 在专业术语中,用于科学测量的标准度量的国际单位制前缀有双重含义.在出现10 的幂次的时间或事物单位中,例如钱数,通常的意思是10 的幂次的乘积(1000=10^3),而zai 出现2 的幂次的字节或其他事物中,通常的意思是2 的幂次的乘积(1024=2^10). \n 下面是国际单位制前缀,以及相应的二进制解释. \n 前缀十进制二进制 \n kilo- 1000^1 1024^1 = 2^10 = 1,024 \n mega- 1000^2 1024^2 = 2^20 = 1,048,576 \n giga- 1000^3 1024^3 = 2^30 = 1,073,741,824 \n tera- 1000^4 1024^4 = 2^40 = 1,099,511,627,776 \n peta- 1000^5 1024^5 = 2^50 = 1,125,899,906,842,624 \n exa- 1000^6 1024^6 = 2^60 = 1,152,921,504,606,846,976 \n zetta- 1000^7 1024^7 = 2^70 = 1,180,591,620,717,411,303,424 \n yotta- 1000^8 1024^8 = 2^80 = 1,208,925,819,614,629,174,706,176 \n 下面是国际单位制小数前缀: \n 前缀十进制jargon 使用习惯 \n milli- 1000^-1 jargon 中很少使用 \n micro- 1000^-2 小(参见micro \n nano- 1000^-3 更小(参见nano- pico- 1000^-4 更小(参见pico- femto- \n 1000^-5 gergon 中尚未使用 \n atto- 1000^-6 gergon 中尚未使用 \n zepto- 1000^-7 gergon 中尚未使用 \n yocto- 1000^-8 gergon 中尚未使用 \n 出于完整性前缀zetta-, yotta-, zepto-, and yocto-收录在上表中,他们是在1990 年在第十九届Conference Generale des Poids et Mesures'上采用.二进制前缀peta-和exa-不在jargon 中使用;前缀milli-在jargon 中很少使用.对于更多的jargon 使用信息可参见micro-,o-,和nano-."Femto"和"atto"也未被jargon 收录.(参见attopar c) \n 在下面的表中,前缀列是10 的幂次的国际标准后缀,而"二进制"列列出了jargon 中2 的幂次的缩写.形式"B-后缀"经常用于二进制数量,单词"meg"和"gig"是可以被s'复数化的名词.令人迷惑的是, "K" 或者"M"经常用作后缀或数值而不是前缀,例如"2k 美元","2k 磁盘空间",这个也适用于"G".注意1000 的国际单位制度量前缀是"k",严格的来说,"K"代表1024 的数乘. \n 单独使用"K","M"和"G"代表字节的数量,因而64G是64 兆字节,而一个"K"是一个千字节. \n 混淆1000 和1024 是marketroid 的一个现象.(参见marketr d) \n 例如,经常指3.5 microfloppies 容量为1.44MB.事实上,这是一个bogus 数(参见bogus).大小为1440KB,也就是1440*1024=1474560 字节.所以在1.44MB 中的"mega"由两个"kilos"作出,一个是1024,另一个是1000.正确的兆字节数应该是1440/1024=1.40625. \n [1993 更新: 骇客Morgan Burke 建议下面的附加前缀: \n groucho 10^(-30) \n harpo 10^(-27) \n harpi 10^(27) \n grouchi 10^(30) \n 这将留下前缀zepp0-,gummo-,和chico-作为将来的扩展.] \n
quantumbogodynamics	 /kwon'tm boh`goh-di:-nam'iks/ /n./ \n 一个根据bogon 资源,bogon sinks 和bogosity potential fields 表现宇宙的理论.bogon 吸收使得人类行为愚蠢和机器失效(也可使得二者释放中等粒子).然而bogon-computron 相互作用机制还没有完全理解和需要阐明.quantum bogodynamics 常用来解释在suits 存在下硬件和软件的失效激增问题,后者释放bogon,而前者吸收.(参见bogon,c putron,suit,和psyton)
quarter	 /n./ \n  两位.这个来源于一个著名的海盗电影中的西班牙古银币.在早先的美国历史中哦过,西班牙银币可以与一个美元相等价,所以每一部分可以看作是价值12.5美分. 同义词如tayste,crumb,quad.(参见nybble)
ques	 /kwes/  \n 1.名词,疑问号字符(?,ASCII 0111111); \n 2.感叹词,什么.常用于"Ques ques?"(参见wall). \n
quick-and-dirty	 /adj./ \n 在时间或用户压力下描述的一crock.特别适用于当你想要表达你认为在以后最快的导致麻烦的方式. (参见kluge)
quine	 /kwi:n/ /n./ \n [通过Douglas Hofstadter,来源于逻辑学家Willard van Orman Quine]一个可以产生自己源程序正文作为它的输出的程序.设计某个给定程序语言的最短quine 是个独创性的乐趣.下面是个经典的quine \n ((lambda (x) \n (list x (list (quote quote) x))) \n (quote \n (lambda (x) \n  (list x (list (quote quote) x))))) \n 这个可以在LISP 或者Scheme 上运行.在其他语言,例如Postscript,可以相对容易的写quines, 但在语言像C 语言上是很难的(一个挑战).下面是对ASCII 机器的一经典C quine: \n char*f="char*f=%c%s%c;main() \n {printf(f,34,f,34,10);}%c"; \n main(){printf(f,34,f,34,10);} \n 一些差劲的Obfuscated C Contest 记录是通过外来方式自我复制的quines. \n 
quote chapter and verse	 /v./  [从主流习语中类推] \n 引用恰当的bible 中相关的摘录.例句"I don't care if rn gets it wrong; \n `Followup-To: poster' is explicitly permitted by RFC-1036. 'll quote chapter and verse if you don't believe me." (参见legalese,la uage,FTFS)
quotient	 /n./  参见coefficien of X
quux	 /kwuhks/ /n./ \n [来源于拉丁文半异动动词quuxo,quuxare ,quuxandum iri;名词形式quux(复数quuces,英语化为quuxes)和quuxu (复数quuxuum)] \n 1. 原义,像foo 和foobar 的一个metasyntactic variable. 由Guy Steele 发明.在表现诗的正义下,它返回了发端时的昵称.  \n 2. 感叹词,参见foo,表示一点讨厌,发出参见由于它的声音.3.Guy Steele 作为"the Great Quux",对于诗文和Crunchly 漫画, 这是有点差劲.4.在某些场合作为一个双关语对面的crux.例如,"Ah, that's the quux of the matter!" 意味着这一点不重要,(对比tip of the ice-cube)5.quuxy:形容词,一个quux 的附属.
qux	 /kwuhks/ \n 标准metasyntactic variable 的第四个,在baz 之后,在quu(u...)x 序列之前,参见foo,bar,baz,q x.这个作为quux 的一个近期变化,标准序列的许多版本正好运行foo,bar,baz,quux,....
QWERTY	 /kwer'tee/ /adj./ \n 附属于一个标准英语键盘(有时叫做sholes 键盘),与Dvorak 或者外语布局或者一个spacecadet keyboard 或者APL 键盘相对照. \n 历史注记QWERTY 布局是一个fossil 的毫例子.有时说它的设计放慢了打字员的速度,但是这是错的,它的设计是为了快速打字.在打字机初期,使用早期的打字键快速打字阻塞了这个机制.sholes 改变布局,把许多一般合体字母分开,将打字机的字母放在一条线上,这样就具有打字的快速和准确.由于弹簧的恰当使用,阻塞问题得以解决,但是键盘布局保留了下来.
rabbit job	: /n./  [Cambridge]  \n 一种批处理任务, 它几乎不做任何真正有用的工作, 只是不断地自我复制, 就像兔子一样繁殖. （可以对比wabbit）
rain dance	: /n./   \n 1.任何礼仪性的、试图纠正硬件错误、却不可能成功的行为. 这个概念尤其用于更换印刷电路板、重新连接电缆等.  \n 2.为了达到某种目的, 用计算机或软件完成的一组神秘的行为. 这个词通用于描述一些例行公事, 它包含{incantation}和一些物理动作. （对比magic、voodoo programming、black art、cargo cult programming、wave a dead chicken, 参见casting the runes）
rainbow series	: /n./   \n 一种通过颜色区分的一系列的技术手册, 即该系列中每一本手册有一个独特的颜色. 最初这个词是指NCSC的安全手册（参见orange book、crayola books）. 这个词同样用来指文档附录中的参考文献（见Red Book, Green Book, Blue Book, White Book）. 至于哪些书是rainbow series所指的, 这取决于一个人的技术背景. 
random	: /adj./   \n 1.不可预料的；奇怪的.  \n 2.混杂的；不可区分的.  \n3.（贬义的）轻薄的；徒然的；没有方向的.  \n4.不相关的或不雅观的；随意挑选的；组织不严密的.  \n5.没有特定顺序的.  \n6.任意的.  \n7.无故出错的, 即制作的质量不高或者没有明显的原因.  \n8./n/ a random hacker, 尤指占用电脑的高中生.  \n9./n/ 不是黑客的人（释义2的名词形式） \n10./n/ 住在Random Hall的人.  \n(参见J.Random、some random X) \n
random numbers	:: /n./   \n当一个人想指定一批数目大但是随机的东西, 而语境却不合适用{N}时, 黑客们就倾向于用下面这些被称为random numbers的数： \n17, 23, 42(关于生命、宇宙以及万事万物的问题的答案),69, 105, 666(beast的数目)
randomness	: /n./   \n1.不明原因的功能失效； \n2.建立在偶然事件的复杂组合上的黑客或骇客行为, 或希冀某些功能偶然失效以便进行攻击； \n3.指人, 义同flakiness, 言外之义是这个人表现得很古怪、没能力或不适宜, 可能是因为太累了以致不关注、不可测量的量子效应以及时间原因. 例如："可能他是真的在抱怨, 也可能只是一个randomness. 等等看他是否回电话吧. "
rape	: /vt./   \n1.粗暴地使程序失效；尤其是指对程序或信息造成不可恢复的损坏. 常用来描述文件系统的损坏.  \n2.把一个硬件拆卸成零件.  \n3.从一个匿名ftp上大量拷贝文件. "昨晚我rape了Simtel的dskutl目录. "
rare mode	: /adj./   \n Unix系统的CBREAK模式(character-by-character with interrupts enabled).与raw mode和cooked mode相区别；在V7/BSD手册中用"a sort of half-cooked(rare?) mode"来描述这种模式. 该词语罕用. 
raster blaster	: /n./  [Cambridge]  \n 用于bitblt操作的特定硬件（blitter）. 据说受"Rasta Blasta"启发而来, 这个俚语是指可移动的立体声, 美国称之为"boom box"或"ghetto blaster". 
raster burn	: /n./   \n 屏面烧伤. 指的是长时间盯着显示器造成的眼睛疲劳. 见terminal illness. 
rat belt	: /n./ 一种电缆连接, 尤其是锯齿状、自锁的塑料制品, 只有在切断后才能移动. 
rat dance	: /n./  [出自连环漫画"Dilbert", 出版于1995年11月14日. ]  \n一种hacking run, 产生的结果是有序的, 但是与原来的目标几乎没有任何关系. 强烈暗示编程过程与目标本身是非常random的. （在漫画中, 老鼠Ratbert被邀请在Dilbert的键盘上跳舞, 以产生bug来让他修改, 结果却编出了一个浏览器. ）（对比Infinite-Monkey Theorem） \n这个词似乎在漫画出版后就被广泛使用, 显然Dilbert很受黑客们的欢迎. 很多人发现Dilbert的虚构的工作室的反常气息以及卡夫卡式的氛围都反映了自己的工作环境. 
rathole	:   [来自英语谚语"down a rathole", 意为浪费金钱和时间]  \n用于描述一个技术问题, 总是会消耗大量的讨论时间却没有一丁点的会取得结论或达成一致的可能性. "That's a rathole"(或直接"Rathole!") 被认为是抢先转换话题的招数.  \nratholes与religious issues的区别在于, 圣战(holy war)不能用这种招数被转换到其它话题上去. 经典的案例是XML命名空间和开源许可证申请. 
ratio site	:一个储存有私人文件的FTP站点, 要求用户须先上传一些文件方能下载.  \n上传文件与下载文件的字节数或文件数之间要满足一个比例. 例如, 在 \n一个2:1站点上, 必须先上传2Mb的文件才能下载4Mb的文件. 服务器上 \n的内容越热门, 这个比例往往越低. 经常出现这样的状况：服务器的硬 \n盘已满, 于是拒绝接受上传, 从而也不能提供下载, 导致这个FTP无用； \n或者当用户刚上传完一批大量的文件, 正要开始下载时, 连接就神奇的 \n断掉了. （参见banner site, leech mode） \n
rave	: /vi./  [WPI]  \n1. 在讨论一个特定话题时固执己见.  \n2. 在自己并不了解的话题面前武断的发言.  \n3. 向一个并不管事的人抱怨, 希望能得到帮助.  \n4. 有意的不断说话以骚扰他人.  \n5. 传福音布道. 见flame.  \n   6. 用来描述一种比blather稍微好些的"胡话", 比如友善的说些废话. Rave与\nflame稍有不同, 在于rave暗指人说话说个不停或不知所云, 而flame则指说话的 \n口气很强硬或者内容具有攻击性.  \n
rave on!	: /imp./对正在rave的人的讽刺性的鼓励, 那些希望raver能停下来但是知道不可能的人, 常用这句话.  \n
ravs	: /ravz/, 也作 "Chinese ravs" /n./ \n 饺子或锅贴. 我天朝的一种小吃（或者是两种）, 复数形式是dumplings, pot stickers, \n 在Boston附近又被称为Peking Ravioli. rav是ravioli的缩写, 黑客用它来表示某物是 \n 中式的而不是意式的(Italian). 二者都是在面中包了馅, 但是中式的没有cheese, 而 \n 且用的是面皮较薄, 有肉和蔬菜馅（好的还有韭黄）, 且二者烹制方式不同, rav \n 是蒸或煎的.  \n [汗...这也能进Jargon File] \n
raw mode	: /n./   \n操作系统的一种模式, 它允许程序直接从I/O设备获取或向I/O设备传送数据, 而不需要任何处理、抽象或操作系统的介入. （对比rare mode、cooked mode）. 这在Unix中是一个专业术语, 在它一些OS中也被借用. 
RBL	: /R-B-L/ \n 是Realtime Blackhole List的缩写. 一种允许用户设置黑名单来防御一些网站或spam的服务, 使得黑名单在一些电子邮件收发程序中实时可用, 这些e-mail收发程序知道如何使用RBL, 于是它们能过滤黑名单上的网站. 这种方式很激烈（并且存在争议）, 但是有效. RBL还有一个主页（?）. 
rc file	: /R-C fi:l/ /n./  [Unix中：来自CTSS系统ca.1995的'runcom files', 借用启动脚本(startup script) /etc/rc之名] \n脚本文件包含一个应用程序（或者整个OS）的启动指令, 通常是一个包含命令的文本文件, 当系统运行时这些命令被手动启动, 之后每次系统启动时这些命令就会自动执行. 参见dot file, profile, 释义1.
RE	: /R-E/ /n./  即regexp. 
read-only user	: /n./   \n指那些仅用电脑来阅读Usenet, bbs, email等, 却不写代码或提供有用信息的luser用户.  \n参见loser, twink, terminal junkie, lurker. 
README file	: /n./   \n   黑客眼中的介绍文档传统上存在于Unix源码的顶层目录, 包含了指向更多细节的 \n   说明文档、制作人员介绍、各种修订版本历史介绍文档的指针. 在Mac和PC领域,  \n   软件通常不是以源码形式发布的, 并且README文件更多的包含用户指南一类的 \n   材料, 比如文档最近的改动、解决错误的变通办法以及限制条件等. 黑客们总是说 \n   README传统来自Lewis Carroll的《爱丽丝漫游仙境》一书中爱丽丝遇到的魔法 \n   小吃, 它们上面都标有"Eat Me"和"Drink Me".  \n    \n   这个介绍性的文档可能被命名为README, 或READ.ME, 或极少情形下ReadMe \n   或readme.txt等其它变体. 而Unix程序员们通用的则是全大写的README. 跟据 \n   传统, 真正的源码文件名是全小写的, 而全大写的文件名是为元数据(metadata)、 \n   注释、涂鸦所保留的. 这是有功能上的考虑的, 因为'A'用ASCII码排序时在'a'之前,  \n   于是在文件列表中README就会出现在所有源码文件之前.  \n
real	: /adj./   \n 非模拟的. 经常用来作为virtual的反义词. 
real estate	: /n./   \n 用面积来衡量的重要资源. 最常用于芯片, 指集成电路表面能用来实现逻辑 \n 功能的面积大小（见nanoacre）. 也可用于dinosaur pen的地板面积, 甚至 \n 拥挤的桌面上的空间（物理或电子的）.  \n
real hack	: /n./   \n即crock. 这个词有时带有褒义. 参见hack. 
real operating system	: /n./   \n在使用这个词时, 说话者指的是他所习惯使用的那种操作系统. 例如, BSDophilic社区的人会认为System V不是一个real operating system, 常用Unix的用户会抱怨BSD不是一个real operating system, 而IBM员工则认为Unix不是real operating system. 可怜的MS-DOS被所有人认为不是real operating system. 参见holy wars, religious issues, proprietary, "Get a real computer!"等词. 
Real Programmer	: /n./   [间接来自"Real Men Don't Eat Quiche"一书] \n一种特殊的(超强的)黑客：对任何复杂的东西都满不在乎, 认为什么都很简单, 即便他/她的经验足够丰富, 他们看上去也是太过自负. 经典的real programmer喜欢在bare metal上编程并且十分在行, 能记住他所编程过的所有机器的运算代码, 认为高级编程语言都很弱, 他们往往使用编译器来编辑代码（因为他们认为全屏的编辑器是给弱者用的）. Real Programmer总是要把代码写得足够tense才满意, 他们从来不写注释或文档——"如果代码很难写, 那它就应该很难理解". Real Programmers能让机器完成一些说明书上都没有的功能；实际上, 他们只有做到这样才能高兴. 他们写的代码展现出的极度智慧令人惊惧. Real Programmers靠垃圾食品和咖啡度日, 在墙上挂着行式打印机的作品, 并且让其他的programmers很害怕——因为总有一天, 某人就要试图去理解这些Real Programmers的代码并且修改它们. 他们的继承者们往往觉得Real Programmers灭绝是一件Good Thing. Real Programmer一词之所以出名, 是因为1983年7月Ed Post寄给Datamation编辑的一封信, 题目是"Real Programmers don't use Pascal", 直到今天这封信仍然在网上流传. 
Real Soon Now	: /adv./   \n   [来自科幻迷主社区(SF's fanzine community), 因为Jerry Pournelle在BYTE的专栏而出名] \n   1.据某人所说, （某物）应当快要available（或修好、降价等等）了, 然而说话者却值得怀疑.  \n   2.当一个人的信仰、命运或其它义务允许他/她成功时（意为好运来了）.  \n   常简写为RSN. 对比copious free time.  \n
real time	:   \n   1.[术语]adj. 用来描述一个需要实时反应的应用程序（反应时间一般在毫秒或微秒级）. 典型的例子是化工厂的过程控制程序. 这样的应用程序经常要求特殊的操作系统（因为其它因素都要给反应时间让步）以及高速的硬件.  \n   2.[黑客用语]adv. 实时的, 指在他人的监视或等待下做事.  \n
real user	: /n./   \n   1. 商业用户. 为使用的电脑付钱的人.  \n   2. 非黑客. 使用电脑来进行其它科研项目、工程等等目的人, 而不是纯粹钻研计算机. 参见user. 作为学生的黑客同时也可能是真正的user. 参见luser.  \n
Real World	: /n./   \n   1.在被称作"Real World"的机构中, programming可能相当于FORTRAN、COBOL、RPG、IBM、DBASE等等. 在Real World中, 程序被用于商业如产生工资支票和发票, 并没有令人激动的应用.  \n   2.非程序员和与编程没有关系的活动所在的地点.  \n   3.以衬衫领带为标准着装、工作时间定为朝九晚五的古怪的地方.  \n   4.大学以外的任何地方. 含有贬义, 说某人进入了Real World相当于说他/她很失败. 同样值得关注的是, 在剑桥大学校园内, 有个被学生们画画取乐的灯柱上带有"REALITY CHECKPOINT"的标记——它标志着大学和真实世界的分界；在你跨越前请检查你对真实（reality）的理解. 这个笑话由于剑桥大学校园其实就是剑桥镇而更加有喜感.  \n参见fear and loathing, mundane, uninteresting.  \n
reality check	: /n./   \n   1.最简单的软件或硬件测试；相当于检查2+2是否得到4. 相当于smoke test的软件.  \n   2.让real user试用原型软件, 被称为reality check. 对比sanity check.  \n
reaper	: /n./   \n   一个GFR文件的prowler. 以这种方式被移除的文件就被称为reaped.  \n
rectangle slinger	: /n./ 见polygon pusher. 
recursion	: /n./  递归. 参见tail recursion. 
recursive acronym	:: /n./   \n   黑客传统（尤其在MIT）, 选择首字母缩写/简写, 幽默的指向自身或其它首字母缩写/简写. 经典的例子是两个MIT的编辑器, EINE（"EINE Is Not IMACS"）和ZWEI（"ZWEI Was EINE Initially"）. 更近一些, 有一个称为LIAR（Liar Imitates Apply Recursively）的编译器, 以及GNU表示"GNU's Not Unix!"——还有一个叫做CYGNUS的公司, 全称是"Gygnus, Your GNU Support". 参见mung, EMACS. 
Red Book	: /n./   \n1.对PostScript、PostScript Language Reference Manual、Adobe Systems(Addison-Wesley,1985)这三本标准参考资料之一的非正式称谓；类似的还有Green Book、Blue Book以及White Book（意义2）.  \n2.对于Smalltalk的三个参考资料（Smalltalk-80: The Addison-Wesley,1984；这个也与blue和green books相关）之一的非正式名称.  \n3.在1984年被CCITT第八次全会所发表的任意一个标准, 都被称为Red Book. 这些包括, X.400 email spec以及Group 1 through 4 fax standards.  \n4.Green Book（意义4）的新版本（因为它的颜色以及它被印在A4纸上）, 在美国它被称为"不配上架的丑陋的红色书(the Ugly Red Book That Won't Fit On The Shelf)", 在欧洲, 它被称为"the Ugly Red Book That's A Sensible Size".  \n5.美国国家安全局(NSA)的Trusted Network Interpretation, 伴随着Orange Book. 参见book titles.  \n
red wire	: /n./  [IBM] \n不研究硬件的程序员所安装的小段电线. 据说唯一比"给软件打补丁的硬件研究员"更危险的人就是拿着烙铁的softy.... 对比blue wire、yellow wire、purple wire. 
regexp	: /reg'eksp/ /n./  [Unix] (变体为'regex' 或 'reg-ex') \n1. 即正则表达式（regular experssion）, 一种通配符模式, 例如用在Unix工具grep, sed, awk中. 这些工具使用的规则与glob中描述的相似但是更加详尽. 对于本词典的目的来说, 了解regexps同样还允许补充的字符^就足够了；这样就能用[^A-Za-z]来识别任何非字母的符号.  \n2. regexp也是一个著名Public Domain的正则表达式处理程序包的名字, 它用portable C编写, 作者是Usenetter Henry Spencer.  \n
register dancing	: /n./  \n 很多老式的进程机制都严重缺少通用寄存器. 这对于编译器制作者们来说尤其是一个大问题, 因为他们生成的代码需要空间来存放表达式中间值等临时变量. 一些带有这个问题的设计, 如Intel 80x86, 的确有少量专用寄存器能用, 倘若进程状态的不良副作用能通过适当的方式予以解决的话：当专用寄存器用来保存中间值时, 要求执行一个精细的动作, 这个动作保存寄存器原来的值, 然后在专用寄存器的值需要被读取之前, 将原来的值恢复. 
rehi	:   [IRC, MUD] 意为"又见面了". 在channel hopping后回来时的问候语. 
reincarnation, cycle of	: /n./ 见cycle of reincarnation. 
reinvent the wheel	: /v./  设计或制作一个与现存工具相当的工具, 暗指这样做很愚蠢而且浪费时间. 这通常是一个可以接受的批评. 另一方面, 汽车不用木制滚轴, 并且有些种类的车轮要被反复发明多次才能制作正确. 第三, 发明车轮的人的确想提出与"带有轮偏置的梯形"等价的东西. 
religion of CHI	: /ki:/ /n./  [Case Western Reserve University]  \n又一个黑客的恶搞的宗教团体, 参见Church of the SubGenius, Discordianism. 在70年代中期, CWRU经典的"程序导论"课程在Algol上课, 学生练习是被打在卡片上然后在Univac 1108系统上用一个自制的CHI操作系统运行. 这个宗教团体没有信条, 只有一个仪式：每当礼拜者注意到电子表指向11:08时, 必须背诵"It is 11:08; ABS, ALPHABETIC, ARCSIN, ARCCOS, ARCTAN."这名话最后的五个词是Algol手册适当章节的前5个函数名；请注意发音/obz/和/ark'sin/, 并不是通常的/ahbz/和/ark'si:n/. 使用闹钟来提示11:08分是considered harmful的. 
religious issues	: /n./   \n提出后必将触发holy wars的问题, 比如"最好的操作系统是什么?"、"Heinlein如何?"、"新的Jargon File应当添加些啥?"见holy wars；参见theology, bigot. 
replicator	: /n./  \n 自我复制的构造；可以是有机体, 思想（见meme）, 程序（见quine, worm, wabbit, fork bomb和virus）, 细胞机器人的一个模式（见life意义1）, 或特指一个机器人或nanobot. 甚至有人声称Unix和C是一个极为成功的replicator的共生的两个部分；见Unix conspiracy. 
reply	: /n./ 见followup. 
restriction	: /n./   \n限制程序能力的bug或设计错误, 它的缺点如此明显以致于没人敢于将它描述为一个feature. 尤其用在marketroid类型的产品上, 通常用来迷惑一般的用户, 使用户觉得这是设计者有意为之, 或者是由于神秘的、难以解释的技术限制而产生的.  \n老资格黑客Joseph M. Newcomer建议提出restriction的数目时, 使用2的幂或2的幂减1. 如果列出一个107个项目的单子, 人人都能看出这是一个随机数——另一方面, 15或16个限制暗示的某种深层的原因（牵涉到二进制中的0-或1-based索引）并且你不会为它得到更少的flamage. 数目为10的整数倍的limits尤其显得可疑.  \n
retcon	: /ret'kon/  [retroactive continuity的简写, 来自网络新闻组rec.arts.comics] \n1./n./ 低俗小说中的一般场景（尤其是漫画或肥皂剧）, 指一个新的故事情节揭示了发生在之前故事中的事件, 通常留下"真相"（如此保持连续性）, 同时又完全改变了对这些真相的解释. 例如, 揭示出"Dallas"一整季的剧集都是一场梦, 就是一个retcon.  \n2./vt./ 写一个这样的故事或者虚构的对象.  \n这个词被收录进来的原因是, 它是黑客语言在一个与计算机完全无关领域的创新的例子. Retcon这个词也许会在comics爱好者中传播, 并在几年后失去它与黑客领域的联系；从这里开始, 它被记录在案.  \n
RETI	: /v./  与RTI同义. 
retrocomputing	: /ret'-roh-k*m-pyoo'ting/ /n./   \n指的是用过时的软硬件做的工具或应用, 尤其是当这些工作是用来恶作剧或恶搞、主要是为了hack value、并采用更"认真"的设计时. 也许分布最广的retrocomputing工具就是V7和其它早期Unix版本系统上的phch(6)或bcd(6)程序了, 它能够接受多达80个字符, 并用puched card编码显示相应的模式. 其它著名的retrocomputing黑客工具包括编程语言INTERCAL, 为Unix设计的一种JCL仿效的shell, 名为029的仿效打孔的编辑器, 以及多种精细的PDP-11硬件模拟器和RT-11 OS模拟器——主要是为了运行一种古老的、无源的Zork二进制代码.  \nRetrocomputingMusem（网址http://www.ccil.org/retro）中收录了一些比较优秀的retrocomputing程序. 
return from the dead	: /v./   \n较长时间离线之后重新获得对网络的访问. 对比person of no account. 
RFC	: /R-F-C/ /n./   \n在因特网以及Unix社区内, 已经被商业软件和免费软件长期使用的一系列已编号的因特网信息文本和标准之一. 其中最有影响力的一个大概是FRC-822(因特网邮件格式标准). 这些RFC之所以特别, 是由于它们是由技术专家主动提出的, 并且经过因特网的长期详细检验, 而不是由ANSI之类的机构正式发布的. 也正是由于这个原因, 即便被接受为标准, 它们仍然被称为RFC.  \nRFC产生的一向是来自实际、来自经验的, 并且是由个人或小团体创作的, 相比于ANSI或ISO之类的更加正式、由监管机构驱使的工作流程, RFC的这种工作流程具有很大优势. 其中明显的一处优势在于RFC"搞笑"(joke RFC)传统的兴盛；通常至少每年发布一次, 通常在四月一日. 比较有名的joke RFC包括527("ARPAWOCKY",R.Merryman,UCSD;22 June 1973),748("Telnet Randomly-Lose Option",Mark R. Crispin; 1 April 1978),以及1149("A  Standard for the Transmission of IP Datagrams on Avian Carriers", D. Waitzman, BBN STC; 1 April 1990). 第一个是Lewis Carroll的混合作品；第二个是对TCP-IP文档风格的恶搞；第三个是对标准文档的法律措辞的刻意扭曲, 将协议描述为通过信鸽来传递因特网数据包. 参见Infinite-Monkey Theorem.  \nRFC最引人注目的特点是它们的有效性——它们没有像一般的非正式标准那样难以理解, 也没有正式机构制作的标准中惯有的不准确特征, 并且RFC定义了一个真正世界范围的网络. 
RFE	: /R-F-E/ /n./   \n1.[术语] 请求得到加强（对比RFC） \n2.[来自"Radio Free Europe", Bellcore和Sun] 即Radio Free Ethernet, 一个为了通过以太网在Sun SPARC站点之间广播音频信号的系统（由Peter Langston发起）.  \n
rib site	: /n./   \n[类比backbone site] 通过即时应答的高速连接与一个backbone site相连的机器, 它作为一个地区分布节点, 提供的服务一般是面向大批的第三方的邮件和网络新闻流量. 对比leaf site, backbone site. 
rice box	: /n./  [来自业余无线电领域的俚语]  \n任何亚洲生产的商业电脑, 尤其是依照IBM PC-compatibal ISA或EISA-bus标准、基于80x86系统的机器. 
Right Thing	: /n./   \n必须使用、做或说的正确或适当的事情. 首字母常大写, 提到时也总是加重语气. 这个词的使用经常暗示着有理性的人可能会持否定意见. 例如："当遇到"mod a 0"时LISP应该采取的Right Thing是什么?是应当返回一个'a', 还是报一个除零错误呢?"与Wrong Thing相对. 
RL	: /n./  [MUD Community] \n真实生命. 例如"Firiss在RL中笑了", 指的是控制Firiss这个游戏人物的玩家笑了. 与VR反义. 
roach	: /vt./  [Bell实验室] \n摧毁, 尤其是对于数据结构. 硬件会被toasted或tried, 软件则被roached. 
robot	: /n./  [IRC, MUD] 一个程序模拟的IRC或MUD用户.  \n在IRC中, 这种robot一般提供一些有用的服务. 比如NickServ, 它的目的是阻止用户接受其它人已经在使用的nick；再如MsgServ, 它允许用户发送异步信息, 当接收信号有效时再传输. 当然也存在一种annoybots, 比如KissServ, 它除了向别人改善可爱的信息之外并没有其它用处.  \n在MUD上, 提供服务的robots相对较少；但是有些其它的robots, 比如Julia robot, 它活跃于1990-1991年, 在图灵实验中的表现抢眼, 能够像一个正常人一样维持一段10到15分钟的会话.  \n
robust	: /adj./   \n健壮性, 指系统处理异常输入和异常情形并从中恢复的能力. 距离bulltproof仅有一步. 带有优雅的含义, 而不只是细节上很用心. 对比smart, 与brittle相对. 
rococo	: /adj./   \n晚期baroque. 暗示一个程序已经变得过于fancy, 以致淹没了底层的设计. Baroque建筑和装饰形式盛行于17世纪中期的欧洲, 而晚期的、更极端的Baroque就被称为rococo. Alan Perlis曾说过："每个程序最终都会变成rococo, 然后是废柴". 对比critical mass. 
rogue	: /n./  [Unix] \n使用字符图形的类似"地下城与勇士"的游戏, 在BSD Unix系统下开发, 然后推广到其它Unix系统. 最初的BSD"curses(3)"显示屏处理包被Ken Arnold集成来支持rogue(6), 自那之后就成为Unix系统中最重要并且大量使用的应用类库. Nethack, Omega, Larn, 以及一大类的地下城游戏都是受到rogue(6)的启发而产生的. 参见nethack. 
room-temperature IQ	: /quant./  [IBM]  \n智商80或更低（一般室温是华氏72度, 摄氏22度）. 这个词用来描述luser的智力水平. 参见drool-proof paper. 在使用摄氏温度计的国家, 这个词更具侮辱性. 
root	: /n./  [Unix]  \n   1.superuser账户（用户名是root）, 它忽略允许位(permission bits), 在Unix系统中对应的账户编号是0. Avatar一词也如此使用.  \n   2.系统目录结构的顶层结点；一向是指root用户的主目录, 不过也可能是以倒置树的根的名字来命名. \n   3.扩展意义：在任意操作系统上, 具有特权的、由系统来维护的登录过程. 见root mode, go root, 参见wheel.  \n
root mode	: /n./   \n与wizard mode或wheel mode同义. 这些词通常用来描述系统(system)中的特权状态, 而不是操作系统(OS)中的. 
rot13	: /rot ther'teen/ /n.,v./  [来自usenet, "rotate alphabet 13 palces"]  \n简单的凯撒加密方法, 将明文字母替换成字母表中与它距离为13（向前或向后）的字母, 例如"The butler did it!"就变成了"Gurohgyre qvq vg!" 在usnet中大部分新闻的读写程序都包含了rot13特性. 文本被包装起来, 读者必须自己将其打开——例如, 对于一些可能会冒犯到部分读者的内容或者spoilers. Rot13与其它的rot(N)相比, 主要的一个优势在于它是自反的, 所以同样的代码既可用来加密, 也可用来解密. 
rotary debugger	: /n./  [Commodore]  \n对深夜和清晨时的调试会话来说很关键的设备. 主要是指hacker吃的食物. 具有蓝领工人的风格, 如腊肠、意大利香肠和垃圾食品. 见pizza, ANSI standard. 
round tape	: /n./   \n工业标准的绕在圆形卷轴上的1/2英寸磁带（7音轨或9音轨）. 见macrotape, 与square tape相对. 
RSN	: /R-S-N/ /adj./ 见Real Soon Now. 
RTBM	: /R-T-B-M/ /imp./  [Unix]  \nRTFM在黑客语言中的变体；扩展到意为"Read The Bloody Manual". RTBM经常是对一个newbie所提问题的第一个回答；第二个回答则升级为"RTFM". 
RTFAQ	: /R-T-F-A-Q/ /imp./  [Usenet: 对比RTFM]  \n即Read th FAQ!, 劝说某人应当在提问之前先阅读一下新闻组的FAQ list. 
RTFB	: /R-T-F-B/ /imp./  [Unix] \n即Read The F**king Binary. 当手边没有与问题相关文档和源码, 唯一能做的就是用编译器之类来直接分析汇编程序甚至是机器码的时候, 常用RTFB. "这个有漏洞的端口驱动程序没有源码?啊！我恨商业操作系统. 该进行RTFB了. " \n在各种RTF?类型的用语中, 当作为一个问题的回答时, "RTFB"是对于提问者来说贬义最轻的；这个RTFB表达的怒气主要是针对源码和文档的缺乏. 
RTFM	: /R-T-F-M/ /imp./  [Unix]  \n即Read The F**king Manual.  \n1.guru用这个回答来打发那些他们认为细碎或恼人的问题. 对比Don't do that, then!.  \n2.当表示自己不是随便提问的时候, 使用该词表示自己已经RTFM了. 与第一个意思不同的是, 这种用法较为礼貌. 参见FM, RTFAQ, RTFB, RTFS, RTM, 这些词都是从RTFM中变化而来, 对比UTSL. 
RTFS	: /R-T-F-S/  [Unix] \n1.即Read The Fucking Source. RTFM的变体, 当遇到的问题不是那么明显且文档解决不了（或根本没有文档）时使用. 对于更加棘手的问题, 见RTFB. 与RTFM不同, RTFS表达的不满通常不是针对提问者的, 而是针对那些没能提供有用文档的人.  \n2.即Read The Fucking Standard；只有当问题域（如语言或操作系统接口）已经实包含在某个正式发布的标准中时, 才能使用这个词. 这些标准文档（它们总是会做一些技术上没必要的折中, 总是会使用晦涩难懂的legalese式的语言, 总是要经过难以置信的冗长的官僚过程才能发布）的存在使得hacker们很不爽, 他们已经习惯了说明书中的歧义. 既然黑客们觉得标准文档既没必要又有漏洞, 所以RTFS这个词就表达了对标准文档及其读者的鄙视.  \n
RTI	: /R-T-I/ /interj./   \n"return from interrupt"的助词符, 在很多计算机中使用. 它的变体"RETI"被曾经的Z80黑客们发现（现在几乎没人给这些东西写汇编程序了）. 与"现在我在哪?"等价或用来结束一次题外话. 见pop和POPJ. 
RTM	: /R-T-M/  [Usenet: 即Read The Manual] \n1.相对RTFM的更礼貌的变体.  \n2.Robert T. Morris, 1988年一个影响较大的Internet蠕虫的作者（见Great Worm, the）；失足的hacker. Morris声称这个将Internet降服的蠕虫本来是一个没有恶意的实验, 只是编码失误导致的. 在他犯错的风头过去后, Morris在ITS上的用户名被人从原来的RTM改成了RTFM. 
RTS	: /R-T-S/ /imp./  \n 即Read The Screen. 主要的使用者是微机方面的hacker. hacker倾向于对suit说这个词, 而不愿向他们解释一个无比简单的问题. 尤其用于当suit居然没有注意到屏幕上弹出的"Press any key to continue"、并且希望知道程序为什么"啥也不做"时. 在特别需要时, 这个词也会被视作"RTFS". 
rude	: [WPI] /adj./   \n1.（指一个程序）写得不好.  \n2. 功能上较差, 例如一个由于无缘无故的随意的设计而难以使用的程序. 与cuspy相对.  \n3. 操纵一个共享资源, 但却不考虑其他用户, 以致产生问题. 例如, 改变了tty的模式却没有在退出时重置, 或保持自己占用视窗栈顶的视窗程序. 对比all-elbows.  \n
runes	: /pl.n./  \n 1.需要heavy wizardry或black art才能parse的东西：core dumps, JCL commands, APL, 或用你不知道怎么阅读的语言写成的代码. 虽然不如line noise那么难, 但也接近了. 对比casting the runs, Great Runes.  \n2.特殊的显示字符（例如, IBM PC上的半高字体）.  \n3.[borderline techspeak] Unicode多语言字符集包括的16位字符. 
runic	: /adj./  \n 与obscure同义.  VMS粉丝有时用Runix来指代Unix, Unix粉丝则回敬以将VMS解为Very Messy Syntax或Vachement Mauvais Syst'eme'（法国谚语, 超差劲的系统）. 
rusty iron	: /n./   \n同义于tired iron. 这被称为water MIPS的不可避免的命运. 
rusty memory	: /n./   \n基于氧化铁的磁介质的大容量存储器（尤其是磁带和Winchester硬盘之前的可移动磁盘, 用于washing machines. 对比donuts. 
rusty wire	: /n./  [Amateur Packet Radio]  \n非常喧闹的网络媒介, 传递的数据包容易受损. 当提到那些易于受所有变化莫测的RF噪音和微小传播条件影响的无线连接时, 总是用rusty wire这个词. 例如："你成功设计的新协议在一个特别的rusty wire上表现如何呢?"
S/N ratio	/n./  （也作"s/n ratio", "s:n ratio"）同义于signal-to-noise ratio. 多缩写为SNR. 
sacred	/adj./为某种东西专门准备的. 多形容一样事物, 若搞垮它则会影响到依赖它的东西. 如果一个程序中有注释"寄存器7对于中断处理来说是sacred", 则黑客就会知道如果程序的其它任何部分占用了寄存器7, 则对程序的影响是致命的. 
saga	/n./  [WPI] 一个关于N个人的、整洁的、但是虚构的故事. （译者注：让人联想到"鲜橙多", 只是"鲜橙多"不但是多角色的, 还是多角度的. ）
sagan	/say'gn/ /n./  [出自Carl Sagan的电视系列剧"Cosmos"；联想"billions and billions"] \n大量的某种东西, 相当于lot. "There's a sagan different ways to tweak EMACS." 意为"改进EMACS的方法有好多种. "
SAIL	/sayl/, not /S-A-I-L/ /n./  \n1. 即The Stanford Artificial Intelligence Lab. 对LISP早期的发展很重要的一个地点；与MIT AI Lab, BBN, CMU, XEROX PARC, 以及Unix community齐名, 是技术创新和黑客文化传统的主要发源地之一. （见{WAITS}）\n2. The Stanford Artificial Intelligence Language, 在SAIL(释义1)中使用的一种语言. 它是由Algol-60演化而来, 增加了协同功能以及一些新的数据类型, 目的是建立搜索树和相关列表. 
salescritter	/sayls'kri`tr/ /n./  黑客文化中对电脑销售员的鄙视. 黑客们常说一个二手车销售员与一个电脑销售员的区别在于前者知道自己在撒谎（有些版本的还加上了"而且前者会开车"）. 这个词反映了黑客们普遍相信salescritter们是自甘愚蠢的（毕竟, 如果他们聪明而且愿意用脑子, 那他们就会编程了）. Salesthing和salesdroid也是通用的词. 对比marketroid, suit, droid. 
salt	/n./  少量的近似随机的数据, 用在不需要太多规律性数据的地方；一个数据frob（释义1）. 例如, Unix的crypt(3)说明书上提到"salt串有4096种不同的方式来干扰DES算法". 
salt mines	: /n./  挤满了为了完成低劣的工程而长时间工作的程序员的地方, 这些工程也许在N年后才能有完成的希望. 因为缺少光照而得名. 对比playpen, sandbox. 
salt substrate	: /n./  [MIT] 集合名词, 指土豆条、椒盐饼干等小吃, 都含有氯化钠盐. 也作sodium substrate. 出自术语chip substrate, 指硅片, 上面有集成电路. 
same-day service	: /n./  讽刺性的词条, 描述过长的反应时间, 尤其是指MS-DOS系统调用（应该只需一秒钟的很少一部分就执行了）. 这样的反应时间是程序员编写非well-behaved程序的主要刺激之一. 参见PC-ism. 
samizdat	: /sahm-iz-daht/ /n./  [Russian, 字面意思是"自我发布的"（"self publishing"）] \n通过秘密渠道传播文档的进程. 最初是指那些在苏联被禁书籍的私藏复本；现在则扩展为任何非官方发布的文本资料, 尤其是罕见的、过时的、或从未正式发布的计算机文档. 当网络带宽足够、又有高质量的激光打印机时, Samizdat显然更容易产生. 请注意samizdat只能在特定条件下、为了得到通过正常方式无法得到的文档时才能使用, 但是如果这个文档可以通过正常渠道获得、且未经授权的复制是侵犯版权, 那么就不能使用samizdat. 见Lions Book. 
samurai	: /n./  从事合法cracking工作的黑客. 在1991年, 主流媒体报道了samurai的存在, 他们大都是聪明的青少年, 有自己的微机；他们用samurai（意为日本武士）和Willianm Gibson的小说cyberpunk中的net cowboys来标榜自己. 他们声称自己对雇主忠心, 鄙视黑客罪犯、认为他们比自己低级而且触犯了黑客的道德；有人引用了Miyamoto Musashi的Book of Five Rings, 古老武士信条, 来支持自己的原则. 参见sneaker, Stupids, social engineering, cracker, hacker ethic, 以及dark-side hacker. 
sandbender	: /n./  [IBM] 从事硅板印刷和芯片物理设计的人. 对比ironmaonger, polygon pusher. 
sandbox	: /n./  \n1.（也作sandbox, the）指代软件公司和计算机公司的研发部门（在这些地方, 黑客们往往具有商业背景）. 半嘲笑的, 但是反映了一个事实, 那就是研究是一种创造性游戏. 对比playpen. \n2. 与link form同义. 
sanity check	: /n./  \n1. 检查一段代码（或网络邮件等等其它任何东西）中包含的低级错误. 暗指这种检查是为了确定作者在写代码的时候是清醒的；例如, 若一个依赖特定公式的科学软件给出了意外的结果时, 就要首先检查对这个公式的编码中是否出现了嵌套括号错误, 然后再检查更为复杂的I/O或数据控制过程, 更不用说算法本身了. 对比reality check. \n2. 运行时间测试, 使输入生效或保证程序没有在内部崩溃（产生不连续的值或状态）. 
Saturday-night special	: /n./  [出自警察俚语, 指便宜的手枪] 一个quick-and-dirty程序或特征, 在业余时间、规定期限前完成, 通常是用来应对salescritter的压力. 这样的hack是很不可信的, 但是大家都想在一个产品刚发布的时候去试试身手, 哪怕没有足够的观察了解. 
say	: /vt./  \n1. 向终端输入. 倾向于指一个newline-终端命令（一个句子）. \n2. 计算机也可以对人"说话", 即使它没有语音合成器, 这是指计算机向终端输出, 来应对用户的命令. 黑客们奇怪的发现这个用法与mundane相混淆. 
scag	: /vt./  毁掉磁盘中的数据, 通过搞垮文件系统或者损坏媒介. 对比scrog, roach. 
scanno	: /skan'oh/ /n./  扫描仪出错而导致的文件错误, 类似于打印错误或thinko. 
schroedinbug	: /shroh'din-buhg/ /n./  [MIT: 出自"薛定谔的猫", 量子理论的一个思维实验] \n程序中的设计或实现的错误, 一直正常运行, 直到出现了一个阅读源码或以特殊方式使用该程序的人, 他/她发现程序中存在错误而且这个错误应该会导致程序从来不应该正常运行, 而在这时, 程序才出错停止, 直到有人修复这个错误. 虽然这听起来很不可能, 但是这的确会发生；有些程序已经多年隐藏着潜在的shroedinbug. 对比heisenbug, Bohr bug, mandelbug. 
science-fiction fandom	:: /n./  与hackerdom相似的自发形成的一种亚文化；大部分黑客都超喜欢科幻小说, 并且很多人参加cons（科幻小说大会）或者影迷活动, 比如复古协会等. 一些黑客用语来自于科幻影迷；见defenestration, great-wall, cyberpunk, h, ha ha only serious, IMHO, mundane, neep-neep, Real Soon Now. 另外, 有些词是来自于科幻小说, 如cowboy, cyberspace, de-rezz, go flatline, ice, phage, virus, wetware, wirehead, worm等. 
scram switch	: /n./  [来自核能工业] 一个紧急断电开关（见Big Red Switch）, 尤其是位于方便疏散人员按到的地方的这种开关. 一般来讲, 这种开关是不能轻易乱按的；它们经常会初始化昂贵的设备, 并且安装在dinosaur pen中, 当出现电气火灾或者不走运的field servoid正在进行的Easter egging需要120伏电压时, 就要使用scram switch了. 参见molly-guard, TMRC. 
scratch	:  \n1.[出自scratchpad] adj. 描述一种数据结构或存储媒介, 它们附在机器上, 用来测试或临时使用；这种东西一般可以被随意处理（scribble）, 而不会造成损失. 这个词一般用在组合词中, 如scratch memory, scratch register, scratch disk, scratch tape, scratch volume. 参见scratch monkey. \n2.[最初来自IBM] vt. 删除, 比如在文件中的操作. 
scratch monkey	: /n./  "在测试或重置前记得先用一个scratch monkey"（"Bdfore testing or reconfiguring always mount a scratch monkey"）, 这是一个谚语, 建议别人在处理不可替代的数据或设备时要小心. 该词指的是, 在处理珍贵资源或数据的时候, 为了避免它损毁, 最好先使用一个不怕损坏的（scratch）替代品. 
scream and die	: /v./ 与cough and die同义, 但是意味着在程序崩溃前, 错误信息打印或显示出来了. 
screaming tty	: /n./  [Unix] 操作系统中的一个终端, 它不断的显示随机的字符. 这种情况发生时, 一般是终端未连接或连接了一个断掉的但是仍然能登录的终端；配置错误, 实现错误, 或运气不好的话, 终端就可能会screaming. 对于一个普通的Unix系统, 一两次screaming tty可能会严重损害系统运行；出现的乱七八糟的字符会被当成用户名/密码对, 并且系统会对其进行登录检验. 为了阻止蛮力攻击, Unix密码加密算法被设计成需要很大计算量, 所以, 即使这些误认为的登录都没有成功, 也会消耗大量的资源. 
screw	: /n./  [MIT] 一个程序失败, 通常在软件中. 尤其用于指用户可见的由于bug或失效引起的功能失常. 
screwage	: /skroo'*j/ /n./  类似lossage但是意味着失败的原因在于设计中的失误而不是简单的不足或小bug. 
scribble	: /n./  以一种随机、的无意的具有破坏性的方式修改一个数据结构. 同义于trash；对比mung, 指有意识的破坏, 以及mangle, 指更猛烈和致使的破坏. 
scrog	: /skrog/ /vt./  [Bell Labs] 破坏一个数据结构. 也作skrog, 来自于连环漫画"The Wizard of Id". 对比scag；可能这两个词有所关联. 与scribble, mangle同义. 
scrool	: /skrool/ /n./  [出自1984年休斯敦的先驱式的圆桌聊天系统；可能来源于对scroll的打字错误] \n对于旧信息的日志记录, 可用于晚些时候查看或重新同步对话. 这个词本来是scrool monster, 因为早期的圆桌会议软件有一个bug, 会消除用户终端上全部8K大小的scrool. 
scrozzle	: /skroz'l/ /vt./  指一个自我调整的代码段运行失常并且毁掉了运行的程序或者关键数据. 
scruffies	: /n./  见neats vs. scruffies. 
SCSI	: /n./  [即Small Computer System Interface]一个不依赖总线的标准, 用于计算机和智能设备之间的系统级接口. 发音类似sexy, sissy或scuzzy, 一般用scuzzy的发音. 
ScumOS	: /skuhm'os/ or /skuhm'O-S/ /n./  对SunOS的蔑称, SunOS是一个支持Sun Microsystem's Unix workstation（参见sun-stools）的BSDUnix 变体. 对比AIDS, Macintrash, Nominal Semidestructor, Open Death Trap, HP-SUX. 不论这个词啥意思, Sun公司是由黑客建立的, 并且仍然与黑客界享有良好的关系；ScumOS通常用来夸张, 而非真正的诋毁. 
search-and-destroy mode	: /n./  指文本编辑器中的非互动的查找-替换功能, 这个词暗指不谨慎挑选的匹配模式会导致infinite的破坏. 
second-system effect	: /n./  （有时为了好听, 也作second-system syndrom）在一个相对较小的、优雅而且成功的系统的基础上设计新的系统时, 设计者倾向于设计出一个elephantine的、特征过多的庞大臃肿的系统. 这个词首次出现是在Fred Brooks的经典作品《神秘人月》中. 它描述了从IBM 70xx系列机器的小巧、简单的操作系统, 向360系列机器的OS/360系统的跳跃. 相似的作用也可能发生在一个演化的系统上；见Brooks's Law, creeping elegance, creeping featurism. 参见Multics, OS/2, X, software bloat. \n黑客词典（Jargon Lexicon）的版本变化也是一个second-system effect的实例, 相比于早先版本, 后面的版本膨胀得失去了控制. 
secondary damage	: /n./  一个fandango on core所导致的指针毁坏可能会引发一个致命错误. 然而, 这个fandango又可能是由一个更早的fandango导致的, 所以我们无法直接分析出最终的那个错误是如何发生的. 例如, "这个数据结构坏掉了, 但它是一个secondary damage". \nSecondary damage一词可以扩展为Nth-level damage, 意思是经过N个连环的fandango on core而最终导致的错误. 有记录的最极端的案例是一个7级的damage（seventh-level damage）, 某牛人使用"adb", 经过17个小时的不懈的grovel, 终于挖掘出位于问题源头的那个bug. 完成这个超人任务的大牛黑客甚至得到了同事们颁给他的一个奖. 
security through obscurity	:  也作security by obscurity. \n这个词指的是操作系统销售商对付安全漏洞的方式——忽视它们、不记录任何已知的漏洞或它们的算法, 并且相信不会有人发现这些漏洞、即使有人发现也不会有人利用这些漏洞. 这种"策略"从来没有长时间有效过, 而且有时还会引发一股世界级的崩溃, 比如1988年的RTM蠕虫（见Great Worm, the）, 但是一但危机爆发所引起的短暂恐慌有所停歇, 大部分的销售商们就会翻个身继续睡（仍旧不关心系统漏洞）. 毕竟, 修复这些漏洞会消耗那些用来改进界面的资源, 而改进界面显然更受市场欢迎——另外, 如果他们真的着手修复安全漏洞, 那么用户们就会觉得自己有权利获得一个具有比瑞士奶酪更少漏洞的系统, 那么我们这些黑客又将如何发挥呢?
SED	: /S-E-D/ /n./  [来自Light-Emitting Diode] 产生烟雾的二极管. 输掉战争的froide. 参见LER. 
segfault	: /n.,vi./ 同义于segment, segmentation fault. 
seggie	: /seg'ee/ /n./   [Unix] 即segmentation fault. 
segment	: /seg'ment/ /vi./  \n经历一次segmentation fault. 令人迷惑的是, 这个词听起来更像是名词而不是其主要的动词意义；这是因为它实际上是一个简写的名词被动词化的形式. 
segmentation fault	: /n./  [Unix] \n1. 一个程序错误, 指运行的程序试图访问未分配给它的内存, 于是因为强行访问错误而遭遇发生core dump. \n2. 神游, 失去逻辑. 也指当神智不清时的大声叫嚷. 
segv	: /seg'vee/ /n.,vi./  Segmentation fault的又一个同义词. （实际上是一个segmentation voilation）
self-reference	: /n./ 见self-reference. （其意不言而喻, 编者很幽默的说）
selvage	: /sel'v*j/ /n./  [来自sewing和weaving] 见chad释义1.
semi	: /se'mee/ or /se'mi:/  \n1.分号semicolon的简写. \n2.作为前缀, 表示在"很大程度上", 比如semi-immediately, semi-seriously. 参见infinite. 
semi-infinite	: /n./  见infinite. 
senior bit	: /n./ [IBM] 同义于meta bit. 
server	: /n./  Daemon的一种, 为请求者提供服务, 它经常运行在非服务器的计算机上. 这个词在互联网上很流行, 与之类似的词还胡web server, name server, domain server, news server, fnger server等等. 
SEX	: /seks/  [Sun Users' Group & elsewhere] /n./ \n1.软件交换, 即Software EXchange. 这是在几亿年前由蓝藻"创造"的一种技术, 用来加快它们当时极其缓慢的进化速度. 现在, SEX指黑客之前的软件交换, 总体上说, 这是一个好事, 但是不加保护的SEX却会传播virus. 参见public directory. \n2.弗洛伊德式的助记法, 表示Sign EXtend, 是PDP-11以及很多其它体系中含有的一条机器指令. 
sex changer	: /n./ 同义于gender mender. 
shambolic link	: /sham-bol'ik link/ /n./  指一个Unix标志连接, 尤其是当它莫名其妙的并不指向任何文件、或指向文件系统中某个诡异的位置时. 
shar file	: /shar' fi:l/ /n./ 同义于sharchive. 
sharchive	: /shar'ki:v/ /n./  [Unix和Usenet; 来自/bin/sh archive] \n一个或多个文件的集合经过flatten之后的表示形式, 它具有一个独特的性质, 那就是只要把sharchive交给一个标准Unix的shell, 它就能恢复为flatten之前的形式；因此, 任何使用Unix的人都能处理sharchive, 并且不必使用特殊的解包软件. Sharchive的另一个有趣的特点是它主要是通过shell脚本来产生的；于是, 产生sharchive的脚本可以生成自解包的脚本. 而sharchive缺陷的一面是它们滋生Trojan horse, 并且对于非Unix的系统, sharchive不易处理；sharchive可以自由使用shell特性, 也是一个潜在的隐患. Sharchive文件通常也被命名为"产生sharchive的程序名 + shar files"的形式. 
Share and enjoy!	: /imp./  \n1.通常出现在软件发布公告和README文件的末尾, 表示忠于"自由信息共享"的黑客准则. \n2.Sirius Cybernetics Corporation的口号, 该公司是Douglas Adams的作品Hitch Hiker's Guide to the Galaxy中出现的. 这个句子的讽刺性吸引了自由软件的黑客. 
shareware	: /sheir'weir/ /n./  一种freeware, 作者要收取一些费用, 通常是在附带的文档或软件本身的声明中. 这种付费可能会、也可能不会带来更多的软件支持或功能. 参见careware, charityware, crippleware, FRS, guiltware, postcardware和-ware；对比payware. 
shelfware	: /shelf'weir/ /n./  因为一时突发奇想（指个人用户）、根据政策（指公司或政府机构）而购买的软件, 这些软件实际上并没有具体的用处. 因此, shelfware一般都会长年搁置在某个架子上. 
shell	: [orig. {{Multics}} /n./  [技术用语, 由于Unix而被广泛传播]\n1.用来向操作系统传递指令的命令解释器；之所以叫它shell是因为它是操作系统与外界交互的部分. \n2.更一般的, shell指任何与一个特定资源或server交互的接口程序；这里, shell通常的用法是"a shell around + 某物". 这种程序也被称作wrapper. \n3.手动创建或由其它程序（例如语法分析器）创建的skeleton程序, 它提供必要的incantation来建立任务及其控制流（driver一词有时也用作此意）. 用户则需要填充代码来执行实际的工作. Shell的这个用法常见于AI和微软Windows领域中, 令Unix黑客们难以理解. 
shell out	: /n./  [Unix] 从一个程序（例如mailer或editor）内部产生一个交互的子shell. 
shift left (or right) logical	:  [出自计算机的指令集]\n1.将自己移向左边（右边）. 离开阻挡的位置. \n2.用法带有祈使语气. 通常省掉logical, 或者用left shift而不是shift left. 有时称作LSH, 来自PDP-10指令集. 见Programmer's Cheer. 
shim	: /n./  插入的一小段数据, 用来满足内存对齐或其它寻址属性. 例如, PDP-11Unix连接器, 在split I&D(instructions and data)模式下, 将一段两字节的shim插入到数据空间的位置0处, 以使其它数据对象都无法放到地址0处（可以避免与C的空指针相混淆）. 参见loose bytes. 
shitogram	: /shit'oh-gram/ /n./  一段非常讨厌的邮件. 对比nastygram, flame. 
short card	: /n./  半长的IBM XT扩展卡或适配器, 可以插入到标准机箱右侧后部的两个短槽内（塞到软盘驱动器后面）. 参见tall card. 
shotgun debugging	: /n./  与Easter egging等价的软件；对软件做出一些没有目的的修改, 希望bug会受到影响而消失. 这几乎从未成功过, 而且通常会引入更多的bug. 
shovelware	: /shuh'v*l-weir`/ /n./  在软件通过CD-ROM或卡带发行时, 为了填补软件写到存储介质中之后的空余空间, 会将其它软件填入进去, 但实际上用来填充的软件与本来想要发行的软件没有关系. 
showstopper	: /n./  一个硬件或软件bug（尤指软件的）, 使得一个应用在完全失效；这样的bug必须被修复, 否则开发工作无法进行. 这个词本来用在戏剧中, 指非常棒的东西, 但在此处的意义却与原意相反. 
shriek	: /n./  见excl. 偶尔会有CMU的人用这个词, 在APL粉丝中广泛应用, 尤其是分类理论家. 
Shub-Internet	: /shuhb' in't*r-net/ /n./  [MUD: 出自H.P.Lovecraft作品中幻想出的邪神Shub-Niggurath, 一只拥有一千个后代的黑山羊] \n将互联网形象化的残酷产物, 包含千万进程怪兽、字符贪吃者等等怪物；互联网被形象化成为一个遍布触手的难看的怪物, 称为Shub-Internet. 这个邪恶怪物的目的就是捣毁所有的网络应用. 当用户遇到网络、FTP或TELNET问题时, 往往会诅咒Shub-Internet. 但据说这个可怕的名字不能被大声说出来, 因为重复它三遍就会使这个怪物苏醒, 它的巢穴位于五角大楼之下的深处. 
sidecar	: /n./  \n1.同义于slap on the side. \n2.IBM PC的适应箱（compatibility box）, 可以拴在一台Amiga的侧面. 这个sidecar由Commodore设计和生产, 完全打破了IBM公司的设计准则. 3.更一般的, sidecar指那些可以连接在Amiga 500（或迟些的600和1200）侧面的扩展槽中的各种设备, 它包括一个硬件驱动控制器、一个硬件驱动, 以及附加的存储. 
SIG	: /sig/ /n./  （SIG也可以用作前缀, 构成组合词）一些特殊兴趣小组, 其工作分别属于几个技术领域之一, 由Association for computing Machinery赞助；著名的几个小组包括SIGPLAN(the Special Interest Group on Programming Languages), SIGARCH(the Special Interest Group for Computer Architecture)和SIGGRAPH(the Special Interest Group for Computer Graphics). 黑客们, 不出意外的, 都喜欢把这套命名规范用在较为不正式的组织上, 比如SIGBEER(在ACM会议上)和SIGFOOD(在University of Illinous). 
sig block	: /sig blok/ /n./  [Unix] signature的简写, 用来特指电子签名, 在大部分Unix的邮件和消息发布软件中, 都会对发出的邮件和消息附加一个电子签名. 
sig quote	: /sig kwoht/ /n./  [Usenet] 格言、引语、谚语、笑话, 或口号, 嵌入到sig block中, 目的是传递签名主人的一些哲学立场、安抚别人的怨恨, 或表达幽默. 如"别紧张, 这只是一些1和0而已". 
sig virus	: /n./  嵌入在一个sig block之中的寄生的meme. 在1991年晚些时候, Usenet上出现了一股meme plague, 或者说是这些东西的流行. 
signal-to-noise ratio	: [from analog electronics] /n./  [出自模拟电子学] 这个组合词的含义由几个词简单连接而成. Signal指的是由传播媒介携带的有用信息, noise指的是该媒介上的其它东西. 因此, 低的signal-to-noise ratio表示这个有问题的媒介已经不值得我们关注了. 这个想象的比例的实际数据从来没有真正出现过. 这个词通常在flame war时用在Usenet新闻组中. 对比bandwidth. 参见coefficient of X, lost in the noise. 
silicon	: /n./  硬件, 尤其是IC或基于微处理器的计算机系统（对比iron）. 与software相对. 参见sandbender. 
silly walk	: /vi./  [出自Monty Python的Flying Circus]\n1.为了完成一项任务而需要进行的荒谬的过程. 类似grovel, 但是更加random和幽默. 例如"为了找到匹配文件, 我不得不silly-walk半个/sur文件夹. "\n2.同义于fandango on core. 
silo	: /n./  在RS-232线路卡中的一个先进先出的字符缓冲区. 
Silver Book	: /n./  Jensen和Wirth编写的、臭名昭著的"Pascal User Manual and Report", 因为广泛传播的1978年的第二版是银色封皮而得名. 见book titles, Pascal. 
since time T equals minus infinity	: /adv./  很长时间以前；从某人能够记得开始. 通常省略time. 参见time T；对比epoch. 
sitename	: /si:t'naym/ /n./  [Unix/Internet] \n一个计算机系统的特有的电子名称, 用来在UUCPmail, Usenet, 或其它电子信息交换形式中代表该系统的身份. 黑客们对sitename的兴趣来自于它们展现出的创造性和幽默感. 解析一个sitename与解析一个无用的执照牌子很像；需要从思想上去解开它, 允许单字符、长度限制以及缺失空格. 黑客们鄙视那些空洞的、听上去你机构名称的sitename, 而倾向于使用有力的、幽默的并且聪明的新造词（除非这个sitename属于一个组织的官方公共门户机器, 这时使用该组织的名称或简称一般是合适的）. 神话传说、动画形象、动物名称, 以及与科幻(SF)或幻想文学(fantasy literature)大概是sitename命名的主流来源（排名前五, 降序排列）. 参见network address. 
skrog	: /v./  同义于scrog. 
skulker	: /n./ 同义于prowler. 
slab	: [Apple]  \n1./n./ 一条由同样颜色的像素构成的水平的连续的线. \n2./vi./ 在输出设备上画一个平板. Apple的QuickDraw, 像大部分其它专业级的图像系统, 并不使用Bresenham的算法来产生多边形和线, 而是通过连续地为屏幕上每个扫描线计算slab points、然后再反映到实际的图像像素中去. 
slack	: /n./  \n1.为一个磁盘文件分配的空间, 但并不是实际用来存储有用信息的那些空间. 等价的术语是internal fragmentation. 反义词是hole. \n2.在Church of th SubGenius中, 指一种神秘的物质或价值, 它是人类幸福的先决条件. \n因为在Unix中, 除了最后一个分区或扇区存在不可避免的浪费外, 文件都是密集存储的, 所以可以说Unix没有slack. 见ha ha only serious. 
slap on the side	: /n./  （也被称为sidecar, 或简称为SOTS. ）电脑生产商销售的一种外部扩展硬件（例如, 为Amiga 500/1000系列机和IBM设计的Commodore）. 有多种SOTS是提供必需品的, 如存储器、驱动控制器以及传统扩展槽. 
slash	: /n./  斜线'/'. 见ASCII可找到其它同义词. 
sleep	: /vi./  \n1.休眠, 指多任务系统中, 一个进程暂时不提供服务, 直到某些唤醒条件得到满足或者休眠时间结束等. \n2.与block用法十分相似；同样胜于sleep on, 与block on同义. 意思是批说话人放弃对某一资源的请求, 直到某个外部条件被满足. 
slim	: /n./ 一个小的、演化的改变, 例如对代码等. 
slop	: /n./  \n1.单方面的fudge factor, 那就是一定的容忍度, 但是仅面向两个方向之一. 例如你需要一根10米长的线, 但没有测量工具, 不过你很清楚宁长勿短, 因为如果太长还可以再裁短, 但是短了哪怕一点点就不能再补回去了. 当涉及不连续的量时, 常引入slop来避免fencepost error. \n2.编译器产生的额外代码在通过hand-hacking产生的等价的汇编代码中所占的比例；也就是说, 因为没有手动去做而失去的空间或者时间. 这个数字通常用来衡量编译器的质量；slop低于5%的最好, 10%也是可以接受的. 现代的编译技术, 尤其是在RISC机器上, 编译器的slop可能实际上是负值；也就是说, 机器产生的代码比人手动生成的更好. 这也是汇编编程不再普遍的原因之一. 
slopsucker	: /slop'suhk-r/ /n./  最低权限的任务, 它等待其它所有任务都已经得到了足够的资源后, 才能执行. 也就是说, 只有当机器没有其它任务时, 才能让这个低权限的任务占用. 这也被称为hangry puppy或bottom feeder. 对比background. 
slurp	: /vt./  先将一个大数据文件全部读入core, 然后再在上面工作. 与之相对的策略是, 每次读一小片数据, 处理之, 然后再读下一片. 参见sponge. 
smart	: /adj./  指一个程序在一个复杂多变的环境中能做到Right Thing. Smart和intelligent有一定的区别（见AI-complete）. 对比robust（smart的程序也可能是brittle的）. 
smart terminal	: /n./  \n1.一种终端, 它有足够的计算能力, 可以提供图像或者为它联系的计算机减轻一些处理代价. 工作站和个人电脑的发展使得smart terminal渐渐失去了存在的必要, 但是这个词有个用法还在使用, 比如"act like a smart terminal"用来描述工作站或PC的表现, 它们表现优异是因为程序在执行时可以完全不用远程server的存储, 只用本地设备作为显示. \n2.拥有可寻址的游标的终端；相对于glass tty. 现在, 只有可寻址游标, 而没有上面释义1中描述的特点的终端, 则被称谓dumb terminal. \n另外, smart的性质并不是死板的, 而是具有弹性的、可以训练的. 不然, 一个系统或终端处理不了预料之外的事情, 也不能称为smart. 弹性和可编程性, 才是真的smart. Rob Pike（blit terminal的创始人）说过, "A smart terminal is not a smart*ass* terminal, but rather a terminal you can educat." 对比hook. 
smash case	: /vi./  失去或抹去文本输入中的大小写区别. MS-DOS就会对用户创建的文件名称自动进行smash case. 对比fold case. 
smash the stack	: /n./  [C编程] 通过超出本地序列或其它数据结构的写操作, 来摧毁操作栈. Smash the stack的代码能导致程序从预定流程中跳到一个随机的地址, 从而引发一些最为诡异的数据依赖bug（data-dependent bug）. 该词的变体包括trash the stack, scribble the stack, mangle the stack；没有mung the stack这种用法, 因为这种操作从来不是有意的. 见spam；参见sliasing bug, fandango on core, memory leak, memory smash, precedence lossage, overrun screw. 
smiley	: /n./ 见emoticon. 
smoke	: /vi./  \n1.crash或爆炸, 通常是惊人的. 可用于硬件（这时smoke描述一个实际的物理现象）, 也可用于软件（这时就不会真的冒烟了）.\n2.指速度快得很明显. 对比magic smoke. 
smoke and mirrors	: /n./  市场营销的欺骗手段. 利用伪造的demo和偏向的benchmark, 参见MIPS, machoflops. 这个短语因专栏作家Jimmy Breslin而流行, 它据说是来自于游乐场用语. 参见stealth manager. 
smoke test	: /n./ \n1.在电子设备维修或重置之后的基本形式的检查, 其中包括供电、检查火花、烟或其它基本功能失效的明显标志. 见magic smoke. \n2.扩展意义, 在软件生产或做关键改动之后的第一次运行. 参见并对比reality check. \n在印刷和排字工人中, smoke test也被用作近似的意义：当新的字形被刻出来时, 要进行一个smoke test（将这个字放在蜡烛的烟中, 然后将其压到纸上）被用来李伟朴新的印模. 
smoking clover	: /n./  [ITS] 来自Bill Gosper的display hack. 在AOS模式下, 在一个彩色显示器上画很多相交线, 这些线都汇聚于屏幕中间的一点；线的其它端点都位于一个大正方形四边上, 以一个像素为距. 然后不断旋转, 这样就形成了一个彩虹色的、闪烁的的四叶的三叶草. Gosper开玩笑说要将这个图形隐藏起来还让FDA（美国食品药品监督局）发现, 以免这个图片能致幻的特点使它被FDA禁掉. 
SMOP	: /S-M-O-P/ /n./  [即Smple(or Small) Matter of Programming]\n1.一段代码, 还没有写, 就已经被预料到长度远比其复杂度要高. 用来指一个程序显然能写出来, 但是没有必要浪费精力去写. 也被用来讽刺性地指出一个难题能被一个程序简单的解决；讽刺意义在于, 这样的程序明显要花大量的工作才能完成. \n2.关于一个程序的建议, 提出者可以随便提出, 但是却需要编程人员花大把精力去实现. 这时, 受害者就会用SMOP来讽刺建议者. 
smurf	: /smerf/ /n./  [来自Usenet上的新闻组soc.motss, 与一些恶心、愚蠢的卡通人物相关] \n指一个这样的新闻组, 它的风格是不尊敬、愚蠢和可爱. 与很多其它黑客用语一样, 这个词是褒是贬取决于使用它的人. 一般来说, 如果你没有事先就讽刺性地用smurf来标榜自己, 那么别人将这个词用在你身上就不会让您高兴. 对比old fart. 
SNAFU principle	: /sna'foo prin'si-pl/ /n./  [来自二战时军队中的一个缩略语, "Situation Normal, All Fucked Up"] \n"真正的交流只能在平级人员之间才会发生, 因为下级为了得到褒奖, 多半会向上级汇报好听的假消息, 而不是告知实情. "——这是Discordianism的核心信条, 常被黑客们用来解释为什么权利等级会那么可靠地、系统地崩溃. SNAFU原则的效用就是, 决策制定者们会逐渐脱离现实. 具体来说, 一个实际上非常严重的情况在逐级向上汇报的过程中, 会被逐步弱化和美化, 甚至到了顶级时, 会被认为是一个非常完美而且成功的事件. 
snail	: /vt./  即snail-mail. 
snail-mail	: /n./  纸质邮件, 相对于电子的. 有时也作SnailMail. 某人的通讯地址也就是一个"snail地址". 从早先的新造词"USnail"(来自"U.S. Mail")演化而来. 少数时候也作P-mail, 出自paper mail或physical mail. 与email相对. 
snap	: /v./  将指针的指针换成一个直接的指针；将原来的地址换成该地址处所保存的地址. 比如你给主机打电话, 让接线员帮你转到你想要的分机, 这时接线员会先告诉你那个分机的号码, 再给你接通, 目的就是希望你下次打电话时直接snap your pointer, 也就是不用经过接线员了. 见chase pointers. 
snarf	: /snarf/ /vt./ \n1. 抢(grab), 尤其是针对大的文档, 目的是不经作者的允许就使用之. 参见BLT. \n2. [Unix community] 从网络上获取一个或一些文件. 参见blast. 这个词在上世纪六十年代晚期时是主流词汇, 意思是"狼吞虎咽". 这层含义在现在的用法中仍然存在. \n3. 获得, 指没有考虑法律因素或礼貌性, 但并不是偷窃. \n4. 同义于slurp. \n5. [GEnie] 喷出食物或programming fluid, 原因是在错误的时间发笑. 
snarf & barf	: /snarf'n-barf`/ /n./  处于一个WIMP environment中, 将一个区域的文本取出然后填充到另一个区域（或同一个区域）, 以避免重复输入一个命令行. 
snarf down	: /v./  基本同snarf, 暗指snarf之后吸收、消化、理解. "我要snarf down最新版本的nethack用户指南——有段日子没整了, 不知道最近有什么新东西没. "
snark	: /n./  [Lewis Carroll, 出自Michigan Terminal System]\n1. 系统失效. 当用户进程崩溃时, 操作者就会得到一条消息"Help, Help, Snark in MTS!". \n2. 更一般地, 计算机上任何无法解释或有威胁的事件（尤其是如果该事件可能是boojum）. 如果一个事件或日志文件可能暗示着对系统安全的破坏时, 常用snark来代指它. 见snivitsz. \n3. Snark.thysus.com在Unix系统下的名称, 它是Jargon File版本2.0之后的主页. 
sneaker	: /n./  被雇佣来侵入一个地点以检测其安全性的人；类同tiger team. 对比samurai. 
sneakernet	: /snee'ker-net/ /n./  通过将磁带、磁盘或其它介质从一个机器转移到另一个, 来实现电子信息的传递, 这个词带有讽刺意味. 也作Tennis-Net, Armpit-Net, Floppy-Net或Shoenet. 
sniff	: /v.,n./ 同义于poll. 
snivitz	: /sniv'itz/ /n./  硬件或软件上的小问题；不明原因的暂时的小问题（不如snark严重）. 对比glitch. 
SO	: /S-O/ /n./  \n1. 也作'S.O.', 是Significant Other的缩写, 几乎从不用这个完整的形式. 用来指代某人的主要关系, 尤其是与某人未婚同居. 见MOTAS, MOTOS, MOTSS. \n2. [专业术语] ASCII码中的Shift Out控制字符（Control-N, 0001110）. 
social engineering	: /n./  这个词被cracker和samurai们用来指代一类cracking技术, 这类技术依靠的是wetware漏洞、而不是软件中的漏洞；该类技术的目标是诱骗别人泄漏出密码或其它影响目标系统安全的信息. 常用的欺骗手段是装作某个急需解决突发问题的工程师之类, 给掌握关键信息的人打电话求救. 参见patch词条中的tiger team故事. 
social science number	: /n./   [IBM] \n一个content-free或近似如此的统计资料. 这种资料是通过不可信的手段从可疑的、来源不明的数据中提取出来的. 一般来说, 拥有这种资料往往不比一无所有强, 有时反而更差. 但是management总是青睐这种东西. 参见numbers, math-out, pretty pictures. 
sodium substrate	: /n./ 同义于salt substrate. 
soft boot	: /n./ 见boot. 
softcopy	: /soft'kop-ee/ /n./  [类比于hardcopy] \n相应于hardcopy的机器可读的形式. 见bits, machinable. 
software bloat	: /n./  这个是second-system effect或creeping featuritis的结果. 查阅词条ls(1), X, BSD, Missed'em-five, 以及OS/2可以获得一些例子. 
software hoarding	: /n./  含贬义, GNU工程的成员或者用这个词来描述保护软件私有权的行为——将软件作为商业机密或私有证书, 禁止自由传播和修改. 主要用在自由软件基金会的宣传中. 参见GNU可以找到一系列相关主题. 
software laser	: /n./  将一束激光在两面镜子之间不断反射, 其中一面镜子是完全反射, 另一面是部分反射. 如果光源（通常是一块水晶）的属性合适的话, 水晶原子发出的光子就会激发出更多的光子, 这些光子都具有一致的属性. 最终光束会穿过那面不完全反射的镜子而逃逸. 一种涉及bounce message的sorcerer's apprentice mode能产生相近的结果, 即一个消息的cascade会逃逸到附近系统的消息流中去. 到1993年为止, 至少有两起这样的事件发生. 
software rot	: /n./  当软件在一段时间内没有被使用的话, 它就有lose的倾向；不严肃的讲, 这样的失效可能是由于bit rot. 更一般的, software rot在程序前提过期后会发生. 如果软件设计不够robust, 那么软件就会以各种诡异的方式失效. \n对比bit rot. 
softwarily	: /soft-weir'i-lee/ /adv./  以一种与软件相关的方式, 如"这个系统是softwarily不稳定的". 注意, 该词的形容词形式softwary从来不用. 见hardwarily. 
softy	: /n./  [IBM] 硬件黑客用softy来指代一个不懂硬件的软件专家. 
some random X	: /adj./  用来代指一类东西X的一员, 暗示类X内的成员是可以交换的. 参见J.Random. 
sorcerer's apprentice mode	: /n./  [出自Goethe根据Paul Dukas的电影"L'appenti sorcier"所作的"Der Zauberlehrling"] \n协议中的一个bug, 在某些环境下, 收到一个消息会导致多个消息被改善, 而且其中每个消息被接收到时都会引发一个相同的bug. 尤其用于由email软件中的bounce message循环引起的这类问题. 对比broadcast storm, network meltdown, software laser, ARMM. 
SOS	: /S-O-S/ /n. obs./  \n1.一个不出名的losing文本编辑器. 在上世纪六十年代, PDP-6需要一个文本编辑器, 于是某个黑客就拼凑了一个quick-and-dirty的"临时编辑器", 以供在更好的编辑器出现前暂时使用. 不幸的是, 这个临时版本从未真正被抛弃, 哪怕后来新的编辑器（具体来讲, 是TECO）出现了. SOS就是从这个临时编辑器修改得到的, 并且很多PDP-10的用户从中得到了可疑的乐趣. 从那时起, 与SOS风格相似的其它程序开始出现, 比较有名的是早期的字体编辑器BILOS和Brother-In-Law Of Stopgap. \n2.削减、使下降；与AOS相反, 出自PDP-10的指令集. 
source of all good bits	: /n./  如果我们能从某个人或某个地方得到有用的信息, 那么这个人或地点就被称为source of all good bits. 如果你需要了解一个程序, 那么一个guru也许是source of all good bits. 某个有能力的秘书往往被冠以这个称号. 
space-cadet keyboard	: /n./  一个在MIT LISP机器上使用的现在传奇般的设备, 它产生了多个现在仍在使用的黑客词汇, 并且影响了EMACS的设计. 这个键盘设备至少装备了七个shift键：四个是bucky bits（control, meta, hyper和super）, 另三个类似于常规的shift键, 叫做shifp、top和front. 很多按键上都标有三个符号：顶部标有一个字母和一个符号, 前部标有一个希腊字母. 例如L键就在顶部标有字母'L'和一个双向箭头, 在前部有一个希腊字母lambda. 按下这个键以及不同的组合键, 可以得到下面的几种不同结果：\nL: 小写的l\nshif-L: 大写的L\nfront-L: 小写的lambda\nfront-shift-L: 大写的lambda\ntop-L: 双向箭头（此时front与shift被忽略）\n当然, 使用control, meta, hyper和super键的组合键也可以得到各种不同的结果. 在这个键盘上能打出超过8000各不同的字符！这使得用户能够打出非常复杂的数学文本, 并且也可以定义上千种单字符命令. 很多黑客的确希望记住那么多的命令, 如果它可以节省打字时间的话（这种态度显然造就了EMACS的接口）. 其它的黑客们, 却认为这么多的bucky bits没有必要, 并且反对这种需要三只或四只手来操作的键盘. \n见bucky bits, cokebottle, double bucky, meta bit, quadruple bucky. \n注意：早期的字典版本中, 这个词被误解为等同于Knight keyboard. 虽然两个键盘都是由Tom Knight设计的, 但后者只是指在PDP-10上为ITS而使用的键盘, 它以Stanford键盘为模型（正如bucky bits词条中描述的那样）. 真正的space-cadet keyboard是从最初的Knight keyboard变化而来的. 
spaceship operator	: /n./  符号'<=>', 得名的原因是在很多低分辨率、字体宽度一致的终端上, 这个符号有些像一个飞碟. Perl用这个来指代求差值正负号的函数操作. 
SPACEWAR	: /n./  一个星际战争模拟游戏, 爱E. E. "Doc" Smith的Lensman图书启发而设计的, 其中飞船绕着一个太阳决战, 不断向对手发射飞弹以及在超空间中跳跃. 这个游戏最早是1960-1961年在MIT的PDP-1机器上实现的. 在MIT, SPACEWAR游戏迷们促成了早期的黑客文化核心. 九年之后, 这个游戏的后继版本启发了Ken Thompson在业余时间利用一台废弃的PDP-7开发出了成为Unix的操作系统. 在这之后的九年之内, SPACEWAR成为了最早被商业化的电子游戏之一；它的继承者仍然在电子游戏的殿堂中feep. 
spaghetti code	: /n./  控制结构复杂纠缠的代码, 尤其是使用了很多的GOTO语句、异常或其它"非结构化的"分支结构. 具有贬义. 同义词kangaroo code, 因为这样的代码中跳跃太多. 
spaghetti inheritance	: /n./  [使用面向对象语言程序员可能会遇到这种问题, 因为"继承"] \n一个费解的类继承关系图, 通常是由于随意的创建派生类、只是想对代码重复利用而引起的. 创造这个词的目的是想通过与spaghetti code相似, 而使之带有贬义, 以便劝大家不要这样做（这种做法的确起到了效果）. 
spam	: /vt.,vi.,n./  [出自 "Monty Python's Flying Circus"]\n1. 通过过度运行一个输入数据过大但是大小固定的缓存, 而达到使程序崩溃的目的. 参见buffer overflow, overrun screw, smash the stack. \n2. 使得一个新闻组被大量不相关或不合适的信息充满. 要达到这个目的不用太费力, 可以用一个事先设计好的消息即可（如, 在soc.women上发表问题"你是如何看待堕胎的?"）这通常是用coss-post的方式办到的. \n3. 向很多Usenet新闻组发送相同或接近相同的消息. 这种方法毫无疑问会激怒网上的很多人. 
special-case	: /vt./  为了应付不合常规的输入或情况而为一个程序编写专门的代码. 这种做法会用在模式转换的处理中, 或用于处理交互式接口中出现的中断字符（相对于文本输入或正常的命令等）, 或者对付一个批处理程序或filter的输入的hidden flag. 
speedometer	: /n./  在一排LED或数码管上显示的灯光样式. 显示的样式可以在操作系统每经历N次main loop的时候向左移动. 快速移动的样式表明系统几乎是空闲的；当系统过载时, 这个速度表就会慢下来. 在Sun Microsystem的硬件上的这种速度表会前后跳, 如同拙劣的电视剧"Battlestar Galactica"中一个Cylon人的眼睛一样. 
spell	: /n./ 同义于incantation. 
spelling flame	: /n./   [Usenet] 张扬地公开纠正先前某篇文章中的拼写, 以质疑该文章的观点, 但是并不真正的回应这篇文章（对比dictionary flame）. 当然, 超越了马虎拼写者的那些人, 则更倾向于认为任何纠正都是spelling flame. Spelling flame本身也会包含拼写错误, 这是对人性的有趣的评论. 
spiffy	: /spi'fee/ /adj./  \n1. 描述一个程序拥有漂亮、聪明或设计优异的界面. \n2. 讽刺性的描述一个程序仅有华丽的外表. \n具体使用时作哪个意思取决于说话人的口气和上下文. 这个词是上世纪六十年代的主流俚语, 其意思接近释义1.
spike	: /v./  通过引入一个肯定会造成某结果的设备（通常是临时的）而击败一个选择机制. 这个词在多个工业领域中使用；电话工程师用插入pin的方式来spike中继, 铁路工程师则spike轨道开关以固定之. 在编程环境中这个词一般指临时的变化, 通常是为了测试的目的（相对于永久的变化, 这被称为hardwired）. 
spin	: /vi./  等同于buzz. 更多在C和Unix程序员中使用. 
spl	: /S-P-L/  [缩写词, 来自Set Priority Level] \n传统Unix内核通过将代码在高中断级别运行来实现互斥的方式. 在黑客词典中则用来描述调入或调出普通交流的行为, 即某人的行为是否容易被打断. 典型地, spl级别从1到7；"他今天位于spl 6"意味着他今天很难被干扰. 再如"等我把这个做完；然后我就会向下spl (spl down). "参见interrupts locked out. 
splash screen	: /n./  [Mac用户] 与banner的释义3同义. 
splat	: /n./  \n1. 在很多地方（如DEC, IBM等）作为星号（*, ASCII码是0101010）的名称. 这可能是因为星号在早期很多行式打印机中的形状如同一个压扁的虫子. \n2. [MIT] 一些人将'#'号（ASCII码0100011）称为splat. \n3. [Rochester Institute of] Mac机器上的feature key（等同于alt释义2）. \n4. （过时）指Stanford/ITS扩展的ASCII码字符circle-x. 这个字符也被称为blobby和frob；有时数字家用它作为张量积的标记. \n5. （过时）指半神秘的Stanford扩展的ASCII码字符circle-plus. 参见ASCII. 
spod	: /n./  [UK] talker system和MUD中发现的一种较为低级的生命形式. Spod在RL中几乎没有朋友, 于是就在网上聊天中找回代替品, 因为他们觉得在网上交流更容易和受欢迎. 这种人有着computer geek的所有负面特征, 却并不对计算机本身感兴趣. 这种人缺乏网络的知识和兴趣, 却认为他上网是天经地义的, 所以他们对系统管理员们来说是一个主要的烦恼源, 他们占用线路以得到新的MUD, 然后又传播他溜入互联网的方法（"哇！这是在美国！"）并且会抱怨自己被拒绝访问忙碌的线路. 一个真正的spod会以"你是男的还是女的?"开始自己的对话（然后就开始说"你有好的号码/ID/密码吗?"）, 并且不会与（物理上）同处一间屋子的人聊天, 除非别人登陆到他正在用的那台机器并且进入聊天模式. 对比newbie, tourist, weenie, twink, terminal junkie, warez d00dz. 
spoiler	: /n./  [Usenet] \n1.俗称"剧透", 揭示书或电影中重要情节元素的评论, 但是却使读者感受不到应有的悬念. \n2.交待了某个问题答案的评论, 但是却使读者失去了自己解决问题的乐趣（参见interesting）. \n上面的每个释义都可以用来构成组合词, 如total spoiler, quasi-spoiler甚至pseudo-spoiler. 
sponge	: /n./  [Unix] 一种特殊的filter, 它在写输出前要先读取所有的输入；经典的例子是排序工具. 与大部分filter不同, sponge能方便的用输出来覆盖输入文件. 如果一个文件系统设置了版本控制（就像ITS和VMS所做的那样）, 那么区分sponge与filter就没用了, 因为filter的输出会自动形成一个新版本的文件. 参见slurp. 
spool	: /vi./  [出自早期IBM的"Simultaneous Peripheral Operation On-line", 但是很多人认为这个首字母缩写只是为了造势]\n向某个设备或程序（称为spooler）发送文件, 然后spooler将文件存入队列以便之后处理. 若没有限制条件, 则spooler就是print spooler, 它控制向打印机的输出；但是这个词也被用在其它地方（尤其是绘图器和图像设备）, 甚至偶尔会用于输入设备. 参见demon. 
spool file	: /n./  被spool等待处理的文件. 尤其用在当spooling被用来处理不同设备或程序之间速度不匹配问题的时候. 例如, 在Unix中发送邮件时, 往往邮件先被拷贝给一个spool file, 然后等待传送demon注意到. 这是一个边缘术语（borderline techspeak）. 
square tape	: /n./  一指大型机磁带盒, 用于IBM 3480或相匹配的磁带驱动；或指用在工作站和微机上的QIC磁带. 这个词得名于磁带盒的方形（实际是矩形）；对比round tape. 
squirrelcide	: /n./  [用在Usenet的comp.risks新闻组中]（也作squirrelicide）\n当一只松鼠决定练习一下它们的不幸嗜好, 也就是用它们毛绒绒的身体去使电线短路时, 发生在瞬间的一切事情. 结果是：一只死松鼠, 一台down掉的电脑. 在这种情况下, 我们就称这个计算机系统被squirrelcided了. 
stack	: /n./  一个人不得不做的一些事情. 比如某人马上要做的一个工程可以被称为"升到了stack的顶端". 再如, "恐怕我有一些真正的工作去做, 所以我要把现在这个事情在stack中向下推一下. ""这件事情我还没有做, 因为每次我从stack中取出一个工作, 就会有一个新的被放到stack中. "如果你在对话中数次被打断, 以致于你忘了谈话的主题时, 就可以说"我的stack谥出了", 其含义是：太多的东西被压入栈中, 所以较早的事情就被忘记了. stack最现实的例子是小餐馆中存放盘子的筒, 底部装有弹簧, 在筒中的一打盘子上再放一个盘子后这些盘子会下降一点, 而将顶上的盘子取走则会使这些盘子上升一点点. 参见pop, push. \n在MIT, pdl曾是stack的一个更常用的同义词, 现在这个词大概仍在使用. 而在其它地方, stack更常用一些. 在Knuth的"The Art of Computer Programming"第二版第一卷中说：\n很多人意识到stack和queue的重要性, 于是他们各自给这些结构取了名字stack也被称为push-down list, reversion storage, cellar, nesting store, pile, last-in-first-out(LIFO) list, 甚至yo-yo list. 
stack puke	: /n./  在处理异常时, 一些处理器体系结构为了保存其内部状态, 会"把内脏吐在stack上". 比如Motorola 68020, 在总线出错时会将92字节的信息吐出. 在流水线机器中, 这种操作会消耗一些时间. 
stale pointer bug	: /n./  同义于aliasing bug, 尤其被微机黑客们使用. 
star out	: /v./  [University of York, England] 将/etc/passwd中以加密形式保存的用户密码改为一个星号. 在Unix下, 这并不是一个合法的密码, 因此相应的用户就被禁止登录. 一般来说, 像adm, news以及daemon样的账户是永久性被star out的；偶尔一个真正的用户也会被star out以示惩罚, 如："Graham因为在工作时间玩Omega而被star out了". 这个词有时也写作the Order of The Gold Star. 对比disusered. 
state	: /n./  \n1. 条件, 情况. "你最近一次hack的情况如何?(What's the state of your latest hack?)""成功了. (It's winning away.)" 标准问题"你处在什么state?"意思是"你在做什么?"或"你要做什么?"经典的答案是"我要gronk out"或"hungry". 另一个标准问题是"世界的state是什么", 意思是"有啥新鲜事?"或"发生了什么?". 表达这种问题的一种更简洁和幽默的方式是"State-p?". 而前面第一个问题也可以问作"state-p latest hack?".\n2. 在非永久性存储器(电子的或人为的)中保存的信息.
stealth manager	: /n./  [Corporate DP] 不知从哪冒出来的管理员, 向未知的终端用户承诺无法开发的软件产品, 然后在程序员们意识到问题之前就消失了. 见smoke and mirrors.
steam-powered	: /adj./  老式的或动力不足的;古老而不流行的. 该词并没有很强的贬义, 甚至带有些许褒义, 用来指一些叮当作响、运行得很费力但是却一直工作的东西.
stiffy	: /n./  [University of Lowell, Massachusetts.] 3.5英寸的microfloppies, 得名的原因是这种东西的外壳比5.25英寸以及8英寸(已经退出历史舞台)的microfloppies要硬. 在其它地方也被称为firmy.
stir-fried random	: /n./  (alt. 'stir-fried mumble') 这个词用来指那些会做饭的黑客们的的招牌菜. 一般是随便炒炒蔬菜和肉. 好吃又实惠. 见random, great-wall, ravs, laser chicken, oriental food; 参见mumble.
stomp on	: /vt./  不小心将某个重要的东西给覆盖了, 通常是机器自动做的. "我在这个周末的成果都在昨晚被服务器脚本给干掉了." 对比scribble, mangle, trash, scrog, roach.
Stone Age	: /n.,adj./  \n1. 在计算机文化中, 从1943年ENIAC诞生到50年代中期的这段时间被定义为Stone Age(这个定义存在问题); 指电子机械的dinosaur们的伟大时代. 有时这个词用来指1960-1961年(见Iron Age); 然而, 更有趣且更能描述这个时代特点的词则是晶体管逻辑的、带有桶或CRT大规模存储器的、前铁酸盐core机器的Bronze Age. 参见Iron Age.\n2. 更一般的, 带有贬义, 指任何恶心的,古老的硬件或软件技术. 注意, 这个意思甚至被Stone Age(释义1)时的人所用.
stone knives and bearskins	: /n./ [出自星际迷航的"The City on the Edge of Forever"一集]\n用来描述(以及抨击)一类计算环境, 它们根据"好的设计方式"来看有点荒诞似的简单. 对比steam-powered.
stoppage	: /sto'p*j/ /n./  提供一些完全无用之物的过度lossage. "系统最近的一次stoppage"是由于一个fried变化引起的.
store	: /n./  [可能出自术语'main store'] 在联邦黑客语的一些变体中, store是core常用的同义词. 因此, "把一个程序带到store里来"并不是指某人归还包装好的软件, 而是指一个程序被swap in.
strided	: /stri:'d*d/ /adj./  [科学计算] 指一系列内存读写, 每一个都与前一个以相同的间隔分开, 这个间隔叫做"stride length". 当stride length是缓存一行长度的数倍时, 这些读写操作就可能是最差情况的访问模式. strided引用经常由遍历数组的循环产生, 并且(如果你的数据大到访问时间相当可观)值得通过调换双层循环或铺开嵌套循环的外层来达到更好的效果. 这个用法属于borderline techspeak; 相关的memory stride一词则是techspeak.
stroke	: /n./  斜线符号('/', ASCII 0101111)的俗名. 见ASCII可以查到其它同义词.
strudel	: /n./  "位于"符号('@', ASCII 100000)的俗名. 见ASCII.
stubroutine	: /stuhb'roo-teen/ /n./  ['stub subroutine'的简称] 小的,通常无意义的占位符, 为了以后填入subroutine.
studly	: /adj./  有力的; 有感染力的. 指代码和设计同时展示了复杂性和大师级的才华. 具有类似hairy的含义, 但是在语气上更加肯定. 常用"most studly"或名词形式"studliness"以示强调. 
studlycaps	: /stuhd'lee-kaps/ /n./  一种愚蠢程度类似BiCapitalization之于商标的黑客形式, 但是应用于任意的文本而不是商标. 它的来源和意义都不清楚.
stunning	: /adj./  难以相像的愚蠢. 通常用来讽刺. "这真是一个stunning的主意啊!"
stupid-sort	: /n./  同义于 {bogo-sort}.
Stupids	: /n./  这个词被samurai用来指那些雇佣他们的suit们; 很直接地表明了使用者们简单的意思, 但在其他黑客亚文化中这个意思被掩饰得更好. 
Sturgeon's Law	: /prov./  "任何东西的九成都是垃圾." 来自科幻作家Theodore Sturgeon所说的, "当然, 90%的科幻小说都是杂质. 因为90%的任何东西都是杂质." 奇怪的是, 当Sturgeon's Law被引用时, 最后一词几乎都被换成了'crap'. 对比Hanlon's Razor, Ninety-Ninety Rule. 尽管这个格言出自科幻迷, 但是大部分黑客都知道并且认为它是对的.
sucking mud	: [Applied Data Research] /adj./  (也作 'pumping mud') \n崩溃或wedged。通常用于描述一个向网络提供服务的机器, 如文件服务器. 这个词产生于Dallas地区, 来自于Texas东部油田地区的挽歌--"shut 'er down, Ma, she's a suckin' mud". 常用作询问: "我们要重新配置网络, 你准备好suck mud了吗?"
sufficiently small	: /adj./ 同义于 {suitably small}.
suit	: /n./  \n1. 丑陋且今人不快的"生意装", 非黑客人士常穿. 总是搭配一条领带, 它能部分遏止流向头部的血液. 很多人认为这套装备很大程度上解释了其人的行为. 对比droid.\n2. 常穿suit的人, 与技术人员和黑客很不同. 见loser, burble, management, Stupids, SNAFU principle, 以brain-damaged. 英文的Jargon Files中对这种人已经很仁慈了, 而据我们在Moscow的同行说, 俄国黑客管这种人叫sovok, 是一种收集垃圾的工具.
suitable win	: /n./ 见{win}.
suitably small	: /adj./  [ 从数学词典中转化而来]\n该词带有讽刺意味, 描述那些与所期望或所要求的行为不同的不可量化的行为. 例如, 假设一个新编的程序能正确的全屏显示, 并且某人公然宣布: "It works!" 然后, 如果该程序在第一次鼠标点击后就进行内核转储, 那么某人就会补充说: "好吧, for suitably small values of 'works'." 对比词条random numbers下pi的特点.
sun lounge	: /n./  [UK] 全部Sun工作站存在的房间. 这个词的幽默感来自如下事实: 它在主流词汇中被用来描述一个日光浴室, 并且其中所有的工作站集合在一起释放出相当大量的热.
sun-stools	: /n./  该词坦率地指代SunTools, 它是X出现之前的一个窗口环境, 在那个年代被诟病它的体积,速度以及错误特性. 而X, 则更大更慢; 见second-system effect.
sunspots	: /n./  \n1. 导致一个奇怪错误的概念上的原因(并未确实). "为啥这个程序突然蓝屏了?" "Sunspots吧, 我想."  \n2. 它也是导致bit rot的原因 -- 出自一个传说, 说sunspots能增加cosmic rays, 它们可以改变内存中的单个bit. 参见phase of the moon.
super source quench	: /n./  一个特殊设计的数据包, 用来关闭一个网站. IP协议中有一个叫做Source Quench的控制消息, 它让一个主站点在某个特定连接上传送信息的速度更慢, 以避免阻塞. IP协议还有一个Redirect控制消息, 目的是命令主站点向一个不同的本地路由器发送某些包. 一个"super source quench"实际上是一个redirect控制包, 它伪装成来自一个本地路由器, 并命令主站点将所有的包都发给它的本地环路地址. 这种方法会将站点打结封锁住. 对比Godzillagram, breath-of-life packet.
superloser	: /n./  [Unix] 啥都不懂的superuser--指某人拥有一个Unix系统的root权限, 但却不知道自己该做啥, 类似一个手拿开了保险的Uzi枪的三岁小孩. 如果你觉得这种情况很罕见, 那么请先感受一下management词条下所说的领土冲动(territorial urges).
superprogrammer	: /n./  多产的程序员; 他们能极快极好的编程. 并非所有的黑客都是superprogrammer, 但是很多黑客是. 该词更常用于IBM这种地方而不是黑客社区. 它倾向于强调对于产量的天真地衡量, 而且轻视了创造性,独创性以及"完成工作" -- 而且避重就轻地忽略了一个问题: 某个superprogrammer的一天几千行代码是否比另外某个人的三行代码更加重要或做了更多的Right Thing. 黑客们偏好hacker以及wizard这些词.
superuser	: /n./  [Unix] 同义于 {root}, {avatar}.  这个词的用法已经扩展到了非Unix环境; superuser就是一个设置了所有wheel位的账户. 它比wheel更加具体.
support	: /n./  售后支持; 很多软件厂商都承诺但是极少负责. 对于黑客来说, 大部分支持人员都没用 -- 因为当一个黑客呼唤支持时, 他或她通常已经比那些支持人员更了解相应软件了. 黑客们对于所谓"支持"的想法是与软件设计师私下聊一聊(tête-à-tête).
surf	: /v./  [出自一个surf的谚语, 指快速翻动电视频道]\n跨越因特网来搜寻有趣的东东, 尤其用在当某人使用WWW浏览器这样做的时候. 该词同样也会用于surf in某个特定的资源.
Suzie COBOL	: /soo'zee koh'bol/  \n1. [IBM: 大概出自Frank Zappa的 'Suzy Creamcheese'] /n./ \n指一个从学校毕业的程序员, 除了不懂写注释之外, 其它啥都知道. 也作'Sammy Cobol'(本着不性别歧视的态度)或'Cobol Charlie'(在某些非IBM圈子中).\n2. [proposed] 任何code grinder的Meta-name, 类比于J. Random Hacker.
swab	: /swob/  [出自对PDP-11中命令'SWAp Byte'的速记词, 在'dd(1)'选项'conv=swab'中被确定了身份(见dd)]\n1. /vt./ 通过在文件中交换字节来解决NUXI problem.\n2. /n./ V7 Unix系统中的一个程序, 用来执行swab动作, 或与之等价的任何操作. \n参见big-endian, little-endan, middle-endian, bytesexual.
swap	: /vt./  \n1. [术语] 将信息从一个访问速度快的存储器转移到一个慢速的存储器(swap out), 或反过来(swap in). 常指磁盘被作为虚拟内存. 当需要数据或程序时, 就将它们swap到core中来处理; 当它们不再使用时, 就会被swap出去.\n2. 将人的短期记忆类比为core. 为考试而临时抱佛脚就可以被称为swap in. 如果你偶尔忘记某人的名字, 但接着又想起来了, 你就可以说是它被swap out了. "保持某物被swap in"意思是将它牢记. 如果当某人打断你讲话的时候你正刚想到一个好主意, 那你就可以说"等下, 先让我把这个给swap out了", 暗示用一张纸作为体外存储器而且如果你没把想到的好主意记下来的话那么就可能会在谈话中将它忘了. 对比page in, page out.
swap space	: /n./  存储空间, 尤其指在转移或重新配置时使用的临时空间.
swapped in	: /n./ 见{swap}.  参见 {page in}.
swapped out	: /n./ 见{swap}.  参见 {page out}.
swizzle	: /v./  当数据结构被从外存写入主存时,将相应的外部名称,数组下标,或数据结构内部的引用转变成地址指针(也称为"pointer swizzleing"); 这样做的原因大概是可以提高追踪引用内容的速度或简化代码(如将大量的名字查询转变为指针所指向的内容). 相反的操作有时被称为unswizzling. 参见snap.
sync	: /sink/ n., /vi./  (var. 'synch') \n1. 同步.\n2. [术语] 将等待的I/O强制写入磁盘; 见flush释义2.\n3. 更一般的, 在系统将要崩溃时, 将一些竞争的处理器或代理强制设置为安全的状态; 这就是checkpoint.
syntactic salt	: /n./  与syntactic sugar相反, 使之更难写出坏代码的特征. 具体的, syntactic salt是程序员为了证明他知道当前发生的事情而必须跳过的铁环, 而不是表达一个程序动作. 一些程序员认为必需的类型声明是syntactic salt. 要求用"end if","end while","end do"等等来结束一段被控制结构所控制的代码(而不是只用"end")当然也是syntactic salt. Syntactic salt就像真的盐一样可以以一种不健康的方式提升黑客们的血压. 对比candygrammar.
syntactic sugar	: /n./  [Peter Landin制造] 给语言或其它形式所增加的特征, 目的是使之更"甜", 这些特征不会影响相应形式的表达能力(对比chrome). 当这种sugar特征已经被明显而琐碎的翻译成已知的其它结构时, 尤其使用syntactic sugar一词. C语言的"a[i]"记号就是"*(a+i)"的syntactic sugar. \n"Syntactic sugar导致了分号的毒瘤." -- Alan Perlis.\n与该词同义的还有syntactic syrup和syntacic saccharin. 这两个词意味着更加无谓的东西, 区别是: syntactic sugar是作为目的(使某些东西更容易被人所接受), 但是syntacitic saccharin或syrup则是没有任何目的. 对比candygrammar, syntactic salt.
sys-frog	: /sis'frog/ /n./  [the PLATO system] sysprog的幽默的变体, 是systems programmer的缩写.
sysadmin	: /sis'ad-min/ /n./  'system admin'的缩写; 见admin.
sysape	: /sys'ayp/ /n./  对于一个计算机操作员来说相当具有贬义的词; 在使用问题复杂性为香蕉级(见one-banana problem)的地方利用sysop.
sysop	: /sis'op/ /n./  [尤其用在BBS中] \n一个BBS的操作员(通常是其所有者). 在FidoNet上常犯的新手错误是用国际echo向sysop发送一条信息, 于是就将这条信息发送给了世界范围内的成百个sysop.
system	: /n./  \n1. 一台计算机上的监管程序或操作系统.\n2. 整个计算机系统, 包括I/O设备,监管程序或操作系统,也许还有其它软件.\n3. 大规模的程序.  \n4. 任何方式或算法.\n5. 系统黑客: 攻击系统的黑客.(只针对system的释义1和2的内容; 而对释义3则要提到具体的程序, 如"LISP hacker")
systems jock	: /n./  见{jock}, 释义2.
system mangler	: /n./  system manager的有喜感的同义词, 可能是得名原因是一个主要的IBM OS有一个叫做SYSMANGR的root账户. 尤指一个负责系统管理、软件维护和升级的系统程序员. 与admin不同, system mangler强调相关的技术成分. 
SysVile	: /sis-vi:l'/ /n./  见{Missed'em-five}.
T	/T/ \n1.[从LISP术语而来，表示“真”]是，对。用来回答一个问题。一些LISP黑客喜欢用T和NIL来表示“是”和“非”，这就是一种条件反射。但有时可能会产生误解，比如服务员问是否要杯咖啡的时候，如果回答T，会被认为是想喝茶。幸运的是，大部分黑客（特别是那些爱去中餐馆的黑客）都更喜欢喝茶。\n2.参见time T（以及since time T equals minus infinity）\n3．[术语]在交互过程中，是transaction（交互）的缩写\n4.[普度大学用语] tee的另一种写法\n5.耶鲁开发的一个LISP的变体。（NIL也有相似的用法，是VAX开发的一个LISP变体）。
tail recursion	/n./ 尾递归。参见tail recursion。
talk mode	/n./ Unix，ITS等操作系统支持的一种功能，允许多个登陆的用户实时在线对话。\n聊天模式下有许多惯用缩写，是口语中不常见的。一些就像莫尔斯码一样令人费解。\nAFAIK \nas far as I know \nBCNU \nbe seeing you \nBTW \nby the way \nBYE? \nare you ready to unlink? (这是结果聊天的标准方式；对方也会打出BYE确认，或者两人继续聊) \nCUL \nsee you later \nENQ? \nare you busy? (可能的回答是 ACK 或 NAK ) \nFOO? \nare you there? (常用在意料之外的连接中，也意为 "对不起我不小心撞进来的"(连接的人) 或"啥事 ?" (被连接的人)) \nFWIW \nfor what it's worth \nFYI \nfor your information \nFYA \nfor your amusement \nGA \ngo ahead (用于当两人同时打字时，表示让对方先说) \nGRMBL \ngrumble (表示担心或不赞同) \nHELLOP \nhello? (an instance of the `-P' convention) \nIIRC \nif I recall correctly \nJAM \njust a minute (等同于SEC....) \nMIN \nsame as JAM \nNIL \nno (see NIL) \nO \nover to you \nOO \nover and out \n/ \nanother form of "over to you" (from x/y as "x over y") \nlambda (used in discussing LISPy things) \nOBTW \noh, by the way \nOTOH \non the other hand \nR U THERE? \nare you there? \nSEC \nwait a second (sometimes written SEC...) \nT \nyes (see the main entry for T) \nTNX \nthanks \nTNX 1.0E6 \nthanks a million (humorous) \nTNXE6 \nanother form of "thanks a million" \nWRT \nwith regard to, or with respect to. \nWTF \nthe universal interrogative particle; WTF knows what it means? \nWTH \nwhat the hell? \n<double newline> \nWhen the typing party has finished, he/she types two newlines to signal that he/she is done; this leaves a blank line between `speeches' in the conversation, making it easier to reread the preceding text. \n<name>: \nWhen three or more terminals are linked, it is conventional for each typist to prepend his/her login name or handle and a colon (or a hyphen) to each line to indicate who is typing (some conferencing facilities do this automatically). The login name is often shortened to a unique prefix (possibly a single letter) during a very long conversation. \nA giggle or chuckle. On a MUD, this usually means `earthquake fault'. \n上面大部分用语都被Stanford和MIT的人使用，其中一些在email中也通用。同时，有些词也被商业网络所用，它们就带有了一些"社会"气息，如下：\n<g> \ngrin \n<gr&d> \ngrinning, running, and ducking \nBBL \nbe back later \nBRB \nbe right back \nHHOJ \nha ha only joking \nHHOK \nha ha only kidding \nHHOS \nha ha only serious \nIMHO \nin my humble opinion (see IMHO) \nLOL \nlaughing out loud \nNHOH \nNever Heard of Him/Her (often used in initgame) \nROTF \nrolling on the floor \nROTFL \nrolling on the floor laughing \nAFK \naway from keyboard \nb4 \nbefore \nCU l8tr \nsee you later \nORF\nmale or female? \nTTFN \nta-ta for now \nTTYL \ntalk to you later \nOIC \noh, I see \nrehi \nhello again \n上面这些词大都不在大学或unix世界中使用。\n而MUD社区则混合使用Usenet/Internet的词汇。总体上说，这些人偏好将词语打全而不是使用缩写，这可能与MUD文化比较年轻有关，很多参与者的网速以及打字速度较快。下面是MUD社区的一些常用词汇。\nCU l8er \nsee you later (mutant of CU l8tr) \nFOAD \nfuck off and die (use of this is generally OTT) \nOTT \nover the top (excessive, uncalled for) \nppl \nabbrev for "people" \nTHX \nthanks (mutant of TNX; clearly this comes in batches of 1138 (the Lucasian K)). \nUOK? \nare you OK? 
talker system 	/n./ 不列颠的用语，表示实时聊天系统。
tall card 	/n./ 一种电脑扩展卡。参见short card。IBM开发PS/2 model 30时，把插槽变短了很多，使得许多工业标准的扩展卡成了“长卡”，不能兼容。这就是一个典型的connector conspiracy（联通性诡计）。
tanked	/adj./ 当机。这个词是通过Steve Dallas的漫画"Bloom County"流行起来的，表示喝醉的意思。
TANSTAAFL	/tan'stah-fl/ 天下没有免费的午餐[There Ain't No Such Thing As A Free Lunch的缩写，来自Robert Heinlein的经典歌曲The Moon is a Harsh Mistress（月亮是无情的情人）]当一个人使用一种不太友好的重量级（heavyweight）技术受挫时，或是抱怨某个免费软件的质量时，或是收到Usenet新闻组的一些垃圾信息时，常常会发出这样的感叹。比如“什么？不要告诉我还得安装下数据库才能让我的地址本程序工作！”“这个呀，你应该知道，天下没有免费的午餐”。这个词在科幻迷和黑客界的自由主义者中很流行。参见A Portrait of J. Random Hacker in Appendix B。
tar and feather	/vi./ [来自于Unix的tar（一个压缩文件的程序）]把一堆文件先用tar黏贴在一起，然后再压缩（compress）成一个更小的便于发送的文件。之所以用feather而不是compress大概是前者更好听吧。
taste	[primarily MIT] /n./ [主要是在MIT使用]
tayste	/tayst/ /n./ 两比特。与crumb, quarter同义。参见nybble。
TCB	/T-C-B/ /n./ [IBM用语]\n1. Trouble Came Back的缩写。一种偶发的，很难重现的问题。\n2.Trusted Computing Base（可信计算基的缩写），是橘皮书中官方的术语。
TCP/IP	/T'C-P I'P/ /n./ \n1.[TCP/IP协议]互联网的基础协议，是少有的被大多数黑客认可的，不被嘲笑鄙视的协议。与其他所谓的“标准”竞争者，如.25, DECnet, 以及 ISO 7-层协议栈不同的是，TCP/IP协议主要是在实际应用中流行起来的，而不是被某个大厂商或是官方背景的组织发布推动的。它首先能够工作，其次降低了跨平台连接的成本，而且还避免了大公司或政府的技术垄断。这三个都是黑客所推崇的价值。参见creationism。\n2.[业余收音机爱好者用语]指的是当前主流的AX.25站点和迅速发展中的基于TCP/IP中继的站点间的技术上和政治上的竞争。
tea, ISO standard cup of	/n./ 一杯ISO标准的茶[南非用语]一杯茶，加牛奶（先到牛奶后加茶），加一匙糖。变体是ISO 0，表示不加糖；ISO 0表示加两匙糖。\n像许多ISO标准一样，这个茶的标准在北美显得是有点怪异的。这是因为黑客通常想要避免那种英国传统的，添加奶制品的茶。如果非要添加什么的话，宁可添加些柠檬。如果一个人足够无聊，还可以发明一种类似的“美国国家标准茶”，就像一些技术领域的标准竞争一样。不过注意，牛奶和柠檬混在一起不太好。
TechRef	/tek'ref/ /n./ [MS-DOS用语]最初的IBM PC Technical Reference Manual（IBM个人电脑技术参考手册），包括BIOS列表和完整的PC原理图。这是对黑客来说，唯一真正有意义的关于个人电脑的技术文档。
TECO	/tee'koh/ /n.,v. obs./ [Tape Editor and COrrectod的缩写]\n1.TECO是一种文本编辑器，是EMACS的前身，以强大的可编程能力为其特色。在1991年，TECO基本被EMACS所取代。现在的话可能在VMS或PDP-11操作系统上还可以看到。由于对多语言的支持，TECO是EMACS之前最流行的编辑器，EMACS也继承了它的许多特色。\n2.用TECO编辑文本\n3.编辑文本，即使使用的不是TECO
tee	/n.,vt./ [普渡大学用语]电子传输数据的副本。“你在给他传那个东西吗？给我也复制一份吧”。这是由于Unix有一个命令tee（取这个名字是类比于一种管道，参见plumbing）。也可以作为动词使用，表示保存副本。它也可以拼写为T。
teledildonics	/tel`*-dil-do'-niks/ /n./ 计算机虚拟现实中的性，特别指两个人以电脑为媒介通过虚拟的传感器进行的与性相关的活动。这种构想现在还没有实现，顶多是有一些色情的聊天室而已。然而虚拟现实技术的爱好者普遍认为这是一个很严肃的构想，将来必然会实现。
Telerat	/tel'*-rat/ /n. obs./ 电鼠。黑客对Teleray这个词所做的恶作剧修改。Teleray是一种很失败的终端，现在已经绝迹了。与AIDX, Macintrash Nominal Semidestructor, Open DeathTrap, ScumOS, sun-stools, HP-SUX比较。
TELNET	/tel'net/ /vt./ 使用TELNET协议与互联网的用户交流（通常使用一个叫做telnet的程序）。有时简写为TN。高级用户更喜欢用称之IMPCOM，这是一个相关软件的名词。
ten-finger interface	/n./ 十指接口。指的是由于安全原因不能直接连通的两个网络直接的接口。得名的原因是实际中一种解决方案是把两个网络的终端放在一起，有一个操作员从一个终端读然后在另一个终端写。
tense	/adj./ 形容一个程序非常的聪明高效。一段这样的代码通常是由于牺牲一定的可读性，但有时也可能由于一个伟大的构想。一个CMU的毕业生黑客Mike Kazar曾经说说这样的话“这段程序可能会牛逼得让你们掉眼泪”。这个词也可以用来形容程序员，指的是那种可以写出这种代码的程序员。
tentacle	/n./ 伪装的的面具。网络的虚拟世界中伪造的身份，用来进行欺骗或是其他的违法勾当。这暗示着一个人可能有多个面具。这个词最先出现在cypherpunks（喜欢对邮件进行加密来避免被窃听的，有种被迫害妄想的人）的一些狂言中，一些正常的人常用这个词来嘲笑他们。不过这个词现在已经是一个比较正式的词汇，用在一些邮件转发软件的文档中，现在(1994)在网络上被广泛认可。
tenured graduate student	/n./ 终身学生。研究生读了10年的人（一般人最多读5到6年），‘ten-yeared' student。只要一个研究生开始读研七，都可用这个词形容他。和终身教授不同，学生不会有与之相当的待遇。但是这样的学生在这个大学里呆得时间通常比终身教授都长。
tera-	/te'r*/ /pref./ 参见quantifiers。
teraflop club	/te'r*-flop kluhb/ /n./ [FLOP = Floating Point Operation（浮点运算）]一个传奇的协会，这个协会的人花费大量时间，通过复杂的光线追踪技术来制作一些简单的玻璃球的图片。据说加利福尼亚理工大学的James Kajiya教授是这个协会的创立者。请与Knights of the Lambda Calculus比较。
terminak	/ter'mi-nak`/ /n./ [加利福尼亚理工用语]指工作不正常的计算机终端。这是因为Lear-Siegler ADM 3a终端有一种常见的故障——点击L键时显示的却是K。出现这样的问题时我们就会看到这样的抱怨了。"Terminak #3 has a bad keyboard. Pkease fix."（3号终端键盘出问题了，请修理。注意Terminak和Pkease）。
terminal brain death	/n./ 终端脑死亡。比terminal illness更夸张的状态。当一个人在电脑前连续鼓捣太长时间很可能会体会到这种感觉。
terminal illness	/n./ \n1．raster burn的同义词\n2.显示器可能会出现的老化状态，如果不使用屏幕保护程序的话。
terminal junkie	/n./ 终端迷[英国用语]指的是一类初级的黑客。他们花大量的时间研究整个系统的目录树，写一些很弱智的程序。也被称作terminal jockey', `console junkie'或console jockey。console jockey（控制台迷）相对更为准确。
terpri	/ter'pree/ /vi./ [来自于LISP1.5（以及后来的MacLISP）]输出新的一行。现在很少作为俚语使用了，不过在通常的LISP中仍是一个术语。它是TERminate PRInt line（终端输出行）的缩写。在一些早期的操作系统或硬件上，字符只有按格式成为完整的一行才能被输出，这个操作就是用来表明一行终止，可以显示出来了。 
test	/n./ 测试\n1.在原型机上进行的真实用户测试，花大量时间去了解原型机并仔细的监控和改善结果。\n2.随机选几个无聊的用户，简单试用一下程序的基本功能，开发者在旁边随时等着去修改错误。\n从当前大多数软件的质量来看，大多数测试是后者。参见demo。
TeX	/tekh/ /n./ Donald E. Knuth开发的一个极其强大的格式化文本编辑器。这个软件在计算机科学群体里非常流行（它已强大到代替了Unix里的troff）。TeX迷们常执着于TeX的正确拼写（三个字母都是大写，但中间的E位置较低。把e小写是在只能显示ASCII字符的设备上的标准写法）与发音（喉音）。他们还喜欢用TeX来发明许多派生词，如TeXnician（TeX用户），TeXhacker（TeX程序员），TeXmaster（能力很强的TeX程序员），等等参见CrApTeX\nKnuth之所以开发这个东东是由于他在编写著作Art of Computer Programming（计算机程序设计艺术）前三卷时，发现排版很麻烦。黑客解决手头问题的风格是一步到位，彻底解决。于是他就设计了这么一种排版语言。他本以为1978年就可以完成，但实际上1985年才最终做出来。由于花时间开发TeX，《计算机程序设计艺术》第四卷估计2002年才会写出来。但我想人们是不会介意的，因为设计TeX的意义太大了。在它的影响下，一些其他宏大的项目也开始启动了。\nTeX是一个免费，共享又高质量的模范软件。Knuth现金奖励那些报告bug的人。这么多年过去了，只发现了不多的几个小bug，奖金现在又提升了。或许它最大的问题就是太庞大了，在Pascal系统上编译的话可能会有些麻烦。
text	/n./ \n1.[术语]可执行的代码，特别是与系统无关的“纯”功能性代码。请与English相比较\n2.通常的文本文件；以ASCII 或 EBCDIC格式表示的数据。\n这两种相矛盾含义也常困扰黑客们。
thanks in advance	[Usenet用语]在网络上询问信息或寻求帮助时习惯性的礼貌用语。有时写作`advTHANKSance'或 `aTdHvAaNnKcSe'，或者简写为`TIA'. 参见 net.-, netiquette。
That's not a bug, that's a feature!	开发者对谣传的bug的经典回应。这种回应，如果不能被信服的话，可能表明那个bug至多是一个misfeature（有些不足的功能）。
the X that can be Y is not the true X	一种幽默的句式，用来形容一种有些神秘的东西。这句式来自经《道德经》，“道可道非常道”。这种句式通常暗示X只有通过自己的去悟才能够真正理解。参见trampoline。请与has the X nature比较。
theology	/n./ \n1.指信仰问题，带有嘲讽或幽默的口吻\n2.技术上能够体现出大自然一些神秘本质的地方，尤其指那些在理论上意义较大而实际应用中相对边缘化的成果。多出现在AI（人工智能）或语言设计领域。比如AI中智能数据和智能程序之间的争论。
theory	/n./ 关于某个行为的意见，想法，打算，故事或规矩等等。这是对该词本意的一种泛化使用。如“这个TECO故障该怎么处理啊？”“今晚打算吃什么？”……
thinko	/thing'koh/ /n./ [类比`typo'（排版错误）]思维过程中的一个小失误，特别是当一个人在回忆一些死记硬背的知识时犯的那种错误；意识流中泛起的一个小泡沫。与braino同义。参见brain fart. 比较 mouso。
This can't happen	can't happen的一种变体。
This time, for sure!	/excl./ 在调试程序遇到一个又一个小麻烦时常常会说的话“这次肯定没问题，我保证！”。
thrash	/vi./ 蛮干，花大力气却没啥意义。比如内存或交换区过载时，大量的时间都花在了数据的移动而不是有效的计算上，因此可以称为蛮干；一个人老是三分钟热气，不断的改主意瞎折腾，也可以称为蛮干；一个人如果同时做多项任务，而且在任何一项任务上都不能投入足够的尽量，也可以说他在蛮干。
thread	/n./ topic thread（主题线索）的缩写。表示关于同一个话题前后发表的的多个帖子。follow a thread表示读一系列相同主题的帖子。好的新闻阅读器可以自动把文章按照主题分类。\n有趣的是，这与牛津词典的解释差的还不少。牛津词典解释为：“把一些相关事物的联系点贯穿起来的某种东西，特别是一连串想法，一个故事或是贯穿整个过程中的某个想法或事件的影响”这个解释在1642年就有了！
three-finger salute	/n./ 与Vulcan nerve pinch同义。
thud	/n./ \n1.一种metasyntactic variable，据说标准的语法词有`foo', `bar', `thud', `blat'\n2.表示字符`#'。
thumb	/n./ 拇指。滚动条的滑块。把它称作拇指是因为用滑块滚动窗口上的文本和用拇指在书上扫过很类似。
thunk	/thuhnk/ /n./ \n1. P.Z.Ingerman1961年发明了thunks，一种将实际参数和它的形式化定义绑定在一起的的机制，应用在了Algol-60的程序调用上。他对thunk的解释是“一段用来提供一个地址的代码”。当调用一个程序时，如果它的形式参数是一个表达式，编译器会生成一个thunk，它用来计算表达式的值，把结果保存在一个标准的位置。\n2. 后来广义地指把一个表达式与它的环境绑定，以便需要的时候对它求值。\n3．overlay编程环境中的一个subroutine，它装载并跳跃到正确的overlay。对比trampoline。\n4.指具有和thunk类似特点的人或活动。\n历史注记：关于这个词的起源，有许多象声词方面的说法。最常见的一个是说它在模仿数据撞击堆栈的的声音；另一种说法是在模仿数据撞击累加器的声音。还有说是模仿数据解冻，计算时的声音。事实上，根据发明者的说法，这是当他们意识到运行时参数的类型可以在编译时就确定出来，这样可以简化求值的过程。因此thunk表示是think的过去分词。
tick	/n./ \n1.与jiffy的第一种含义相同\n2.模拟器中一个离散的时间单元。在AI应用中，时间的长度一般不确定，关心的只是事件前后的顺序。这类型的模拟通常称作`tick-tick-tick'模拟\n3.FORTH 语言中的一个单引号字符。
tick-list features	/n./ [Acorn计算机用语]用户坚持要求但从不使用的某种软硬件功能（比如桌面计算器等）。美语里也有类似的语言`checklist features'。
tickle a bug	/vt./ 通过一系列诡异的输入或操作来触发一个很隐蔽的系统bug。“通过设置亮黄色反视频可以触发Paradise显卡的高亮处理bug”。
tiger team	/n./ [美军用语] 1.本意是安全渗透团队。他们都是精通黑客技术的专家，被雇佣来做一些黑客攻击，以检测一个系统的安全性。\n2.最近，更普遍的，指的是官方的检查组或是请来解决问题的救火队员\nTiger team有一类叫做crackers，是专门测试军方计算机装置安全性的，他们通过远程的网络连接或是一些“安全”的线路进行攻击。其中的一些攻击堪称经典，只是由于保密而不为人知。在商业计算机安全领域，这个意思更为准确。
time bomb	/n./ 定时炸弹。logic bomb的一种，会在特定时间被触发。有很多关于定时炸弹的传说，程序员设置在雇主的机器上，当他们被解雇是或是受到一些不好的待遇时就可以触发炸弹。\n有趣的是，唯一一个载入史册的这类事件于1986年发生苏联。一个伏尔加汽车厂的程序员设置了一个定时炸弹，在他休假一周后触发了，结果导致生产线停工了一整天。这是苏联第一个由于黑客行为被告上法庭的事件，因此吸引了大量的注意力。最终那个家伙被判处了3年监禁，而且不允许再从事程序员工作。
time sink	/n./ [可能是类比于`heat sink'（散热器）或`current sink'（电流宿）]指那种花费极其大量时间的工程。
time T	/ti:m T/ /n./ 不明确指定但双方都能够理解的一个时间，通常有个延后时间的用法T+1。例如“我们那T时候在校园见或是T+1时候在Louie中餐馆见吧”意思是双方相约去晚餐，或者在校园碰头，或者在中餐馆碰头，后者的话就要晚一点点。如果用30代替1，则暗示从校园到中餐馆需要30分钟的路程。参见since time T equals minus infinity。
times-or-divided-by	/quant./ [类比plus-or-minus（加或减）]估计一个项目进度的不确定性时偶尔用到的一个词，出于幽默或是直率。一个软件项目的话，这个因子通常至少是2.
Tinkerbell program	/n./ [英国用语]一种用来扫描接入网络请求的监视程序，当请求来自特定的站点或是某些特定的ID登陆时可以发出警报。名字是来自于`Project Tinkerbell'，一个英国电信在1980s开发的一个实验性的电话窃听程序。
tip of the ice-cube	/n./ 冰块一角[IBM用语]一个很小的不重要的东西的可见部分。这是“冰山一角”的幽默变体。
tired iron	/n./ [IBM用语]功能很完美的硬件，但是的确远远落后于替代它的新产品。新产品在各个方面都有足够大的进步，以至于让老员工觉得自己太土了。
tits on a keyboard	/n./ “键盘上的小山雀”。指的是键帽上用来做标记提示打字员的小凸起。通常在数字小键盘的5键和字母键的F，J上会有这样的标记。（苹果电脑会在D，K上做标记，一贯的与众不同）。
TLA	/T-L-A/ /n./ [三字母缩写]1.计算机领域一类烦人术语。\n2.任何令人费解的缩写，包括MCA, FTP, SNA, CPU, MMU, SCCS, DMU, FPU, NNTP, TLA。`ETLA' (Extended Three-Letter Acronym)表示超过三个字母的缩写，`SFLA' (Stupid Four-Letter Acronym)表示愚蠢的四字母缩写。\n"TDM TLA" (Too Damn Many...)该死的TLA是对滥用缩写的一种抱怨。1989年， 对一个著名黑客Paul Boutin采访时，被问到“你认为90s计算机界最大的问题是什么？”他回答道“三个字母的缩写只有17,000种”。
TMRC	/tmerk'/ /n./ The Tech Model Railroad Club（铁路技术模型俱乐部，在MIT），黑客文化的源头之一。Peter Samson1959年整理的TMRC语言字典中的许多词汇后来都成了黑客词汇的基础。（如foo, mung, 和 frob）\n1962年的时候，这个俱乐部的设施已经相当的复杂了（这些年还一直在发展，那时已经有如下的功能了）。仅它的控制系统就拥有大约1200个中继器。在房间的无数地方都有应急断电装置，以防一些意外情况。系统的另外一个特色是控制台上的数字时钟。现在看来虽然很普通，但是在LED（发光二极管）和7段显示器都很昂贵的年代，那真算的上一个奇迹了。如果按下数字时钟的断电装置，时钟停止，表示时间的数字将被替换为一个单词“FOO”；因此TMRC的紧急断电装置也被称为foo 开关\nSteven Levy在他的Hackers一书中给出了一个TMRC早年一些的记录很震撼。TMRC的能量与信号小组包括了大多数早期的PDP-1黑客以及那些后来称为MIT人工智能实验室骨干。30年后，这个组织的联系还很活跃。这个字典就收录了很多最近版本的TMRC词典中的词语。
TMRCie	/tmerk'ee/, /n./ [MIT用语] TMRC的成员。
to a first approximation	/adj./ \n1.[术语]初次近似值。进行数值计算时，近似解往往是通过一些迭代的方法一次次逼近，逐步优化的。从一个较好的估计点出发，可以使结果收敛的更快。\n2.在俚语中，它用来提示后面所说的话只是近似正确，可能还存在很多问题。
to a zeroth approximation	[来自于to a first approximation（第一近似值）]很粗糙的近似值。请与social science number比较。
toad	/vt./ [MUD][MUD用语]1.把一个MUD玩家变为癞蛤蟆\n2.将一个MUD玩家永久性的，完全性的驱逐。这是很严厉的行为，只有特权用户可以。这样做时通常也会导致很多争论。参见frog, FOD。
toast	1.名词。任何完全失控的系统或组件，特别指那些刚刚被搞坏的。如“呃……，串口卡貌似挂了”\n2.动词。不小心把一个系统搞崩溃，特别指那种必须手动重启才能恢复的故障。请与fried比较。
toaster	/n./ \n1.对嵌入式微型控制器来说设计很蠢的应用程序。通常暗示程序所用的技术不合适。\n2.配置非常低的电脑。“这个程序一般的烂机子是跑不了的”。参见bitty box, Get a real computer!, toy, beige toaster\n3.苹果电脑，特别是经典的苹果机。一些人认为这也隐含这第二种含义。\n4.外围设备。
toeprint	/n./ 小号的footprint。
toggle	/vt./ 转换1bit的状态状态；把0变为1或把1变为0.来自于`toggle switches'（触发开关），比如常见的电灯开关。toggle的本意是保持在它所触发的那个方向，而这里是双向的，有所不同。对于1个bit，有四种操作，置0，置1，保持，转换，toggle指的就是最后一种。（数学上看，就是说toggle是一个一元的布尔函数，但用toggle更有意思）。
tool	1.工具软件。一种主要用来创建，操纵，修改或分析其他软件的软件，比如编译器，编辑器或交叉参照程序。与app, operating system相对\n2.[Unix用语]一种具有简单，“透明”（通常是纯文本）接口的程序，目的是为了通过编程的方法与其他工具结合起来使用。参见filter, plumbing\n3.[MIT用语，一般只是学生用]动词。工作，学习。TMRC字典的解释是“把大脑放在磨刀石上”。参见hack\n4.[MIT用语]名词。指学了很多知识，却很少创造与探索的学生。（MIT的一个学生幽默杂志就名叫Tool and Die）。
toolsmith	/n./ 刀具工。与一个熟练工相当的软件；或是编写程序员使用的工具软件的人。许多黑客认为编写工具软件比编写应用程序更有趣。要知道这是为什么参看uninteresting。Jon Bentley在他的著作More Programming Pearls（算法珠玑）曾引用过DEC公司的Dick Sites一句名言“I'd rather write programs to write programs than write programs”（我更喜欢编写程序去写程序而不是编程序）。
topic drift	/n./ 跑题。这个词用来形容网络论坛上讨论问题时跑题的倾向，或是这种现象。通常是某个参与讨论的用户礼貌的提醒大家不要跑题。
topic group	/n./ 与forum（论坛）同意。
TOPS-10	/tops-ten/ /n./ DEC公司为他们虚构的PDP-10机器打造的专有操作系统，曾经是黑客的最爱，但现在已经完全绝迹了。这是黑客“博物馆”的源泉之一。参见ITS, TOPS-20, TWENEX, VMS, operating system。它有时也被称为BOTS-10（来自bottoms-ten，倒数前十），因为讨厌它自夸为前十。
TOPS-20	/tops-twen'tee/ /n./ 参见TWENEX。
tourist	/n./ [ITS用语]系统访问者，特指那些远程登陆进来只做些诸如发邮件，玩游戏等简单事情的人。比luser（攻击失败者）还要低一级。黑客经常把这个词拼写为turist，或许是为了和luser更相似（也可能是由于ITS文化对六字母单词的偏爱）。请比较twink, read-only user。
tourist information	/n./ 在线显示的信息中一些没有直接价值的部分，但也可能有助于用户理解软硬件后台运行的一些机理。一个信息是否划归这一类往往取决与用户当时想找什么。在MA-DOS目录下与字节无关的东东可以算是；在Unix系统上执行ps(1)命令时显示的时间信息也算是。
touristic	/adj./ tourist的形容词形式，通常带有贬义色彩。也常拼写为`turistic'或 `turistik'。
toy	/n./ 计算机系统，使用时通常需要修饰词\n1.nice toy。好玩意儿。能够很好支持评价者的黑客风格\n2.just a toy。玩具而已。对评价者的来说有些不足的机器。这倒不算是贬义的评价。玩具表示它至少能够带来乐趣。这种评价往往和一个人的期望大小有很大关系。Cray XMP的用户有时觉得Cray-1就是个玩具而已。但所有的RISC架构的机器对他们来说都是玩具。参见Get a real computer!。
toy language	/n./ 玩具语言。一种不能满足一般目的的编程，但对于教学或是证明某种计算机科学理论的很有意义的语言。当这种语言被推动作为一般的编程解决方案是会闹一些笑话。参见bondage-and-discipline language。经典的例子是Pascal。图灵机也可以说是一种玩具语言。参见MFTL。
toy problem	/n./ [人工智能用语]玩具问题。对一个挑战性难题有意的过度简化，以便研究或测试算法。有时也有带有贬义。参见gedanken, toy program。
toy program	/n./ 玩具程序。\n1.一个很平凡的可以被完全理解的程序。比较noddy\n2.一个生命周期内主要在初始化代码的程序。
trampoline	/n./ 蹦床。一种很难理解的技术 ，可以在一些HLL和program-overlay（程序覆盖？）的实现中找到。这种技术会在程序运行时产生一小段可执行代码对象，这样就可以实现代码段之间的跳转。产生的这小段代码对象也被称为trampolines。这玩意儿的执行效果很难理解。有句关于蹦床的名言：不把你大脑搞晕的蹦床不是真正的蹦床。参见snap。
trap	中断。\n1.名词。一个程序中断，通常由于用户程序的意外情况所引起。中断时，一般操作系统都会做一些处理，然后将控制权交给用户程序。\n2.动词。引起一个中断。“这些指令会导致一个中断”“这个监视器会对所有输入输出指令产生中断”。
trap door	/n./ （也可写作trapdoor）\n1.与back door同义。后门\n2.[术语] trap-door function（陷门函数）指的是容易求值但难于求逆的函数。这类函数在密码学中，特别是公钥密码体系中很重要。
trash	/vt./ 销毁某些内容（指一个数据结构的），最常见的同义词包括：mung, mangle, 和 scribble。
trawl	/v./ 通过筛选大量数据，寻找自己感兴趣的东西（例如：网络帖子，FTP档案或者行话文件）。
tree-killer	/n./ \n1.	打印机\n2.	浪费纸张的人。应该从广义上来解释这个称谓；“浪费纸张”包括制作spiffy（漂亮）但content-free（内容空洞）的文件。因此，大多数的suit都是tree-killer。对这个词一种消极的理解是指环王中的真正的tree-killer。参见 elvish, elder days。
treeware	/tree'weir/ /n./ 打印输出，书籍，和其他从打印输出制作的信息。与tree-killer比较，参见documentation。
trit	/trit/ /n./ [与‘bit’类比]一种基数，相当于3位；在三个等可能的结果中选择一个时转移的信息量(又见bit)。例如，Trits出现在可能取三个值的标志(flag)中,即是、否和不确定。Trits有时被形象的叫做“三态位元”。1trit可以不太严谨地看成“一个半bit”，尽管它线性等价于1.5849625 bits。
trivial	/adj./ \n1.过于简单而不必详述。\n2.不值得浪费一个发言者的时间。\n3.虽然很复杂，但是解决方法已经很好的给出了，只要不是白痴，任何人都可以解决它\n4.任何一个已经解决的问题（对黑客来说trivial通常等价与“我曾经见过”）黑客的琐碎的概念与非黑客的十分不同。见nontrivial, uninteresting\n物理学家理查德费曼，他具有惊人的黑客特质（见他的随笔"Surely You're Joking, Mr. Feynman!"（费曼先生，你一定是在搞笑）中的"Los Alamos From Below"），他对trivial theorem（平凡理论）的定义是“任何已经被证明的理论”。
troff	/T'rof/ or /trof/ /n./ [Unix用语]Unix文本处理的幕后操纵者。一个格式化照相排版的程序，最早实在PDP-11用汇编语言写的，后来Joseph Ossanna用c语言将其改写，是ROFF的原型。（ROFF代表to run off a copy制作副本）ROFF又是后来Jerome Saltzer编写的Multics' RUNOFF的原型。有一个相伴的程序nroff用来格式化终端和行列式打印机的输出。\n1979年Brian Kernighan修改了troff使它能够操作照相排版的程序而不是原先的Graphic Systems CAT（图形系统计算机辅助转换）。他在论文("A Typesetter-independent troff," AT&T CSTR #97)中描述了troff的工作原理，解释了它的稳定性，讨论了这个程序的一些明显的缺陷——烦人的输入语法，一些地方有些神秘，没有在文档中解释的属性，对计算机资源的大量占用，以及代码的丑陋费解。最后Kernighan总结：\n尽管如此，但瑕不掩瑜。Troff已经被证实是一个非常健壮的工具，忍受了难以想象的考验，诸如各种预处理程序，以及一些最初设计之外的应用环境\nTeX和桌面排版系统那个的成功使得troff的重要性大大降低，但是在黑客的博物馆里，troff足以拥有一席之地，它具有一个好的程序应该拥有的许多性质，这是在任何时候都令黑客钦佩的。
troglodyte	/n./ 穴居人。[Commodore公司用语]\n1.整天宅在自己屋里的黑客。也有人用Gnoll（豺狼人，来自于漫画Dungeons & Dragons）\n2.喜爱某种过时的计算机环境的怪人。在Usenet和电子邮件讨论黑客词典2.X.X版本时，“ITS troglodyte”这个词引起了一些争论。至少由一个人认为这个词是褒义的。
troglodyte mode	/n./ 穴居人模式。[赖斯大学用语]编程时开着灯，戴着太阳镜，终端的黑白颜色反转（为了保护眼睛，因为可能已经连续盯着那玩意儿好几天了）。建议在一个角落放一个立体声音响大声吵吵，不过这不是必须的。
Trojan horse	/n./ 木马。[由著名的MIT黑客，美国国家安全局的幽灵——Dan Edwards所创造]一种恶意的破坏安全的程序。它通常伪装成有用的东西，比如压缩文件，游戏甚至杀毒软件！参见back door, virus, worm, phage, mockingbird。
troll	/v.,n./  [出自Usenet 组alt.folklore.urban] 在Usenet上说一些设计好的话, 目的是吸引某些预料到的回复或flame. 从"trolling for {newbie}s"一说演变而来, 这个说法则来自于主流词汇trolling, 指一种钓鱼方法 -- 将鱼饵放到可能有鱼的位置以期它们上钩. 一个设计得好的troll可以让niebies和flamers显得更加离谱, 然而更加机智和有经验的人则能看出这个troll的真相. 如果你没看懂这个笑话, 那你就是这个笑话所取笑的对象.
tron	/v./  [NRL, CMU; 可能出自电影"Tron"] 变得不能通过除email或talk(1)之外的方式来联系, 尤其当某人在正常情况下能通过电话联系或直接找到他/她时. 常用在过去时态中, 如: "Ran seems to have tronned on us this week", 意为"这周似乎找不到Ran了." 也有种说法是"tron mode"; 对比spod.
true-hacker	/n./  [ 从科幻爱好者的trufan一词类比而来] 一个体现了黑客文化的基本价值的人, 尤其是能力以及对其它黑客的帮助. 具有极高的赞赏之意. 对比 {demigod}, 与 {munchkin} 相对.
tty	/T-T-Y/, /tit'ee/ /n./  \n1. 一种电传打字机终端, 特点是很吵,字符集很有限,以及打印质量差. 参见 {bit-paired keyboard}.  \n2. [especially Unix] 任何一种终端; 有时用来指代那个控制一个给定工作的终端.\n3. [Unix] 任何一个序列端口, 不论与之相连的设备是否是终端; 得名的原因是在Unix下这样的设备的名字一般以tty开头. 释义2与释义3容易混但是没啥关系.
tube	1. /n./ CRT终端.  从不指主流语汇中的电视; 真正的黑客不看电视, 除非为了看Loony Toons, Rocky & Bullwinkle, Trek Classic, the Simpsons, 以及 the occasional cheesy old swashbuckler movie.  \n2. [IBM] 向他人的终端发送一个副本. 如"Tube me that note?"
tube time	/n./  在终端或控制台上花的时间. 比hacking time包含的范围更广; 常用于指某人使用得最多的环境. 如 "我发现我在读邮件上花费了太多的tube time."
tunafish	/n./  [来自一个古老的笑话, 该笑话出现在最初的BSD 4.2版发布的使用手册中与tunefs(8)相关的部分中. 后来这个笑话被删去了.]
tune	/vt./  [出自汽车机械或音乐用途] 为一个特定的环境来优化一个程序或系统, 尤其通过调整那些专门作为hook用来调整的数量参数, 比如, 在C语言中修改"#define"这样的行. 可行的用法是 "tune for time"(fastest execution), "tune for space' (least memory use), 或 "tune for  configuration" (most efficient use of hardware).  \n见 {bum}, {hot spot}, {hand-hacking}.
turbo nerd	/n./ 见 {computer geek}.
Turing tar-pit	/n./  \n1. 一个位置, 在此处任何事都可能发生但是我们所关心的事情都不切实际. 也就是说, 它是理论上可行的 -- 但是实际上, 你越想做些实际工作, 你就会在它的缺陷中越陷越深. 对比 {bondage-and-discipline language}.\n2. 每年一次的 {holy wars} , 关于语言A还是语言B更加powerful这一话题. 
turist	/too'rist/ /n./  Var. sp. of {tourist}, q.v.  也有形容词形式"turistic". 可能是受到 {luser} 和 "Turing" 的影响.
tweak	/vt./  \n1. 轻微变化, 通常指一个值. 也可作为 twiddle的同义词. 如果一个程序几乎是正确的, 你可以只是不断的tweak它直到它正确, 而不是精确地找到问题所在. 见 {frobnicate} 和 {fudge factor};  以及 {shotgun debugging}.  \n2. {tune} 或 {bum} 一个程序; 常在 U.K. 使用.
tweeter	/n./  [University of Waterloo] 同义于 {perf}, {chad} (sense 1).  \n这个词(与woofer一样)自从1972年就在Waterloo被使用了但是在其它地方则不知道. 在audio jargon中, 这个词指的是在hi-fi上的三重音.
TWENEX	/twe'neks/ /n./  DEC的TOPS-20操作系统 -- PDP-10上受欢迎程度第二的系统 -- 被大多数PDP-10黑客所喜爱, 超越了TOPS-10.
twiddle	/n./  \n1. 波浪号 (ASCII 1111110, `~').  也被称为'squiggle', 'sqiggle' 和 'twaddle', 但是twiddle 最常用.\n2. 对程序所做的一个很小但影响很大的改动. 通常修补了一个bug并产生了数个新bug (参见 {shotgun debugging}).\n3. /vt./ 小规模地修改某个东西. 比如按位(Bits). 
twilight zone	/n./   [IRC] 概念上指IRC管理员们在cyberspace上生存的地区. 一个op据说拥有一个"与twilight zone相连的连接".
twink	/twink/ /n./  [UCSC] 等价于 {read-only user}.  
twirling baton	/n./  [PLATO] 一组符号序列,它模仿一个旋转的指挥棒. 
two pi	/quant./ 要完成论文所花的年数. 例句: "他开始写论文, 然后在2 pi年之后..."
two-to-the-N	/quant./  比N更大的量, 但是比infinity要小. 例如, "在吃午饭之前, 我有2-to-the-N件事要做." 意思就是你大概不会出现了.
twonkie	/twon'kee/ /n./  与Twinkie等价的软件(各种高糖分的垃圾食品, 或者(首字母的t小写, 用在gay的俚语中)指与chick等价的男子; 一个额外的没用的feature, 为的是看起来sexy并适用于marketroid(对比{Saturday-night special}).  
u-	/pref./ micro-的简写，应用于计量单位的技术用语，用于其它方面的行话。源于希腊字母“mu”，“micro”的第一个字母（与英文字母“u”相似）。
UBD	/U-B-D/ /n./ [User Brain Damage的缩写]这个词用于关闭明显由于用户的错误使用而产生的故障报告。比较pilot error，反义PBD。参见brain-damaged。
UN*X	/n./ 用于书面语中，表示Unix家族的操作系统（AT&T的一个商标）以避免具体指出是哪一个变体。讽刺的是，现在律师认为这种用法不具有法律效力，但是无论如何，星号用法还是得到了确立。据说在某些信仰中，不完整的拼写会有一定的心理作用，比如犹太教中神的名字从来不写全。例如，‘YHWH’或者‘G--d’的使用。参见glob。
undefined external reference	/excl./ [Unix用语]本意是来自Unix 连接器的信息。用在谈话中表示一个讨论中出现的松散的结尾或者模糊的引用。
under the hood	/adj./ [飞车党用语] 1 用于介绍一个产品（硬件，软件或者想法）的基本使用。意味着应用从表面来看并不是直观和明显的，但是讲话者将会使听者理解它。“让我们现在来深入地了解一下under the hood怎样……”\n2．也可表示实际上比它表面看起来要简单：“under the hood，我们只是fork/execing shell.”\n3．在底盘内部，如“under the hood, 这个家伙有40MHz 68030！”。
undocumented feature	/n./ 参见feature。
uninteresting	/adj./ 1 上述问题，尽管重要，但是可以简单的通过给予充分的资源来解决。\n2 也形容一个问题的解决方案不仅在技术上没有超越，而且设计和编码都很无趣。\n黑客们将没有意思的问题看做无法忍受的对时间的浪费，应该让更平凡的人去做。而真正的黑客们（见toolsmith）将没有意思的问题进行充分归纳使得其变得有趣进而解决这些问题，这样便将原来的问题作为一个特殊案例来解决（而且必须承认，有时候会将一个小土丘变成一座大山，或者将一个大山变成一个地质板块）。见WOMBAT, SMOP；类比toy problem， 反义interesting。 
Unix	/yoo'niks/ /n./ [用作者的话来说，与Multics有点点联系，最早时“UNICS”]（另“UNIX”） Ken Thompson于1969年在贝尔实验室留下Multics基础之上开发的交互式分时系统。最初只是为了在他那即将报废的 PDP-7上打游戏。C语言的发明人Dennis Ritchie也被认为是这一系统的合作者。当1972年到1974年间，Unix几乎完全使用C语言来实现，使得它成为第一个原代码可扩展的操作系统。这成为了Unix发展历史的转折点。Unix随即在不同人的手中经历了转变与发展，最终成为一个独一无二的灵活并且开发者友好的环境。到1991年，Unix已经成为世界上最为广泛使用的多用户多用途的操作系统。很多人将这当成黑客世界对电脑工业界的最大胜利。（见Unix weenie 和 Unix conspiracy的对立观点）。见Version 7, BSD, USG Unix, Linux. \n一些人对于这个单词应该是“UNIX”还是“Unix”而感到迷惑，这两种形式都很常见并且可以交替使用。Dennis Ritchie 认为“UNIX”拼写最初出现在CACM1974年的论文“UNIX 分时系统”因为“我们有新的排字机而且troff刚刚发明，我们对于能够使用小型大写字母而感到兴奋”。不久，dmr尝试在贝尔实验室的一些论文中将拼写改为“Unix”，基于这个词并不是首字母缩略词。他失败了，并且最终他的拼写没有得到承认。所以，今天的商标仍旧是“UNIX”，所有的大写都基于旧的用法，黑客词典中使用“Unix”是为了满足dmr的愿望。
Unix brain damage	/n./ 为了与Unix系统交互而去破坏一些非Unix系统伤的网络程序（典型如邮件系统）。如果无法交互的原因是Unix没有遵照发布的标准，这么做的Hack毫无疑问可被称为“Unix脑损伤”。不过这么做确实也是可以理解的，因为使用其他（少数的）系统的机器较少，相对于成千上万的Unix系统来所改起来更为容易。\nUnix脑损伤的一个例子是邮箱服务器的kluge将空的换行（Unix 换行）识别为网络标准换行（这是一个跟随换行的回车）。这样的bug能够甚至可以让jock（编程高手）郁闷。
Unix conspiracy	/n./ [ITS]根据长期流行于ITS和TOPS-20迷之间的共谋理论，Unix的成长是一个密谋的结果，这一密谋起源于二十世纪七十年代的贝尔实验室，他们计划使得AT&T的竞争者依赖于一个未来发展受限于AT&T本身的系统，束缚住他们的发展。这一计划将通过发布一种看起来便宜、轻便但同时相对不可靠和不安全的操作系统（所以需要持续从AT&T那里得到更新）来完成。1984年一篇back door entry引用的论文极大的促进了这一理论的发展。\n在这种视角下，Unix简直就是第一代电脑病毒之一（见virus）,一个通过用户和市场力量，传播给计算机的病毒，而不是直接的通过磁盘和网络感染了电脑。这一“Unix 病毒”理论的追随者们喜欢引用这样的事实：著名的“Unix是蛇油”的引用是从DEC的总经理Kenneth Olsen的嘴里说出来的，而且是在DEC开始积极的宣传他自己家族的Unix工作站之后不久。（Olsen 现在宣称这一引用是错误的）。\n[即使这真是一个阴谋，它在1990年之后也完全脱离了阴谋策划者的控制。AT&T将它的Unix操作卖给了Novell，从此Linux和其他免费的Unix开始占露头脚占据市场。--ESR]
Unix weenie	/n./ [ITS]1 对“Unix wizard”的贬损的使用，通常存在于由于需要而使用Unix但是更欣赏其他同类产品的黑客们之中。这意味着尽管人们可能认为掌握Unix arcana是一个神奇的技术，但是唯一涉及到的真正的技术是容忍（和沉醉于此的低品位）不连贯以及没有必要的复杂性，这些被认为滋生了很多Unix 项目。“这个shell script试着用69种方式解释他的论点，它一定是用一个真正的Unix Weenie写成的。” \n2．一个对那些对Unix进行盲目的赞赏的人们的一种蔑称。经常以“愚蠢的Unix weenie”出现。参见Weenix, Unix conspiracy，weenie。
unixism	/n./ 一段依赖于Unix系统代码，或技术。主要是依赖Unix对多任务环境的的保护机制和process-spawn的低开销。通常的Unixism包括Fork(2)的免费使用；一些无事实证明但是众人皆知的Unix函数库的特点，如假设Stdio(3)在其他地方得到了支持；对系统调用低副作用的依赖（例如，使用参数为零的sleep(2)来向调度程序说明你希望放弃你的时间片）；刚刚置入的内存为零的假设；以及不释放内存不会引起碎片问题的假设。比较vaxocentrism;另见New Jersey。 
unswizzle	/v./ 见swizzle。
unwind the stack	/vi./ [术语]在执行过程语言的过程中，指的是废弃一个栈以及保存在栈中数据。在C中，这通过longjmp/setjmp来实现。在LISP中，这通过throw/catch实现。另见smash the stack. \n2．人们也把快速处理一系列问题称作unwind the stack：“嘿，。。，我们吃饭吧。我在unwind the stack，马上就好”。
unwind-protect	/n./ [MIT:来自于LISP操作者的名字] 一个你必须在离开或者完成项目之前执行的任务。“我有一个unwind-protect,要找我的导师”。
up	/adj./ \n1. 工作状态良好。例句，“向下的电梯运行正常”。反义down. \n2 “bring up”：创造一个工作愿景并开始实施。\n3 “come up”：为工作做好准备。
upload	/uhp'lohd/ /v./ [术语]通过数字通信链接从一个小的或外围的“客户”系统向一个大的货中心的“主机”转移项目或数据。当然其他方向的转移被称为download (下载.但请注意关于ground-to-space comm的注释）。\n2 [特殊用法]把人类思维的关键模式及算法写进计算机。一些人相信这些模式和算法捕捉了自我带有美好预期的前景认知的全部精髓。
upthread	/adv./ 先前讨论（见thread）。如，“above”。“像Joe指出upthread…”另见followup.
urchin	/n./ 见munchkin.
URL	/U-R-L/ or /erl/ /n./ \n统一资源定位器，一个识别互联网上文件或资源地址部件。这一条目主要是来记录这一术语通常发音为/erl/, 或 /U-R-L/的事实（后者更多）。
Usenet	/yoos'net/ or /yooz'net/ /n./ \n[名字意思是`Users' Network'（用户的网络），原先的拼写是USENET，但是这个混合的形式更被广泛地接受]是主要被Unix机器支持的分布式bboard（网络留言板）。最初是被Steve Bellovin, Jim Ellis, Tom Truscott, and Steve Daniel在杜克大学使用的。随后在世界范围内广泛传播，现在可能是最大的分布式信息平台。早在1996年，它就服务于多于10000个的newsgroups以及平均每天超过500兆（相当于几千页纸）的新的技术文章，新闻，讨论，交谈，以及flamage。\n到了因特网成为主流的年代（1994），原始的Usnet的UUCP传输逐渐不被使用（参见UUCPNET）,几乎所有的Usenet连接都是因特网联接。许多网络新手和记者开始引用因特网newsgroups尽管Usenet曾经并且一直是另一个因特网服务器。这个忽视很大程度上惹恼了有经验的Usenet用户.
user	/n./ \n1用电脑做实际工作的人，用它作为一个方法而不是终端。以及一些付钱使用电脑的人，参见real user. \n2 一个相信你告诉他任何事情的程序员，问很傻问题的程序员。（GLS评论：这有一点不公平。Users的问题有时候是很深刻的或者是经过深思熟虑的。不过大部分时候是很无聊或者很愚蠢的问题，很明显是因为user并没有多思考一些或者在打扰维护者之前没有看文件）。参见luser。\n3能够很有技巧的使用程序，但没有深入程序的内部的人。他们会报告缺陷却不去想办法弥补不足。\n在这个术语背后的一般理论是与程序打交道的人有两类：就是黑客与lusers。Users从某总程度上被黑客看不起因为他们不懂得系统的完全的分支。很少有users是真正的赢家。这个术语相对就是一个：一个有技巧的黑客可能是某些他不去hack的程序的user。一个LISP 黑客可能维护LISP或者使用LISP(但是具有黑客的技能)。一个LISP的user就是使用LISP的人，不管是不是具有技巧。因此这两个术语有一些重复，很细微的区别必须靠上下文来解决。
user-friendly	/adj./ 也就是对程序员不友好。通常被黑客使用时带着批评的口吻，用来形容系统紧紧的束缚了用户以至于让更有经验的有更多知识的人用起来很痛苦。参见menuitis, drool-proof paper, Macintrash, user-obsequious
user-obsequious	/adj./ 是user-friendly的强调格式，意味着一个系统是如此冗长，顽固，而且被简单决定的，以至于几乎不能用。设计了一个任何蠢人都可以使用，而且只有蠢人才享用的系统。参见WIMP environment, Macintrash
USG Unix	/U-S-G yoo'niks/ /n./ 参见AT&T的Unix在第七版之后的商业版本，特使是系统3与系统五的版本1，2以及3。被叫做这个名字是因为在这些版本大部分的存在时间中，AT&T的支持的工作人员被称作Unix Support Group。参见BSD, Unix.
UTSL	/n./ [Unix用语]“Use the Source luke”的缩写（在星球大战中，“Luke，使用武力”）。这个词类似于RTFS的第一个意思，但是更文雅一些。这个通常被用来建议某人面对困惑时去读源代码，而不要指望那些意义不大的帮助文档，或Usenet提问等待高手去解答。\n曾经在以前的一段时间，任何一个运行的Unix的人都有源代码。在1978年之后，AT&T加强了控制，因此理论上讲，这个谴责只能用在一些获得Unix源代码授权的人。但实际上，Unix源代码的非法传播（完全是为了引用）是普遍存在的，以至于人们都可以毫无顾虑地在网络上发布。\n现在，免费的Unix复制品已经非常广泛地被传播，每个人都可以合法的看到源代码。最广泛的传播无疑是Linux, 以及NET/2和4.4BSD的变种。非常便宜的带有源代码的商业的Unixes，比如BSD/OS更是加快了这种趋势。
UUCPNET	/n. obs./ 储存和传送的网络包括了世界上所有联网的Unix电脑，以及其他的一些运行UUCP软件复制品的电脑。任何一台仅仅通过bang path就可连接到的电脑都是在UUCPNET。由于九十年代很简单的因特网的传播，这个术语已经被认为是荒废的了。为数不多的一些保持UUCP的连接的是一些到因特网非常慢的通道，而不是自主的网络。参见network address
V7	/V'sev'en/ /n./ 参见Version 7
vadding	/vad'ing/ /n./ [来自于VAD，这是ADV（一个游戏）的一个重新排列，通常这么做是为了避面被管理员删除]黑客们的一种休闲活动，探索一个大楼的秘密——地下室，房顶，货运电梯，天花板，蒸汽管道等等。一些人甚至为此去学习锁匠技术。这个词是1970s末才流行起来，在此之前通常叫做hacking，MIT现在还用这个词。\n最疯狂和危险的探索被称为，电梯竞技，也被称为电梯冲浪，在电梯顶上活动，在运动的电梯间跳跃……。年轻人，被自己在家里干傻事啊。
vanilla	/adj./ [来自于美国冰淇淋的默认口味]表示普通的，标准的。形容食物时，通常并不意味着带有香草口味。比如vanilla wonton soup表示普通的馄饨汤，与酸辣馄饨汤相对，并不表示在馄饨里加了香草精之类。这个词和canonical有所不同。后者具有默认的含义，前者仅有普通之意。
vannevar	/van'*-var/ /n./ 错误的技术预言或技术构想，特别是由于隐性的假设技术是线性发展的，而且把技术之间看成是彼此孤立的而犯的错误。实际上学习曲线往往是高度非线性的，革命性的突破也经常发生。这个词起源是Vannevar Bush曾预言“电脑”将会像帝国大厦那样庞大，而且需要尼亚加拉瀑布那种规模的的冷却系统为它的电子管散热。事实上他作此预言时，半导体已经初露端倪了。还有一个著名的例子是1970s末，一篇论文计算了芯片上集成电路密度的极限，但5年以后，工业界的标准密度都比那个极限密度要高。
vaporware	/vay'pr-weir/ /n./ 在发布前很久就公开宣传的软件（有可能最终夭折，无法面世）。参见brochureware
var	/veir/ 或/var/ /n./  Variable的简写，变量
VAX	/vaks/ /n./ \n1.[来自于Virtual Address eXtension（虚拟地址扩展器）]工业史上最成功的微型电脑之一，能跟它媲美的或许只有它的前身PDP-11。从1978年问世到1986年退出历史舞台，VAX是黑客最喜爱的机器，特别是1982年发布了4.2 BSD Unix操作系统之后。VAX最吸引人的是它的一个庞大的指令集，对汇编程序员非常有用。不过这个优点在后来的RISC架构中变成了一个不利因素。\n2.英国一种吸尘器。之所以在这里引入这个解释，是因为这种吸尘器的广告词“Nothing sucks like a VAX!（没有东西比VAX更能吸。）”suck也有恶心的意思，这句话也可以理解为“没有东西比VAX更恶心”。于是这句话成了RISC拥护者的口头禅。据说DEC公司甚至与吸尘器公司签署了协议，允许他们代理销售VAX电脑，以换取他们不在美国注册VAX吸尘器的商标。\n事实这个广告词的原始版本是Nothing sucks like Electrolux（没有东西比Electrolux更能吸）。它已经成为一个经典的广告案例（写进了教科书），说明不了解当地的语言可能会造成很大的损失。但是1996年，Electrolux的经理说，他们1960s使用这个广告时，知道这个suck的双关含义，这么用恰恰是为了吸引人们的注意力。以至于后来VAX吸尘器公司也抄袭了这一创意。一些黑客还研究了1986-1987年间，VAX公司使用这个广告之后对产品销售的提升作用。另外1992年，新西兰还有类似的电视广告。
VAXectomy	/vak-sek't*-mee/ /n./ [类比于vasectom（输精管切除）]一种VAX精简版。比基于RSIC技术的工作站如SPARC要慢很多。因此如果有替代品的话，VAX removal一定很欢迎。
VAXen	/vak'sn/ /n./ [来自于oxen，或许受到了vixen的影响]是VAX的复数形式。参见boxen
vaxherd	/vaks'herd/ /n. obs./ [源自 ‘oxherd’牧羊人] VAX 操作员.  因为VAXen 实际上聚集成群,技术上称为”聚类”, 图像会得到加强。
vaxism	/vak'sizm/ /n./ 一段出现在关键区域的展示vaxocentrism的代码. 比较PC-ism, unixism。
vaxocentrism	/vak`soh-sen'trizm/ /n./ [类似于 "ethnocentrism" （种族中心主义）] 一种概念疾病, 它使那些坚持依照某些只在VAXen下有效(特别在Unix下)而在其他情况下失效的假设,进行编码的C程序员感到很痛苦.常见有以下几种假设。\n1.假设废弃一个空指针的假设是安全的, 因为所有bits都自动被置为0, 0地址也是可读的,值为0。问题: 这可能在VAX之外的机器上造成非法地址异常VAXen,甚至在VAX机器上也可以，如果使用的不是BSD操作系统。一般地, 即使在BSD系统的VAX上，这样编程也是出于一种大意的假设，而不是深思熟虑的结果。\n2.假设字符有正负之分\n3.假设任一类型的指针都可以自由地被转换为另一种类型的指针. 这个假设的更强的形式是认为所有指针相同大小,相同格式的。这就意味着你不用担心在调用或转换时的类型问题. 问题: 这使具有多样指针格式的机器或基于word（字）的机器失效。\n4.假设程序的参数存储在内存堆栈中时，是连续地而且以严格地递增或递减的次序\n5.假设指针和整数类型具有相同大小, 而且这个指针可以表示整数变量(反之亦然) 没有被删或没损坏地返回. 问题: 这在带有奇异的指针格式的分段系统结构或基于word（字）的机器失效\n6.假设任何大小的数据类型可能开始于存储中的任何字节地址(例如: 你可以在一个临时的字符地址上自由地构造或解除字的或更大对象的指针).问题:这在很多对HLL的执行速度做了优化的架构（如RISC）失效,而且可以导致非法地址异常或总线错误\n7.假设在类型的终点没有填充, 在一个数组中你可以从上一个分量到下一个的第一个字节进行移动. 这不仅是依赖于机器还依赖于编译器\n8.假设存储地址空间是整体平坦的,而且引用数组时foo[-1]总是有效的.问题:这在0或, 地址分段的机器上（比如Intel芯片）会失效(分段被普遍认为是脑残的设计,见moby).\n9.假设对象可以任意大. 问题:这在分段系统结构和在非虚拟地址环境下失效\n10.假设堆可以跟内存一样大. 问题: 这在分段系统结构或几乎任何其他没有虚拟定址和分页堆的系统中失效\n11.假设一个数据结构在不同的机器上以相同的顺序存储的. 问题: 这在big-endian（大尾）机器上失效\n12.假设比较不同不在同一数组的不同对象的指针或比较不同类型的两个对象的指针是有意义的. 问题: 前者在分段系统结构中失效,后者在具有多样指针格式的机器或基于word（字）的机器失效\n13.假设一个int是32比特,或(几乎等价) 假设sizeof(int) == sizeof(long).问题: 在PDP-11s, 286-based系统中失效，甚至在386和68000系统的一些编译器下也会失效\n14.假设argv[]是可写的. 问题: 在许多嵌入式系统的C环境下甚至某些Unix的环境下失效\n尽管一个程序员从来都没见过VAX，也可以被称作是vaxocentrism.上面的一些假设(特别2-5)在PDP-11（最早的C语言机器）有效。在VAX出现之前，它已经像VAX那样把一些程序员“惯”出了毛病.术语“vaxocentricity”和“all-the-world's-a-VAX syndrome”是同义的。
vdiff	/vee'dif/ /v.,n./ 看差异。肉眼寻找两个文件的差异。optical diff也有人用，指把两个几乎完全相同的打印输出叠放在一起，对着灯光看，来找二者的差异。这个方法虽然很土，但甚至可以寻找一些打印图形的区别，而很少有程序实现这种功能。参见diff。
veeblefester	/vee'b*l-fes`tr/ /n./ [来自于一个漫画Born Loser]指的是从事市场营销或管理的一些可憎的人。是黑客的反义词。比较suit, marketroid。
ventilator card	/n./ 与lace card同义。
Venus flytrap	/n./ [名字来自于一种吃昆虫的植物]参见firewall machine。
verbage	/ver'b*j/ /n./ 对verbiage有意的误写，这样变得很像garbage（垃圾）。这个词比verbiage更具贬义。比较content-free。
verbiage	/n./ 如果上下文中涉及到了软硬件系统，这个词指的是那个系统的说明文档。表示那个文档没什么价值。产品背后的机制和文档主题没啥关系。
Version 7 alt. V7	/vee' se'vn/ /n./ 第7版。这是第一个广泛流传的Unix版本，是贝尔实验室1978年发布的。这个词作为一个形容词，形容Unix从那时起所具有的，而且在以后所有版本中保留和兼容的一些功能特性和软件（这是POSIX和IEEE 1003之前的可移植性标准）。需要注意的是，这个名字不完全是因为它是Unix的第七个发布版本。贝尔实验室研发Unix时，习惯以相关文档的版本来确定发布的版本。事实上，只有广泛使用的第六，第七版被称为V[67]。今天本该叫做V10的操作系统实际上叫做Unix研发第十版，简称第十版。因此V7通常被行家称为第七版。参见BSD, USG Unix, Unix。一些守旧的，讨厌商业化和内核膨胀的人仍然坚持V7是最后一版真正的Unix。
vgrep	/vee'grep/ /v.,n./ 肉眼grep（一种字符串查找工具）。用肉眼在一个文档中寻找特定模式的字符串（也称作optical grep）。参见grep。比较vdiff。
vi	/V-I/, not /vi:/ and never /siks/ /n./ \n[来自于Visual Interface（可视化界面）] Bill Joy为早期的BSD系统开发的一种编辑器。这个编辑器成为了Unix编辑器的实际标准，而且是MIT之外黑客毫无争议的最爱，直至1984年EMACS的出现。它可能会令新手很头痛，因为它有两种状态，等待输入文本和等待输入命令。等待输入文本时，任何命令都会被忽略掉，反过来也一样。而且默认的设置也没有提示用户当前处于何种状态。尽管如此，它仍被广泛的使用（在Usenet1991年做的一个调查中，有超过一半的人将它作为首选）。甚至EMACS爱好者也会用它去做发邮件之类的小事（因为它比EMACS启动速度更快）。参见holy wars。
videotex	/n. obs./ 可视图文。一种电信服务，用户付费后可以在电视上收听天气预报。免得他们在刷牙时还得麻烦别人帮他们读。这个主意在没有政府补贴的地方炸开了锅，因为当这种技术成熟的时候，个人电脑已经可以连接到服务器，获得更好更廉价的同样服务了。可视图文技术的策划者过高估计了电脑获得信息，和用户端装置的成本。就像gorilla arm一样，这也成为了一个值得黑客引以为戒的故事。参见vannevar。
virgin	/adj./ 处女。原始的，未被使用，未初始化的状态。也可以指程序中没有使用的缓冲区。
virtual	/adj./ 虚拟.[来自于术语虚拟内存或虚拟镜像]1.logical的近义词，通常指一些人造的，假的对象（如虚拟内存比实际的物理内存要大），使得计算机更方便的去访问一些资源。\n2.模拟的，展示并不真实存在的东西的一些功能。比如一个玩具娃娃就是小孩子的一个虚拟玩伴。与real相反。
virtual Friday	/n./ 虚拟星期五（或逻辑星期五）。假期前的前一天，如果那天不是星期五。例如美国的感恩节总是星期四，感恩节第二天一般也是假日，所以那周的星期三就可以称作是虚拟星期五。类似的还有虚拟星期一。
virtual reality	/n./ 1.计算机通过三维图形或类似数据手套的设备让用户体验与模拟器的交互。参见cyberspace\n2.一种网络交互的形式，融合了角色扮演游戏，交互式戏剧，即兴喜剧以及忏悔杂志的特色。在这种虚拟现实的论坛上（比如Usenet的alt.callahans新闻组或是网络上的MUD），参与者相互之间的交互被记录下来，就像大家一起创作一部小说一样。这样前台主人公的表演可能和后台最初的设想完全不同。有个有趣的定律，不经角色拥有者的同意，你永远无法不可逆转的改变一个角色。否则一切皆有可能。参见bamf, cyberspace, teledildonics。
virtual shredder	/n./ 虚拟碎纸机。在IBM的VM/CMS操作系统上与bit bucket同义。VM/CMS支持虚拟读卡器，虚拟打印机，等虚拟设备。这些设备可以实现Unix通过管道和I/O重定向来实现的那些功能。
virus	/n./ 计算机病毒。[显然来自于生物学中病毒的类比]一种破坏性程序，它可以发现其它程序并将自己的副本植入其中，将其感染，是他们变为Trojan horse（木马）。当这些被感染的程序执行时，被植入的病毒程序也会被执行，这样病毒就可以继续传播。这种过程用户通常难以察觉到。与worm（蠕虫）不同，病毒需要借助一些媒介的帮助才能够感染计算机，比如朋友之间交换程序等（参见SEX）。病毒感染程序之后可能什么都不做，但通常会搞些恶作剧，比如在显示器上打出一些有趣的信息，甚至一些奇怪的图案（参见display hack）。不过也有一些很无耻的病毒，会造成一些无法恢复的损失，比如删掉用户的所有文件\n到1990s，计算机病毒已经成为一个严重的问题，特别是对IBM个人电脑和苹果电脑（这些机器缺乏一些安全机制使得病毒传播很容易，甚至操作系统都会被感染）。于是提供反病毒程序成为了一个产业。媒体对病毒的大量报道甚至造成了许多人对病毒的某种歇斯底里：许多luser喜欢把所有问题都推到病毒攻击上。同时计算机病毒这个词也从黑客的小圈子迅速流行到整个社会（不过通常会和木马蠕虫相混淆）。参见phage，Unix conspiracy。比较back door。
visionary	/n./ \n1.研究计算机视觉的黑客。计算机视觉是人工智能领域的一个方向。通过照相机把图像传给计算机是很成熟的技术，但如何让计算机从图像上获取所需的信息就是一个需要探索的问题了。参见SMOP, AI-complete\n2.[IBM用语]指的是阅读黑客领域之外文献的人。在IBM这样的人显然会被人以敬畏的眼光看待。
VMS	/V-M-S/ /n./ DEC公司为VAX微型电脑打造的操作系统，是黑客博物馆里最为重要的七种操作系统之一。许多Unix迷承认如果没有Unix的话，VMS会成为黑客的最爱。即使这样说，还是会惹恼VMS迷。VMS的一个大问题是处理速度慢——一个黑客曾写过一个打油诗。参见VAX, TOPS-10, TOPS-20, Unix, runic。
voice	/vt./ 打电话，与发邮件或talk mode（网络聊天）相对。
voice-net	/n./ 黑客对电话系统的称谓，与数字网络类比。也常写作Voicenet或V-Net。请比较paper-net, snail-mail。
voodoo programming	/n./ 巫术编程。[来自与George Bush的voodoo economic（巫术经济学）]通过猜测或机械的遵照说明书去使用一个复杂的系统，功能或算法，而并没有真正理解。这往往意味着一种不成功的操作，而且还不知道为什么失败。基本和black magic同义。只是black magic通常没有文档，因此也根本没人理解它。
VR	[MUD] /n./ virtual reality的缩写，与RL相对。
Vulcan nerve pinch	/n./ [来自于电视剧星际迷航]能够导致重启动或跳到ROM监视器的击键组合。比如许多微软系统上是Ctrl-Alt-Del，Sun是L1-A，苹果电脑是<Cmd>-<Power switch>。也叫做three-finger salute。比较quadruple bucky。
vulture capitalist	/n./ 黑客风格的对venture capitalist（风险投资家）的贬义称呼。因为这些人往往通过合同剥夺发明者对自己发明的控制权，而且该发明的大部分获利都被他们占有了。
wabbit	/wab'it/ /n./ [肯定来自于Elmer Fudd的名言You wascawwy wabbit!]\n1.传说中一个早期的黑客技术，大概1978年产生在RPI（里斯尔理工大学）。这个可能受到了1969年一个叫做RABBITS的黑客的启发。他在华盛顿大学的计算机中心的Burroughs 5500上开发了一个黑客程序。该程序每次运行时会生成一个它的副本，把系统搞崩溃。\n2.扩展用法，指任何可以制造出多个副本的黑客技术，但并不是病毒或蠕虫。参见fork bomb， rabbit job, cookie monster
WAITS	/wayts/ /n./ WAITS这个名字的含义从来没有一个官方的解释（演化到这个名字应该经历了很曲折的过程），但它经常被解释为“West-coast Alternative to ITS”（西海岸的ITS）。虽然与ITS相比WAITS的上镜率并不高，但这两个研究群体会经常进行人员和思想的交流，而且WAITS的创新先锋们对许多产品都做出了很大的贡献。比如EMACS的灵感就来自于WAITS's `E' 编辑器——世界上第一个真正“实时处理”的编辑器系列。这种编辑器的编辑命令是不可见的，用户可以在光标处插入或替换字符。另外，现代的多窗口视窗系统据说也起源自那里，而且在XEROX PARC最为自豪的产品——苹果机和Sun公司的工作站的开发中，WAITS的毕业生扮演着关键的角色。bucky bits也是WAITS发明的，因此IBM个人电脑的ALT键可以说是WAITS的遗产。还有一个值得一提的发明（其他地方很少见到类似的东西）是一个新闻获取的接口，允许使用者在他们的计算机终端上阅读、保存或筛选AP（美联社）和UPI（合众社）的新闻；这个系统甚至拥有一种类似现在所谓“多媒体”的强大功能，可以把音频视频型号转换后传递给程序终端。
waldo	/wol'doh/ /n./ [产生于Robert A. Heinlein的一个叫做Waldo的故事]\n1.一种由人遥控的自动化机械，比如机械臂。最初在1940s中期为了核工业而研究开发的，命名为waldo是因为Robert在1942年的书中已经描写过这种东西。现在一般被称为遥控技术，NASA（美国航空航天管理局）对这种技术很热衷，因为他们经常需要它们来维护空间站。\n2.在哈佛（特别是Tom Cheatham和他的学生中），这是一个无意义的语法词，参见foo, bar, foobar, quux
walk	/n.,vt./ 遍历，遍历某种数据结构，特别是数组或链表之类的结构。参见codewalker, silly walk, clobber
walk off the end of	/vt./ 越界。访问数组，列表等时超过了它们的边界，通常会导致off-by-one错误。请与clobber, roach, smash the stack比较。
walking drives	/n./ 早期笨重的磁盘偶尔出现的一种现象。这些磁盘旋转时带有巨大的角动量。如果转动时轴心偏转或者轴承摩擦，加上与地面的某种作用，会使磁盘在地面上“爬行”，一次可以走个几毫米。传说曾有一个磁盘在爬行中把机房唯一门给锁上了，工作人员只好在墙上打了一个洞才进去。这种爬行也可以通过某种特殊的磁盘访问模式来触发（先在一个方向快速的搜索，再慢速的反方向搜索）。那时候的一些黑客发现了这种模式，还举办过磁盘爬行比赛。
wall	/interj./ [WPI(伍斯特理工学院)用语]\n1.表示疑惑，通常略带嘲弄的语气\n2.表示自己没完全明白，希望对方进一步解释。与octal forty比较\n3.[Unix用语，来自‘write all’]给所有登陆的用户发送消息，特别是使用wall(8)工具\n据说第一种含义来自于一个俗语“like talking to a blank wall（好像在对着空白的墙说话）”。可以想象这样一个场景：你花了好长时间给一个人仔细的解释一个问题，然而那个提问的人只是呆呆的看着你，显然完全没有听明白。你可能会幽默的说“墙，你好”，期望他能给一些回应。稍后那个迟钝的人可能还没反应过来，喃喃说道“墙？”。
wall follower	/n./ 只是简单模仿某个成功的算法而没有进行改进。用来形容算法的话，也不一定是贬意的。比如在早期的一次AI（人工智能）大赛中获胜的‘Harvey Wallbanger’。这个机器人成功的解决了许多迷宫问题，方法就是走迷宫时在墙上做标记。这个方法有点丑陋，但确实很有效。事实上与那些在机器人内部建立复杂表示的方法相比较，它的效率还是很高的。但这个词要是来形容人的话，就完全是贬意的了，没有创造力的书呆子。参见code grinder。比较droid
wall time	/n./ \n1.  真实世界的时间，与系统时间相对。\n2.  程序的实际运行时间，与以时间片tick衡量的运行时间相对（在多任务共享处理器的系统上，这两个时间总是不一样的，因为没有一个程序可以完全独占时间片。在线程机制较好的多处理器的系统上，程序可以获得更多的处理时间）。
wallpaper	/n./ \n1.包含了某个列表或记录的文件，特别是那种包含了部分或全部登陆会话的记录文件。（之所以起名为墙纸，是因为一般来说这种文件的价值只在于糊墙，斯坦福大学的学生就常这么干。）不过现在这个用法不常见了，因为其他系统对这种文件有特定的名称（比如在TWENEX上就叫做PHOTO）。但Unix世界还没有别的名称替代它，估计会一直这么叫下去。这个术语应该起源于ITS，他们的系统里，这种文件的开始和结束命令分别是:WALBEG 和 :WALEND，这种文件的默认名就是WALL PAPER。\n2.指的是图形界面工作站的后台模式（这是Windows的图形界面下一个与MS-DOS相对的术语）。\n3.墙纸文件。
wango	/wang'goh/ /n./ 二进制层次上的一些繁琐工作，经常和mumble连用。例句“你在用处理器调试那个.o文件（一种编译后的二进制文件，字面直译是对象文件），真是华丽的面向对象方法啊”
wank	/wangk/ /n.,v.,adj./ 牛[哥伦比亚大学用语：可能源于英联邦俚语“wank”-手淫的意思]黑客常用它指代很牛的技术或非常聪明的黑客。有时指有不正当目的的黑客行为，有时指比较正面的“wizard”。形容词“wanky” 用来描述一些特别聪明的人或精巧的东西比如人、程序、算法。如果有很多wanks参与，可以说“会话变得wanky”，“wankiness”的过量可以由wankometer的过载来显示（与bogometer相比）。当wankometer过载时，会话的主题必须做出调整或者所有的非wanks必须离开。参见`neep-neeping' (under neep-neep).用法：限于美国。在英国或英联邦这个词极其下流，最好不要用，除非你打定主意要冒犯别人。
wannabee	/won'*-bee/ /n./ (更正规的写法是`wannabe')[来自于一个用来形容麦当娜的歌迷的词，这些歌迷穿着、说话、做事都极力模仿麦当娜；也可能来自于飞车党的一个俚语]意思是想成为黑客的人。这个词用在不同的地方含义是很不一样的。用在一个初学者身上，表明对他的表现还是比较满意的。虽然有点轻蔑之意，但别忘了黑客都是一步步从菜鸟走过来的。这个词要是用到一些比较专业的程序员，学者，作家的身上，就完全是贬意的了。暗示这个人虽然处处模仿，看着像个黑客，但实际上根本算不上。一个人如果过度使用本词典的词语通常表明他是个wannabee。请与newbie比较。\n一点历史的注解：模仿黑客的现象，现在（1993）和10多年前是不太一样的。现在黑客社区的大牛，当年还都是菜鸟呢。他们大都是不知不觉，无意识的一步步走过来的。他们都是一些被黑客技术强烈吸引而自发聚集在一起学习交流的人，模仿黑客也是处于一种比较纯粹的技术崇拜，渴望拥有一些神奇的力量。但近些年来，特别是1980年个人电脑出现之后，黑客被媒体塑造成了某种英雄的的形象。于是一些人有意去模仿黑客的形象，为的是获得别人的崇拜，获得某种影响力。幸运的是，要模仿的像并不容易，得学一点技术才能变得“有魔力”。尽管如此，老辈的黑客还是对这种变化有些担忧。
war dialer	/n./ 一种破解工具，这种程序挨个拨打提供给它的一些电话号码，然后记录那些以握手协议的风格回应的号码（这些号码很可能是计算机或电信系统的接入点）。一些这类程序已经开发的相当专业，可以区分出调制解调器，传真机和专用小交换机，分类记录下来。这玩意儿是phreaker（电话黑客）必备工具，应该是从早期的demon dialer演化而来
warez	/weirz/ /n./ 被广泛用于破解者圈子里，它用来标记被破解的商业软件。黑客们都知道这个词，但一般自己不用。参见warez d00dz.
warez d00dz	/weirz doodz/ /n./ 这是一个软件破解者的群体，跟B1FF有很大关系。一个以前的破解高手，`Ozone Pilot'，写道：\nWarez d00dz非法获得一些有版权保护的软件，将其破解，在世界上发布。这个群体形成了一些惹是生非的小组，比如RAZOR等。他们的旗帜是发布最新的或盗版的软件。这个群体的人拼命追求的就是尽可能第一个把软件破解出来。这是他们证明自己能力的方式。这样他们就可以很得意的说“King's Quest IVXIX是我最先破解的，还是我厉害吧（直译是，显然我的睾丸比你们的大）”\n在warez d00d，最出风头的事情无疑是发布`0-day warez'，也就是在商业软件正式发布当天就将其破解并发布。warez d00d还有点收藏癖，包括游戏，色情图片，应用程序等等，即使是那些他们永远不会用的东西。这也是Ozone Pilot观察到的现象\n“归属感”是了解Warez d00dz需要知道的一个词。这个群体的人是很渴望归属感的，因为他们往往在真实世界中不太合群，只有在虚拟的网络空间才被接受。所以他们总是组成一些小组，如TGW, FLT, USA等等，这种组织可以给他们带来一种幸福感。但这些小组是不会起"Pink Daisy"之类的名字的。这种名字太不刺激了，没有Warez d00dz的味道。他们更喜欢用这类的名字：Doctor Death（法医）, Deranged Lunatic（疯子）, Hellraiser（猛鬼追魂）, Mad Prince（发疯王子）, Dreamdevil（梦中恶魔）, The Unknown（神秘人）, Renegade Chemist（变态化学家）, Terminator（终结者）, and Twin Turbo（turbo兄弟）。当他们隐藏在虚拟世界时，很喜欢这种邪恶的感觉。而在生活中，他们可能完全是另外一个形象，让100个人站在你面前，你要想找出其中那个网名为Hellraiser的人估计是最难的。
网络黑客和这写破解黑客的一大不同就是网络黑客多是单枪匹马。参见cracker, wannabee, handle, elite, weenie, spod\nwarlording	/v./ [源自Usenet group alt.fan.warlord]指撕去浮肿丑陋或衍生的sig block.它用于包括在BUAF中的签名、被滥用的sig quotes、丑陋的ASCII art、以及仅仅是签名过于大，此词源于一个有点类似B1FF的newbie（网络新兵）c.1991,他的签名很独特，不仅非常大而且是那种非常令人厌恶的ASCII码，看起来很想1981年John Milius电影Barbarian中的Conan之剑。alt.fan.warlord 这个团体名称是一种挖苦，warlording的独特模式也是一种极大的挖苦性赞扬。
warm boot	/n./ 参见boot
wart	/n./ 瘤。用于指软件中一些画蛇添足的特色，他们把清晰的设计搞的很丑陋。特别是一些与一般规则相异的例外。比如某些版本的csh（C Shell），单引号中的字符都看做字符本身（不做变量替换），但‘！’却是个例外，会被解释。在ANSI C中，‘??’用来在非英语环境下获取ASCII字符，这完全是画蛇添足。参见miswart
washing machine	/n./ 1.旧式的，放在那种落地大柜中的14英寸硬盘。这个柜子的大小和洗衣机很像，而且读写硬盘时，硬盘的盘片要旋转，也和洗衣机类似。有趣的是，这个词语已经超越了语言的界限，俄罗斯的黑客也喜欢用这个词。参见walking drives。另外与洗衣机对应，连接硬盘的电缆也被称为`bit hoses'（bit水管），参见hose的第三种含义\n2.[CMU（卡梅隆大学）用语]，一种专门用来washing software（重新编译程序）的机器。
washing software	/n./ 指的是将软件重新编译的过程（特别是指从头开始重新编译）。软件一般是分为多个部分独立编写的，重新编译是为了把各部分的新添加的内容整合到一起。
water MIPS	/n./ 参见MIPS的第二种含义。指那些需要用水来冷却的巨型机，比如今天的ECL-supercomputer flavor或者以前的mainframe
wave a dead chicken	/v./ 大致相当于汉语的“死马当活马医”。面对软件或硬件故障时，使用一些自己都觉得没戏的方法去试图解决。这样做只是为了向别人表示自己已经尽力了。例句：“那个问题段代码我最后再好歹试试吧，我总觉得是操作系统的bug”。参见voodoo programming, rain dance。
weasel	/n./ [剑桥用语]黄鼠狼。指的是有意无意做出些白痴或轻率的事情的人。大致和loser一个意思。
web pointer	/n./ 3w网址。参见hotlink，二者含义略有不同
webmaster	/n./ [这个词来源于postmaster（邮政大臣）]指是在网站上发布万维网基本信息的人。他们负责维护服务器的运转配置以及网页的更新。
wedged	/adj./ \n1. 指机器或程序被卡出，需要人帮忙才能继续处理。这和crashed（崩溃）有些差别，说一个系统崩溃的话，意味着它什么都不做了，完全死了。而说一个系统卡住时，它还是在尽力做，但是没有进展；他也能做一些事，但是不能被完全操控。比如两个进程发生死锁（deadlock）就会导致这种现象。参见gronk, locked up, hosed\n2. 指那些被某种思想蛊惑，像是中邪了的人。例句“那人完全中邪了，竟然相信通过参禅打坐就可以漂浮在空中”\n3. [Unix用语]用来形容终端的一种不响应状态，可能是由于终止了一个基于显示屏的程序或是其他诡异的原因。
wedgie	/n./ [Fairchild用语]指bug（程序的错误或缺陷）。可能和wedged相关。
wedgitude	/wedj'i-t[y]ood/ /n./ 被wedged（卡出）的状态，或是形容质量差，容易卡住
weeble	/weeb'l/ /interj./ [剑桥用语]通常指由于低级失误把事情搞砸。例句“我把插磁盘时把上下搞反了，结果把磁盘卡住了。” "Weeble...."参见gurfle
weeds	/n./ \n1.指开发一个没有实际意义的算法或工程。\n2.在CDC/ETA解散之前，go off in the weeds与IBM的branch to Fishkill或主流黑客的jump off into never-never land同义。
weenie	/n./ 1.[BBS用语]失败者，比B1FF稍强一点。典型的weenie是些十几岁的小屁孩，他们的网名大都是神话或重金属歌曲里一些很宏大的词。`the weenie problem'指的是一些无聊的水车，他们喜欢在新发现的论坛里到处灌水。\n2.[黑客用语]当这个词加个前缀时（比如Unix weenie, VMS weenie, IBM weenie），它的含义既可能是一种侮辱，也可能是一种夸奖，要根据上下文，说话的语气，以及说活人是否也是同类。表示一个把大量时间，精力都花在某个领域的人。至于是褒是贬，需要听者判断说话人对这个领域是什么态度了。\n3.分号。
Weenix	/wee'niks/ /n./ [ITS用语]Unix的贬义叫法，来自于Unix weenie。一个曾在ITS工作过的人解释说，“Unix系统只是那些Unix迷的偏爱罢了。模块化程度低，可靠性差，刚性文件删除，没有文件版本号，到处都对大小写敏感，那些Unix迷竟然还把这些都看做是优点”。（一些ITS的支持者似乎相信Unix剽窃了一些他们的特色。参见ITS的第二种含义）。
well-behaved	/adj./ \n1.[主要是MS-DOS用语]形容一个软件设计得很符合系统标准。这类软件调用系统来处理些琐事，比如键盘输入，分配内存画图等。与ill-behaved相对\n2.形容软件工作得很自然，没有一些与人直觉不符的结果。特别是指那些接口设计的简单清晰，功能也十分强大的软件。这种软件会被许多其他软件所使用。参见cat。
well-connected	/adj./ 与Well-known（著名）基本同义。
wetware	/wet'weir/ /n./ \n1.[可能来自与小说Rudy Rucker]湿件，指人类的神经系统，与电脑的硬件软件相对。例句“湿件一般有5~9个寄存器（人脑一般能够短时记忆5~9个东西）”\n2．与系统相关的人（比如程序员，操作员，管理员），与软硬件相对。参见liveware, meatware。
whack	/v./ 著名架构师James Gosling（曾设计过, GOSMACS and Java）对此词的解释是“在不知道一个程序的运行原理的情况下对其修改”（参见whacker）。如果修改的地方很小，边界很清晰，而且你很善于从上下文挖掘信息的话，这是完全可能做到的。一个例子是，你可以把标准错误流定向到标准输出流，而不改变其他的东西。
whacker	/n./ [马里兰大学用语：来自于hacker]1.和黑客有些类似，喜欢探索可编程系统的细节和扩展他们的能力。然而真正的黑客是和伟大的创造联系在一起的，而whacker往往会把系统或程序搞崩溃。他们还往往自以为是，一遇到点不太正常的状态就大呼小叫，不注意别人的感受。2.写程序很快但写得很烂的人
whales	/n./ 参见like kicking dead whales down the beach
whalesong	/n./ 鲸鱼的歌。PEP调制解调器在高速模式下发出的奇怪声音。这种声音和一般的V系列调制解调器的声音很不一样，任何人听过一次后都不会忘记。因为它听起来有点像鲨鱼的叫声，所以起了这样一个名字。也有人称之为"the moose call" 或 "moose tones"（麋鹿的叫声）。
What's a spline?	[XEROX PARC用语]这句话用来向别人请教一个可能比较白痴的问题。比如可以翻译为“你刚才说的那个术语我听到好多次了，我应该知道它的意思，然而我却不知道。虽然有点丢人，我还是想请你解释一下”。PARC有条帮规“即使是看起来很显然的问题也要大胆去问，别怕丢人”。
wheel	/n./ [来自语俚语`big wheel'，指重要的人]指拥有某些权限的人。BSD系统上权限最高的用户组习惯上命名为`wheel'（大部分其他系统上都习惯命名为root）。一些生产商，扩展了这种用法，比如某种Unix系统里，只有`wheel'组的成员可以把权限提升为根用户。
wheel bit	/n./ 特权标志位，在一个分时系统上决定处理器一些操作的权限，比如读写一个被保护的文件，修改或查看一个运行中的监视器的任何地址，重启系统，杀死或新建一个工作等。这个术语是从TENEX操作系统而来的，许多其他系统也这么用，如TOPS-20, XEROX-IFS。这种特权状态有时也称作`wheel mode'。这个术语在1980s中期进入了Unix世界，渐渐流行起来。
wheel wars	/n./ [斯坦福用语]特权战争。黑客文化幼稚时期，一些学生黑客喜欢相互搞破坏，比如把对方踢出系统或者删除对方的文件，有时可能造成很大的破坏。
White Book	/n./ \n1.指K&R\n2.Adobe页面描述语言系列的第四本书，解释了先前保密的类1字体格式。书名是"Adobe Type 1 Font Format, version 1.1", (Addison-Wesley, 1990, ISBN 0-201-57044-0).参见Red Book, Green Book, Blue Book
whizzy	/adj./ [也写作`wizzy'，Sun公司用语]用来形容一个cuspy的程序，这种程序的特色之一是丰富和良好的表达。
wibble	[英国用语]1. 通常指网上新闻后面的评论中与新闻内容无关的，灌水聊天的内容。请与humma比较。\n2.英国人常用的一个metasyntactic variable（语法占位词），相似的还有wobble, wubble, flob（来源于一个喜剧"Blackadder"）。
WIBNI	/n./ [贝尔实验室用语：Wouldn't It Be Nice If（如果……肯定会更好的）的缩写]贝尔实验室的文件里到处是这个词。请与IWBNI比较。
widget	/n./ \n1.简化模型。在教学中（特别是数据库教学）代表真实对象的一个简化模型。
wiggles	/n./ [科学计算用语]在用有限差分或者类似方法解偏微分方程时，wiggles是在网格上的最短波长的振荡锯齿。如果一个算法很不稳定，那么波形也最不稳定，最后振荡使得数值解完全没有意义。相反，稳定的wigless（虽然可能不精确但是）可以由Gibbs现象在不连续点附近产生。
WIMP environment	/n./ [同义词：Window, Icon, Menu, Pointing device 或下拉菜单]一个图形人机交互界面环境，例如X或Macintosh界面，这个词一般是那些喜欢命令行界面，追求扩展性和灵活性的黑客使用。但是，此词也并非总是贬义，碰到时须根据环境判断其具体色彩和意思，参见menuitis, user-obsequious.
win	[MIT用语]\n1，成功。如果一个程序运行中没出什么意外，特别是通过了充分的稳定性测试而没有意外发生\n2，成功或成功的起因，一个满意的输出。“这个表明我可以用lexer生成器代替手工编译我自己的模式识别器。What a win”，还有moby win', `super win', `hyper-win' (感叹性回答).因为某些原因,‘suitable win’也在MIT常用，常指对问题的满意解答。与lose反义，参big win，并非完全是win的加强语。
win big	/vi./ 意外地惊喜。例：我去购物并且won big，那里有个买一送一活动。参big win.
win win	/excl./ Expresses pleasure at a win. \n碰到win时表达喜悦之情
Winchester	/n./ 密封的磁盘驱动器（磁头在其中平贴在磁盘表面，由一层空气垫做保护）的非正式衍生语。Winchester是后来成为双30兆容量IBM3340的1973年工程注模的名称。30—30成为Winchester是因为某人注意到著名的winchester步枪与其相似之处（30的口径，30的毛重），也有人称winchester仅是因为这种磁盘技术在winchester实验室发展出来的。
windoid	/n./ 在Macintosh世界里一种相对较简洁的窗口（较小或没有标题栏，zoombox等）
window shopping	/n./ [美国地质调查用语]指类似X或Macintosh这样WIMP environment（图形界面）用户体验新的窗口颜色字体或者滑块形状。这种行为占用很多时间却远没什么实际用处。例“我花了一个下午来window shopping直到我找到了最酷的绿色阴影的窗边，现在它和我的淡蓝色背景最相配”。深度的window shoppers甚至许多天都在用bitmap编辑器来创造新的不同的滑块和背景。也用作window dressing。参见fritterware,与macdink比照。
Windoze	/win'dohz/ /n./ 参见Microsloth Windows
winged comments	/n./ 命令行的同行注解，与boxed comments相反，在c语言中，比如：\nd = sqrt(x*x + y*y);  /* 到原点的距离 */\n通常这仅指同行的注解。
winkey	/n./ 也用作winkey face，参emoticon.
winnage	/win'*j/ /n./ 错误被纠正或别的成功的情形
winner	1，没想到的好形式，程序，程序员或人\n2，用于real winner，常含讽刺义，但有时用于高度赞扬（参见在user下的注释），例“他是一个real winner——从来都是在重复犯错后才报告bug”
winnitude	/win'*-t[y]ood/ /n./ 有winning能力的品质，“猜，他们调整了微码，现在LISP interpreter运行速度是过去的两倍”“太好了，boy，what winnitude”“呀，我可能会在下次运行中获得半小时的winnage”。但很奇怪，lossitude很少用作其反义词。
wired	/n./ 参hardwired
wirehead	/wir'hed/ /n./ [可能源于科幻小说中脑电刺激沉迷的俚语]1.指专注于硬件尤其是通信硬件的黑客。\n2.局域网专家，wirehead也可指总能应付网络硬件的网络软件包。比如，Wireheads因其能用一个备用电阻做成一个太网终结器而著称
wirewater	/n./ 同义于programming fluid。它融合了主流俚语‘wired’（被刺激德，过度兴奋的）和‘firewater’的意思。但它常指咖啡因而非酒精饮料。
wish list	/n./ 期望的特性或者漏洞修补列表，它们经常因为编译者太忙或者没有想好如何做而可能很长时间内都无法完成。例“好，我会把文件自动命名工具添加到wish list中”。对比tick-list features
within delta of	/adj./ 参见delta.
within epsilon of	/adj./ 参见epsilon.
wizard	/n./ \n1.熟悉某个复杂软件或硬件的人，特别是遇到紧急情况时能够很快地解决问题的人。但这种人如果只是对那个特殊的软硬件比较了解，还算不上黑客。而一个黑客只要肯花时间学习，就可以成为那方面的wizard\n2.有权做一些一般人不被允许做的事情的人；系统中的特权用户\n3.Unix专家，特别是编程专家。一些公司或猎头把`Unix Wizard'当作一个职位的头衔。参见guru, lord high fixer, deep magic, heavy wizardry, incantation, magic, mutter, rain dance, voodoo programming, wave a dead chicken
Wizard Book	/n./ 指一本书"Structure and Interpretation of Computer Programs"（《计算机程序设计与解释》）。这是一本MIT出版的极品计算机入门教科书。因为这本书的封面是一个巫师（wizard），所以被称作Wizard Book。这本书算是LISP/Scheme界的圣经。它也被称作Purple Book（紫皮书），不过不常见。
wizard mode	/n./ 神奇模式[来自于rogue]程序或系统的一种特殊访问模式，通常需要口令认证。在这种模式下，用户有权做任何事情。这个词常用在一些可修改参数的游戏。
wizardly	/adj./ 邪乎。与wizard（巫师）有关的。邪乎的功能是只有wizard（巫师）才能正确理解和使用的功能。
wok-on-the-wall	/n./ 墙上的锅。指的是一种微波天线，用来搭建跨校园的网络。因为这天线和中国的锅很像，所以起了个这名字。
womb box	/n./ \n1.[TMRC用语]存放设备的地方\n2.一种硬壳设备箱。箱里用缓冲材料围成设备的形状，保护设备。俗称飞行箱。一般用来装精密的测试仪器或乐器。
WOMBAT	/wom'bat/ /adj./ [Waste Of Money, Brains, And Time（浪费金钱、大脑和时间）缩写]形容一个问题不仅非常无趣，而且即使解决了也不会给任何人带来帮助。参见crawling horror, SMOP PDP-11的数据库程序DATATRIEVE选择wombat（树袋熊）作为吉祥物；这个程序的帮助文件中关于"HELP WOMBAT"（帮助树袋熊）的内容确实是关于树袋熊的一些信息。
wonky	/wong'kee/ /adj./ [来自澳大利亚俚语]是broken的另一个近似同义词，尤指精神错乱导致的发疯，幽默，或者可笑的固执。也用作“wonked out”参见funky, demented, bozotic.
woofer	/n./ 滑铁卢大学用语，一些比较宽的纸，能让打印者在左边打8.5英寸的穿孔且当文字小于80列时可以撕掉右边部分（就是我们平常用的活页穿孔纸）。左边能撕掉的部分叫做“woofer”，这个术语从1972年开始在滑铁卢大学使用，但别的地方很少知道。在音频类行话中，指在hi-fi上的低音炮。
workaround	/n./ \n1.一个暂时的kluge，用于在一些系统中绕开，屏蔽或者避开一个bug或misfeature。理论上，workround总是被fix取代，但在实际中，客户经常发现自己与workround长期共存。\n2，一个进程，被用户采用来实现一些机器不忙时才需做的任务。假设的例子：用META-F7 crashes 4.43 build of Weemax，但是作为一种workround，你可以先control R， 然后SHIFT-F5，并且删除剩余的cruft
working as designed	/adj./ [IBM用语] \n1.遵照一种错误或不恰当的规格，虽然它很有用但是是设计错误的 \n2. 经常被用于讽刺性的评述一个程序的功能\n3．也经常用于不接受批评或建议时的托辞，在IBM， 这个意思被用于非官方文件中，参BAD。
worm	/n./ 蠕虫。[来源于John Brunner的小说The Shockwave Rider（冲击波骑士）中的tapeworm]一种能够通过网络复制和传播自己的程序。请与virus比较。如今这个词完全是贬义的了，一般认为蠕虫都是恶意黑客编写的。最著名的蠕虫大概是Robert T. Morrisq1988年写的Internet Worm，它是第一个破坏力极大的蠕虫，仅在美国就感染了上百台Suns和VAXen。参见cracker, RTM, Trojan horse, ice, Great Worm, the。
wormhole	/werm'hohl/ /n./ [来自于广义相对论中著名的’wormhole’（虫洞）]1.监视器上显示进程地址的位置，用来快速的切换进程。这个术语有些过时了。现在的操作系统中这种技术使用的更为广泛，但是通常叫做设备表，跳转表之类。\n2.[便携收音机爱好者用语]通过商业卫星连接起来的多个业余VHF（超高频）的网络。叫做虫洞的原因是数据穿越了很大的距离，但在报头上路由信息很少。请与gopher hole的第二种含义比较。
wound around the axle	/adj./ 处于死循环之中。
wrap around	/vi./ （名词形式是wraparound，作为及物动词可简写为wrap）\n1.[术语] 指的是计数器的值超过最大值之后又从0（或最小值）开始继续计数\n2.逐渐并持续的改变状态——通过保持超过24小时的稳定的“激活-休眠”循环，例如，一周内生存6“长天”（每天28小时），或者等价的，以10微赫兹的频率进行休眠。这种概念又被称为“相包装”（phase-wrapping）。
write-only code	/n./ 只写代码[模仿`read-only memory'(只读存储器)而来]指的是结构混乱，复杂的代码，除了作者之外很难理解，更不可能对其进行修改（可能连作者本人都无能为力）。
write-only language	/n./ 指的是语法（或语义）繁多而怪异的编程语言。用这种语言编写出来的有点意义的程序必然是write-only code。偶尔也有人把C语言或APL语义称作write-only language，事实上INTERCAL和TECO更算是write-only language。
write-only memory	/n./ 与"read-only memory"相对。其实是一个joke。
Wrong Thing	/n./ 一个明显错误或不合适的决定，行为或设计。通常写作大写，读的时候也会重音强调。与Right Thing相反。或者说任何不是Right Thing的东西都可以称为Wrong Thing。因为某种意义上，the good is the enemy of the best（良好是完美的敌人），只要不是最好的的就是Wrong Thing。
wugga wugga	/wuh'g* wuh'g*/ /n./ 形容一个程序在完成一个沉闷的或困难的任务。这是虚构的一个象声词。
WYSIAYG	/wiz'ee-ayg/ /adj./ What You See Is All You Get（你只能得到你所看到的）的缩写，这是一个所见即所得（WYSIWYG）的一个变体，一个贬义的变体。“点击”风格界面的系统一般上手很快，但是缺乏深度，这会让那些习惯于命令行风格界面的高级用户很不舒服。这个时候，他们就会说这是个WYSIAYG问题。这个词通常用来形容文档编辑器，或文字处理程序。例如，这种风格的`desktop publishing'（桌面排版系统）对于创建一些小文档，添加些图片、艺术字体是很方便的。然而如果是编辑一本书之类的大家伙，那么很快就能发现WYSIAYG的不足。
WYSIWYG	/wiz'ee-wig/ /adj./ 所见即所得。What You See Is What You Get的缩写。一种用户界面风格，与命令行风格相对。但实际中真正实现所见即所得的系统少之又少。因此有了许多变体形容实际中打了折扣的所见即所得，如WYSIAWYG (What You See Is Almost What You Get)（所见的基本上是所得的），WYSIMOLWYG (What You See Is More or Less What You Get)（所见与所得差不多），这些都略带贬义，通常指那些小儿科的面向初学者的号称界面友好的系统。而黑客们是从来不害怕那些纯命令行界面的系统的。不过另一方面看，EMACS可以算是第一个所见即所得的编辑器，代替了极其纯粹的命令行界面的TECO。参见WIMP environment。[很令人费解的是，WYSIWYG已经被收录到了OED（牛津词典），不过是小写形式—ESR] 
X	/X/ /n./ \n1.口语或书面语都有这种用法，表示“某”，具体某个什么要参照上下文（可以与N相比较）。比如680x0表示的就是68000，68010，68020，68030或68040；80x86表示80186，80286，80386，80486（Unix黑客也很可能写作680[0-4]0，80[1-4]86或680?0，80?86，参见glob）\n2.[得名于一个早期视窗系统X]一种过于庞大，过于复杂，过度设计的视窗系统。它由MIT开发，在Unix系统里广泛使用。
==== XEROX PARC	/zee'roks park'/ /n./ 著名的帕罗阿尔诺研究中心。在1970s到1980s的十多年间，这个中心推出了数量惊人的软硬件创新，包括鼠标，视窗，图标风格的程序界面，激光打印机，局域网，以及个人电脑的先驱——D系列主机。但不幸的是这些产品都是在其他公司才获得了成功。这样的例子太多了，以至于大家常说帕罗阿尔诺研究中心是一个产生天才想法的地方，只不过是帮别人想。\n有一本书剖析了帕罗阿尔诺研究中心高层的短视和迟钝，书名叫"Fumbling The Future: How XEROX Invented, Then Ignored, the First Personal Computer"（《擦肩而过：帕罗阿尔诺与个人电脑》）作者是Douglas K. Smith and Robert C. Alexander
XOFF	/X-of/ /n./ 与control-S同义
XON	/X-on/ /n./ 与control-Q同义
xor	/X'or/, /kzor/ /conj./ 抑或。A xor B，表示A或者B但不能是二者全部。这是一个逻辑运算符。
xref	/X'ref/ /v.,n./ 黑客特色的缩写，表示cross-reference（交叉引用，前后参照）
XXX	/X-X-X/ /n./ 一个提醒读者注意的标志。通常用在代码的注释中。一些黑客也以此来表示重口味的色情电影。参见FIXME
xyzzy	/X-Y-Z-Z-Y/, /X-Y-ziz'ee/, /ziz'ee/, or /ik-ziz'ee/ /adj./ 产生于一个名为ADVENT的游戏。这是其中的一个作弊码。这个游戏的情节是在一个有好多房间的地洞里寻找，收集财宝。当你在合适的时机输入‘xyxxy’时，你可以在两个遥远的地点间瞬移。所以当你遇到一些诡异的事情时，可以用‘xyxxy’来表示。\nWindows系统平台的一个著名游戏minesweeper（扫雷艇）也有这样的作弊码`xyzzy<enter><right-shift>'，输入后移动光标时，有炸弹的地方就可以显示出不同的颜色。
YA-	/abbrev./ [Yet Another(另一个)的缩写]始作俑者是Unix的yacc（Yet Another Compiler-Compiler）。参见YABA
YABA	/ya'b*/ /n./ [剑桥用语]Yet Another Bloody Acronym的缩写，血淋淋的缩写。指某个很费解的首字母缩写。参见TLA.
YAFIYGI	/yaf'ee-y*-gee/ /adj./ [与YSIWYG（所见即所得）相反]形容一种基于命令行的，比如ed/vi/nroff/TeX风格的文本编辑器或其他用户界面，是“You asked for it, you got it”（你要什么，你就有什么）的缩写。这种界面通常是被“真正的程序员”所喜爱，一般是出于灵活性的追求。\n"You asked for it, you got it"最早出现在Ed Post的打油诗“Real Programmers don't use Pascal”（真正的程序员绝不用帕斯卡语言）（参见Real Programmer）。缩写是后来才有的。
YAUN	/yawn/ /n./ [`Yet Another Unix Nerd'(另一群Unix迷)缩写]产生在圣地亚哥计算机社区，一种对于Unix迷的略带恶意的称呼。
Yellow Book	/n./ 黄皮书，类似于这本字典的东东。参见book titles
yellow wire	/n./ [IBM用语]备用的连接线，当连接线被冒失鬼碰掉，或被维修工程师错误剪断时使用。参见blue wire, purple wire, red wire
Yet Another	/adj./ 另一个[用法起源于Unix的yacc]\n1.用来形容自己的工作时，这是一种幽默的说法，表示这个工作的主题并不是原创的，但内容是原创的。\n2.用来形容别人的工作时，表示这个工作是一种有些泛滥的东西\n参见YA-, YABA, YAUN
YKYBHTLW	/abbrev./ `You know you've been hacking too long when...'（当……时，你就知道你算个老黑客）的缩写。这是Usenet的一个alt.folklore.computers小组在讨论JargonFile时创造的一个词汇 
YMMV	/cav./ Your mileage may vary的缩写，在Usenet很常见的用法
You are not expected to understand this	[Unix] /cav./ “不期望你能理解……”，一种经典的句式，形容某个东东太神奇或复杂，解释起来很麻烦（因此不愿解释）。最早出现在臭名昭著的对V6 Unix内核中上下文切换代码的注释中。
You know you've been hacking too long when...	典型黑客的判断标准，至少包括以下几点：\n1.查看电子邮件比查看家里的邮箱更频繁，电邮地址也比家庭住址记得更清楚。\n2.SO（密友）吻你的脖子时，你第一反应是优先级错了。\n3.你结账时，会以8进制进行计算。\n4.你花在电脑上的钱比你花在汽车上的多十倍。\n5.你的世界里，整数指的是2的方幂而不是10的。\n6.你不止一次梦见自己在编程序。\n7.你最好的朋友中有一大半从没见过面。\n早期的版本把这些称为“确信无疑的黑客标志”，事实上真正的黑客也很难指出这个标志是什么。至于以8进制来计算账单纯粹是凭空瞎说的。
Your mileage may vary	/cav./ “你的实际油耗可能会有差别”。[产生于美国汽车商经典的对于每公里油耗的免责说明]\n1．Unix免费软件中常见的免责说明，大意就是“我已经尽力了，但也难保在你的系统上就不会出问题”。\n2．更一般的，用在向别人提建议的时候，也算一种免责的提示。例如“我觉得送花能搞定，不过你送的话也未必哦”
Yow!	/yow/ /interj./ [产生于一部漫画"Zippy the Pinhead"]这是一个黑客偏爱的，用来表示惊讶或强调的词。参见gurfle
yoyo mode	/n./ 忽忽悠悠。形容系统在高低状态间快速的转换。有趣的是许多厂商会在Unix用户协会的展览会上免费展示这种奇观。
Yu-Shiang Whole Fish	/yoo-shyang hohl fish/ /n. obs./ 鱼香全鱼。这是个中国菜名，不过作为一个黑客词汇指的是一个十分有趣的希腊字符。它看起来就像一条小鱼。这个字符主要是MIT的人在用，因为他们的LISP机器上可以显示这个字符。之所以编写这个词条是为了打消没有亲眼见过这个字符的人的怀疑。
zap	1.名词。辛辣的感觉。\n2.动词。使食物辛辣。\n3.动词。用辛辣的食物来捉弄别人。\n4.动词。修改修正。经常用在使用编译器或修补工具的时候，暗示把精确程度提高到令人难受。比如"Zap the debug level to 6 and run it again."（把编译器的报错级别改为6，然后重新运行）。在IBM大型机上，这种补丁工具被称作“superzap”（超级辣）\n5.动词。擦除，重置。\n6.动词。表示静电对芯片的破坏。
zapped	/adj./ 辛辣。用于区别温度的热（hot）和食物辛辣导致的热。比如中餐的开胃品棒棒鸡虽然是凉菜但是很辣。相反馄饨很热但不辣。参见oriental food, laser chicken以及zap的第1，2种用法
zen	/vt./ 顿悟。突然的一个思想火花。通常用在为程序除错的时候。与之相对的是grok，表示冥思苦想很久。参见guru
zero	/vt./ 1.置0。通常指的是把一小块数据如一些bits或words\n2.擦除。指的是把磁盘或文件夹下的所有数据删除掉，而并不意味着把相应的数据改写为0.通常这种删除指的是逻辑上删除而不是物理上的删除。参见scribble
zero-content	/adj./ 废话。Syn. content-free. 
Zero-One-Infinity Rule	/prov./ 零-一-无限。一种程序设计的法则。要求程序设计者对某个元素（如文件名的长度，系统可以打开的窗口数）数量进行约束时，要么是0要么是1要么就是无限。\n这条法则背后的逻辑是这样的：生活中有明确的一个例外的情况是很常见的。然而如果进一步设定有多于1个的例外，比如N个的话，人们自然会想为什么不是N+1。因此多于1往往意味着无限。
zeroth	/zee'rohth/ /adj./ 表示第一个。多用在软件设计，用法来自于C，LISP等语言。这些语言中数组的下标是从0开始的。经常跟硬件打交道的人也习惯从0开始计数。这是很自然的，因为8比特二进制数有256个，对应的是0~255，而电子计数器就是这样数数的。\n黑客和计算机科学家写书时也喜欢把最初的一章，命名为第0章，特别是当这一章主要是些介绍性内容的时候（比如K&R第一版）。近些年这种风格在纯数学的书籍中也很流行（不过纯数学家从0开始计数的习惯的形成和前者并不相同）。从0开始计数可以减少一些“fencepost error”（栅栏错误），但不能完全避免。
zigamorph	/zig'*-morf/ /n./ \n1.十六进制的FF，用作定界符或栅栏（fence）符。主要用在IBM\n2.统一字符编码中的U+FFFF,这个编码不与任何字符对应，用作字符串的结束码。（统一字符编码是一种16比特的字符编码方案，目标是覆盖所有人类的文字符号，包括罗马，希腊，西里尔，汉语，平假名，片假名，埃塞俄比亚，泰语，老挝语等等。精灵语（elvish）将来也会被支持）
zip	/vt./ [主要用在MS-DOS]Zip压缩。使用PKWare的PKZIP或其他兼容的工具来把一些文件做成一个压缩包。
zipperhead	/n./ [IBM用语]指一个思维封闭的人
zombie	/n./ [Unix用语]僵尸进程。指一个已经结束，但是还没有释放进程槽的进程（因为它的父进程还没有调用wait(2)）。这些进程偶尔可以通过ps(1)看到。
zorch	/zorch/ \n1. [TMRC用语]动词。使用逆向散热片来攻击。\n2. [TMRC用语]动词。高速运动，接近光速。\n3.[MIT用语]动词。指快速的推进某件事情。\n4.[MIT用语]名词。影响力，精灵币，人品。比如“我不能再让他做那个了；我这周的人品都用完了”。\n5.[MIT用语]名词。能量，动力或能力。\n6.[MIT用语]动词。考试考砸了。
Zork	/zork/ /n./ 历史上第二个计算机幻想游戏的尝试。参见ADVENT。最初是1977-1979年在MIT-DM编写的，后来发布了BSD Unix版本（没有源码，只是打了补丁的RT-11 FORTRAN编译文件。参见retrocomputing）。Infocom商业化时命名为The Zork Trilogy。FORTRAN源码后来被改写为便于移植的形式，以Dungeon为名发布。
zorkmid	/zork'mid/ /n./ 黑客编写的游戏中典型的货币，最早出现在Zork中。
<bobbit>	/n./ 通常用在在回复的信息中，表示省略掉的原文（在回复中不把原文全部复制下来通常被认为是个好习惯）。
4.2	/for' poynt too'/ /n./ 虽然没有前缀，但他几乎总是表示BSD Unix的4.2版本。习惯上很少用version 4.2或release 4.2来表示；较为常用的表示还有4.2BSD或BSD 4.2（相对使用较少）。4.3，4.4以及较早的4.1也类似理解。
'Snooze	/snooz/ [FidoNet]/n./ 飞度（FidoNet）新闻，是飞度网官方的在线周刊。由于飞度新闻的编辑原则是“收到什么就发表什么”，所以通常有大量与飞度网完全无关的文章，这些文章通常引出大量废话。
(TM) 	// 这是商标上标符号的ASCII码表示。把这个符号添加在一段话后面表明这段话很有价值，值得被后人记下来（或许值得加入这部字典的后续版本）。有时也有反讽的含义，表示对当前软件和算法模式以及图形用户界面的泛滥的一种反感。参见UN*X
-oid	/suff./ 这个后缀来自于android（机器人）。\n1.在主流英语中，这个后缀有模仿，假冒的含义。黑客很乐意把它用在各种非古典或拉丁的词干后，这是和主流英语很不同的。比如nerdoid表示那种表面上很像电脑迷，但实际上差很多的人。类似的还有modemoid，computeroid，keyboid\n2．表示像机器人，这在过去是局限在科幻小说和黑客界的一个概念，直到1991年才渐渐走向大众（那些被终端机的时尚外观欺骗的人一定都知道trendoid）。这种用法可能起源于星球大战中常用的词语droid（参见windoid）\n这两种造词法在科幻小说中已经使用了50年以上，黑客（通常是科幻迷）也是同时开始用后缀“-oid”来制造新词的。
-ware	/suff./ 该后缀来自于‘software’，通常用来构造表示一类软件的术语。如careware, crippleware, crudware, freeware, fritterware, guiltware, liveware, meatware, payware, psychedelicware, shareware, shelfware, vaporware, wetware
/dev/null	/dev-nuhl/ /n./ [来自于Unix系统中的空设备，用作一种数据接收装置]形象的表示一个信息黑洞，参见bit bucket
0	数值上的0，与英文字母O相对。由于他们看起来太像了，各种系统对它们的显示做了一些调整。\n如果数值0的中心加了一个小点，而字母O没有，或者数字0看起来比较方，字母O比较圆，你使用的应该是比较现代的字符显示系统（中心加点的数字0最早是在IBM3270中作为一种备选方式的）。\n如果数字0上下很尖，而字母O不是的话，你使用的很可能是老式的ASCII图形集。这种显示方式是从著名的ASR-33电报交换机继承而来（斯堪的纳维亚人肯定很讨厌这种显示方式，因为会和他们的字母表产生混淆）。\n如果字母O中间有一个斜线“/”，而数字0没有的话，你使用的应该是一种非常古老的显示方式，主要用在IBM和其他一些巨型机的厂商（很不幸，这种显示会让斯堪的纳维亚人更加头疼）。\n一些Burroughs/Unisys系统在数字0中间加一个反斜杠“\”来与字母O区别。\n还有一些早期的打印机给字母O添加一个尾巴或钩子来与数字0区别，但这样又会跟字母Q或草体的大写O有些相似（这是ANSI为ASCII字符显示征集标准时的一个草案中提出的，但后来最终被修改为在左上角加一个标记）\n听你这里，你们头大了么？
1TBS	// /n./ “One True Brace Style”的缩写。参见indent style
120 reset	/wuhn-twen'tee ree'set/ /n./ [这个词来自于美国的壁电压是120伏]。通过动力循环来重启系统。
2	/infix./ 在黑客写的转换软件中，中间的插入词2通常代表英文单词“to”（因为发音一样），表示“转换为”的含义.比如int2string表示从整数型转换为字符串类型
@-party	/at'par`tee/ /n./ [来自于网络地址的@符号（也写作@-sign party）]。这是一种半开放的科幻黑客的聚会(例如一年一度的世界科幻大会Worldcon).参加者必须拥有网络地址（参见network address）或者至少得和这样的人关系很近。这是黑客们面对面交流的最好机会，其他时候对方往往只是他们电脑屏幕上的一个点。请比较boink\n有记录的第一次这种聚会是1980年7月4日在Westercon 举行的。后来不知确切什么时候举办地点改在了Worldcon，但可以确定是1983年
@Begin	// 参见 杠begin
\begin	// [来自于LaTeX（一种排版软件）命令]这是一种幽默的写法，告诉读者下面要开始一段新的内容。\n还有许多类似的用法，如速记符号@Begin/@End；新闻组中使用的<FLAME ON>，<FLAME ON>或#ifdef FLAME ，#ifdef FLAME

